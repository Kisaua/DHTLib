

Microchip Technology PIC LITE Macro Assembler V1.21 build 54009 
                                                                                               Fri Aug 22 19:56:23 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	16F88
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     	;# 
    44  0001                     	;# 
    45  0002                     	;# 
    46  0003                     	;# 
    47  0004                     	;# 
    48  0005                     	;# 
    49  0006                     	;# 
    50  000A                     	;# 
    51  000B                     	;# 
    52  000C                     	;# 
    53  000D                     	;# 
    54  000E                     	;# 
    55  000E                     	;# 
    56  000F                     	;# 
    57  0010                     	;# 
    58  0011                     	;# 
    59  0012                     	;# 
    60  0013                     	;# 
    61  0014                     	;# 
    62  0015                     	;# 
    63  0015                     	;# 
    64  0016                     	;# 
    65  0017                     	;# 
    66  0018                     	;# 
    67  0019                     	;# 
    68  001A                     	;# 
    69  001E                     	;# 
    70  001F                     	;# 
    71  0081                     	;# 
    72  0085                     	;# 
    73  0086                     	;# 
    74  008C                     	;# 
    75  008D                     	;# 
    76  008E                     	;# 
    77  008F                     	;# 
    78  0090                     	;# 
    79  0092                     	;# 
    80  0093                     	;# 
    81  0094                     	;# 
    82  0098                     	;# 
    83  0099                     	;# 
    84  009B                     	;# 
    85  009C                     	;# 
    86  009D                     	;# 
    87  009E                     	;# 
    88  009F                     	;# 
    89  0105                     	;# 
    90  010C                     	;# 
    91  010D                     	;# 
    92  010E                     	;# 
    93  010F                     	;# 
    94  018C                     	;# 
    95  018D                     	;# 
    96  0000                     	;# 
    97  0001                     	;# 
    98  0002                     	;# 
    99  0003                     	;# 
   100  0004                     	;# 
   101  0005                     	;# 
   102  0006                     	;# 
   103  000A                     	;# 
   104  000B                     	;# 
   105  000C                     	;# 
   106  000D                     	;# 
   107  000E                     	;# 
   108  000E                     	;# 
   109  000F                     	;# 
   110  0010                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0013                     	;# 
   114  0014                     	;# 
   115  0015                     	;# 
   116  0015                     	;# 
   117  0016                     	;# 
   118  0017                     	;# 
   119  0018                     	;# 
   120  0019                     	;# 
   121  001A                     	;# 
   122  001E                     	;# 
   123  001F                     	;# 
   124  0081                     	;# 
   125  0085                     	;# 
   126  0086                     	;# 
   127  008C                     	;# 
   128  008D                     	;# 
   129  008E                     	;# 
   130  008F                     	;# 
   131  0090                     	;# 
   132  0092                     	;# 
   133  0093                     	;# 
   134  0094                     	;# 
   135  0098                     	;# 
   136  0099                     	;# 
   137  009B                     	;# 
   138  009C                     	;# 
   139  009D                     	;# 
   140  009E                     	;# 
   141  009F                     	;# 
   142  0105                     	;# 
   143  010C                     	;# 
   144  010D                     	;# 
   145  010E                     	;# 
   146  010F                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000D                     	;# 
   160  000E                     	;# 
   161  000E                     	;# 
   162  000F                     	;# 
   163  0010                     	;# 
   164  0011                     	;# 
   165  0012                     	;# 
   166  0013                     	;# 
   167  0014                     	;# 
   168  0015                     	;# 
   169  0015                     	;# 
   170  0016                     	;# 
   171  0017                     	;# 
   172  0018                     	;# 
   173  0019                     	;# 
   174  001A                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008F                     	;# 
   184  0090                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  018C                     	;# 
   201  018D                     	;# 
   202  0000                     	;# 
   203  0001                     	;# 
   204  0002                     	;# 
   205  0003                     	;# 
   206  0004                     	;# 
   207  0005                     	;# 
   208  0006                     	;# 
   209  000A                     	;# 
   210  000B                     	;# 
   211  000C                     	;# 
   212  000D                     	;# 
   213  000E                     	;# 
   214  000E                     	;# 
   215  000F                     	;# 
   216  0010                     	;# 
   217  0011                     	;# 
   218  0012                     	;# 
   219  0013                     	;# 
   220  0014                     	;# 
   221  0015                     	;# 
   222  0015                     	;# 
   223  0016                     	;# 
   224  0017                     	;# 
   225  0018                     	;# 
   226  0019                     	;# 
   227  001A                     	;# 
   228  001E                     	;# 
   229  001F                     	;# 
   230  0081                     	;# 
   231  0085                     	;# 
   232  0086                     	;# 
   233  008C                     	;# 
   234  008D                     	;# 
   235  008E                     	;# 
   236  008F                     	;# 
   237  0090                     	;# 
   238  0092                     	;# 
   239  0093                     	;# 
   240  0094                     	;# 
   241  0098                     	;# 
   242  0099                     	;# 
   243  009B                     	;# 
   244  009C                     	;# 
   245  009D                     	;# 
   246  009E                     	;# 
   247  009F                     	;# 
   248  0105                     	;# 
   249  010C                     	;# 
   250  010D                     	;# 
   251  010E                     	;# 
   252  010F                     	;# 
   253  018C                     	;# 
   254  018D                     	;# 
   255  0000                     	;# 
   256  0001                     	;# 
   257  0002                     	;# 
   258  0003                     	;# 
   259  0004                     	;# 
   260  0005                     	;# 
   261  0006                     	;# 
   262  000A                     	;# 
   263  000B                     	;# 
   264  000C                     	;# 
   265  000D                     	;# 
   266  000E                     	;# 
   267  000E                     	;# 
   268  000F                     	;# 
   269  0010                     	;# 
   270  0011                     	;# 
   271  0012                     	;# 
   272  0013                     	;# 
   273  0014                     	;# 
   274  0015                     	;# 
   275  0015                     	;# 
   276  0016                     	;# 
   277  0017                     	;# 
   278  0018                     	;# 
   279  0019                     	;# 
   280  001A                     	;# 
   281  001E                     	;# 
   282  001F                     	;# 
   283  0081                     	;# 
   284  0085                     	;# 
   285  0086                     	;# 
   286  008C                     	;# 
   287  008D                     	;# 
   288  008E                     	;# 
   289  008F                     	;# 
   290  0090                     	;# 
   291  0092                     	;# 
   292  0093                     	;# 
   293  0094                     	;# 
   294  0098                     	;# 
   295  0099                     	;# 
   296  009B                     	;# 
   297  009C                     	;# 
   298  009D                     	;# 
   299  009E                     	;# 
   300  009F                     	;# 
   301  0105                     	;# 
   302  010C                     	;# 
   303  010D                     	;# 
   304  010E                     	;# 
   305  010F                     	;# 
   306  018C                     	;# 
   307  018D                     	;# 
   308                           
   309                           	psect	idataBANK0
   310  077A                     __pidataBANK0:	
   311                           
   312                           ;initializer for _lcdcolumns
   313  077A  3410               	retlw	16
   314                           
   315                           ;initializer for _lcdrows
   316  077B  3402               	retlw	2
   317                           
   318                           	psect	strings
   319  0413                     __pstrings:	
   320  0413                     stringtab:	
   321  0413                     __stringtab:	
   322                           
   323                           ;	String table - string pointers are 1 byte each
   324  0413  1BFF               	btfsc	btemp+1,7
   325  0414  2C1D               	ljmp	stringcode
   326  0415  1383               	bcf	3,7
   327  0416  187F               	btfsc	btemp+1,0
   328  0417  1783               	bsf	3,7
   329  0418  0800               	movf	0,w
   330  0419  0A84               	incf	4,f
   331  041A  1903               	skipnz
   332  041B  0AFF               	incf	btemp+1,f
   333  041C  0008               	return
   334  041D                     stringcode:	
   335  041D                     stringdir:	
   336  041D  3004               	movlw	high stringdir
   337  041E  008A               	movwf	10
   338  041F  0804               	movf	4,w
   339  0420  0A84               	incf	4,f
   340  0421  0782               	addwf	2,f
   341  0422                     __stringbase:	
   342  0422  3400               	retlw	0
   343  0423                     __end_of__stringtab:	
   344  0423                     _dpowers:	
   345  0423  3401               	retlw	1
   346  0424  3400               	retlw	0
   347  0425  340A               	retlw	10
   348  0426  3400               	retlw	0
   349  0427  3464               	retlw	100
   350  0428  3400               	retlw	0
   351  0429  34E8               	retlw	232
   352  042A  3403               	retlw	3
   353  042B  3410               	retlw	16
   354  042C  3427               	retlw	39
   355  042D                     __end_of_dpowers:	
   356  042D                     _rowaddr:	
   357  042D  3400               	retlw	0
   358  042E  3440               	retlw	64
   359  042F  3414               	retlw	20
   360  0430  3454               	retlw	84
   361  0431                     __end_of_rowaddr:	
   362  0431                     __stringdata:	
   363  0431                     STR_3:	
   364  0431  3453               	retlw	83	;'S'
   365  0432  3465               	retlw	101	;'e'
   366  0433  346E               	retlw	110	;'n'
   367  0434  3473               	retlw	115	;'s'
   368  0435  346F               	retlw	111	;'o'
   369  0436  3472               	retlw	114	;'r'
   370  0437  3420               	retlw	32	;' '
   371  0438  3465               	retlw	101	;'e'
   372  0439  3472               	retlw	114	;'r'
   373  043A  3472               	retlw	114	;'r'
   374  043B  346F               	retlw	111	;'o'
   375  043C  3472               	retlw	114	;'r'
   376  043D  343A               	retlw	58	;':'
   377  043E  3420               	retlw	32	;' '
   378  043F  3425               	retlw	37	;'%'
   379  0440  3430               	retlw	48	;'0'
   380  0441  3432               	retlw	50	;'2'
   381  0442  3464               	retlw	100	;'d'
   382  0443  3420               	retlw	32	;' '
   383  0444  3420               	retlw	32	;' '
   384  0445  3420               	retlw	32	;' '
   385  0446  3420               	retlw	32	;' '
   386  0447  3400               	retlw	0
   387  0448                     STR_2:	
   388  0448  3454               	retlw	84	;'T'
   389  0449  343A               	retlw	58	;':'
   390  044A  3420               	retlw	32	;' '
   391  044B  3425               	retlw	37	;'%'
   392  044C  3430               	retlw	48	;'0'
   393  044D  3432               	retlw	50	;'2'
   394  044E  3464               	retlw	100	;'d'
   395  044F  3420               	retlw	32	;' '
   396  0450  3443               	retlw	67	;'C'
   397  0451  3420               	retlw	32	;' '
   398  0452  3448               	retlw	72	;'H'
   399  0453  343A               	retlw	58	;':'
   400  0454  3420               	retlw	32	;' '
   401  0455  3425               	retlw	37	;'%'
   402  0456  3430               	retlw	48	;'0'
   403  0457  3432               	retlw	50	;'2'
   404  0458  3464               	retlw	100	;'d'
   405  0459  3425               	retlw	37	;'%'
   406  045A  3425               	retlw	37	;'%'
   407  045B  3420               	retlw	32	;' '
   408  045C  3420               	retlw	32	;' '
   409  045D  3400               	retlw	0
   410  045E                     STR_1:	
   411  045E  3420               	retlw	32	;' '
   412  045F  3420               	retlw	32	;' '
   413  0460  3450               	retlw	80	;'P'
   414  0461  3452               	retlw	82	;'R'
   415  0462  3455               	retlw	85	;'U'
   416  0463  3445               	retlw	69	;'E'
   417  0464  3442               	retlw	66	;'B'
   418  0465  3441               	retlw	65	;'A'
   419  0466  3420               	retlw	32	;' '
   420  0467  3444               	retlw	68	;'D'
   421  0468  3448               	retlw	72	;'H'
   422  0469  3454               	retlw	84	;'T'
   423  046A  3431               	retlw	49	;'1'
   424  046B  3431               	retlw	49	;'1'
   425  046C  3420               	retlw	32	;' '
   426  046D  3420               	retlw	32	;' '
   427  046E  3400               	retlw	0
   428  046F                     __end_of__stringdata:	
   429                           
   430                           ; #config settings
   431  0000                     
   432                           	psect	nvBANK0
   433  006F                     __pnvBANK0:	
   434  006F                     _iomode:	
   435  006F                     	ds	1
   436  000B                     _INTCONbits	set	11
   437  000C                     _PIR1bits	set	12
   438  0005                     _PORTA	set	5
   439  0005                     _PORTAbits	set	5
   440  0006                     _PORTBbits	set	6
   441  0010                     _T1CON	set	16
   442  000F                     _TMR1H	set	15
   443  000E                     _TMR1L	set	14
   444  009B                     _ANSEL	set	155
   445  008F                     _OSCCON	set	143
   446  008C                     _PIE1bits	set	140
   447  0085                     _TRISAbits	set	133
   448  0086                     _TRISBbits	set	134
   449                           
   450                           	psect	cinit
   451  0013                     start_initialization:	
   452  0013                     __initialization:	
   453                           
   454                           ; Clear objects allocated to COMMON
   455  0013  01F6               	clrf	__pbssCOMMON& (0+127)
   456  0014  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   457  0015  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   458  0016  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   459                           
   460                           ; Clear objects allocated to BANK0
   461  0017  1383               	bcf	3,7	;select IRP bank0
   462  0018  3020               	movlw	low __pbssBANK0
   463  0019  0084               	movwf	4
   464  001A  3048               	movlw	low (__pbssBANK0+40)
   465  001B  118A  276E  118A   	fcall	clear_ram0
   466                           
   467                           ; Initialize objects allocated to BANK0
   468  001E  118A  277A  118A   	fcall	__pidataBANK0	;fetch initializer
   469  0021  00ED               	movwf	__pdataBANK0& (0+127)
   470  0022  118A  277B         	fcall	__pidataBANK0+1	;fetch initializer
   471  0024  00EE               	movwf	(__pdataBANK0+1)& (0+127)
   472  0025                     end_of_initialization:	
   473                           ;End of C runtime variable initialization code
   474                           
   475  0025                     __end_of__initialization:	
   476  0025  0183               	clrf	3
   477  0026  118A  2E16         	ljmp	_main	;jump to C main() function
   478                           
   479                           	psect	bssCOMMON
   480  0076                     __pbssCOMMON:	
   481  0076                     _tickcnt:	
   482  0076                     	ds	4
   483                           
   484                           	psect	bssBANK0
   485  0020                     __pbssBANK0:	
   486  0020                     _tickbuffer:	
   487  0020                     	ds	6
   488  0026                     _bits:	
   489  0026                     	ds	5
   490  002B                     dht11_task@ltick:	
   491  002B                     	ds	4
   492  002F                     led_task@ltime:	
   493  002F                     	ds	4
   494  0033                     _dispctrl:	
   495  0033                     	ds	1
   496  0034                     _buf:	
   497  0034                     	ds	20
   498                           
   499                           	psect	dataBANK0
   500  006D                     __pdataBANK0:	
   501  006D                     _lcdcolumns:	
   502  006D                     	ds	1
   503  006E                     _lcdrows:	
   504  006E                     	ds	1
   505                           
   506                           	psect	clrtext
   507  076E                     clear_ram0:	
   508                           ;	Called with FSR containing the base address, and
   509                           ;	W with the last address+1
   510                           
   511  076E  0064               	clrwdt	;clear the watchdog before getting into this loop
   512  076F                     clrloop0:	
   513  076F  0180               	clrf	0	;clear RAM location pointed to by FSR
   514  0770  0A84               	incf	4,f	;increment pointer
   515  0771  0604               	xorwf	4,w	;XOR with final address
   516  0772  1903               	btfsc	3,2	;have we reached the end yet?
   517  0773  3400               	retlw	0	;all done for this memory range, return
   518  0774  0604               	xorwf	4,w	;XOR again to restore value
   519  0775  2F6F               	goto	clrloop0	;do the next byte
   520                           
   521                           	psect	cstackBANK1
   522  00A0                     __pcstackBANK1:	
   523  00A0                     dht11_task@eResult:	
   524                           
   525                           ; 1 bytes @ 0x0
   526  00A0                     	ds	1
   527  00A1                     dht11_task@tb:	
   528                           
   529                           ; 1 bytes @ 0x1
   530  00A1                     	ds	1
   531  00A2                     dht11_task@hb:	
   532                           
   533                           ; 1 bytes @ 0x2
   534  00A2                     	ds	1
   535                           
   536                           	psect	cstackCOMMON
   537  0070                     __pcstackCOMMON:	
   538  0070                     ?_tick_init:	
   539  0070                     ?_dhtlib_init:	
   540                           ; 0 bytes @ 0x0
   541                           
   542  0070                     ?_lcd_on:	
   543                           ; 0 bytes @ 0x0
   544                           
   545  0070                     ?_led_task:	
   546                           ; 0 bytes @ 0x0
   547                           
   548  0070                     ?_dht11_task:	
   549                           ; 0 bytes @ 0x0
   550                           
   551  0070                     ?_tick_update:	
   552                           ; 0 bytes @ 0x0
   553                           
   554  0070                     ??_tick_update:	
   555                           ; 0 bytes @ 0x0
   556                           
   557  0070                     ?_dhtlib_start:	
   558                           ; 0 bytes @ 0x0
   559                           
   560  0070                     ?_tick_read_internal:	
   561                           ; 0 bytes @ 0x0
   562                           
   563  0070                     ?_lcd_iowrite4:	
   564                           ; 0 bytes @ 0x0
   565                           
   566  0070                     ?_lcd_iowrite8:	
   567                           ; 0 bytes @ 0x0
   568                           
   569  0070                     ?_isdigit:	
   570                           ; 0 bytes @ 0x0
   571                           
   572  0070                     ?_main:	
   573                           ; 1 bit 
   574                           
   575  0070                     ?_isr:	
   576                           ; 0 bytes @ 0x0
   577                           
   578  0070                     ??_isr:	
   579                           ; 0 bytes @ 0x0
   580                           
   581  0070                     ?_lcd_ioinit:	
   582                           ; 0 bytes @ 0x0
   583                           
   584  0070                     ?_dhtlib_read:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     lcd_ioinit@iodata:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     lcd_iowrite8@data:	
   591                           ; 1 bytes @ 0x0
   592                           
   593                           
   594                           ; 1 bytes @ 0x0
   595  0070                     	ds	4
   596  0074                     ??_tick_init:	
   597  0074                     ??_dhtlib_init:	
   598                           ; 0 bytes @ 0x4
   599                           
   600  0074                     ??_dhtlib_start:	
   601                           ; 0 bytes @ 0x4
   602                           
   603  0074                     ??_tick_read_internal:	
   604                           ; 0 bytes @ 0x4
   605                           
   606  0074                     ?_lcd_ioset:	
   607                           ; 0 bytes @ 0x4
   608                           
   609  0074                     ??_lcd_iowrite8:	
   610                           ; 0 bytes @ 0x4
   611                           
   612  0074                     ??_isdigit:	
   613                           ; 0 bytes @ 0x4
   614                           
   615  0074                     ??___lwdiv:	
   616                           ; 0 bytes @ 0x4
   617                           
   618  0074                     ??___wmul:	
   619                           ; 0 bytes @ 0x4
   620                           
   621  0074                     lcd_ioset@out:	
   622                           ; 0 bytes @ 0x4
   623                           
   624  0074                     _isdigit$715:	
   625                           ; 1 bytes @ 0x4
   626                           
   627  0074                     ___wmul@product:	
   628                           ; 1 bytes @ 0x4
   629                           
   630                           
   631                           ; 2 bytes @ 0x4
   632  0074                     	ds	1
   633  0075                     ??_tick_get:	
   634  0075                     ??_lcd_ioset:	
   635                           ; 0 bytes @ 0x5
   636                           
   637  0075                     ??___lwmod:	
   638                           ; 0 bytes @ 0x5
   639                           
   640  0075                     lcd_ioset@pin:	
   641                           ; 0 bytes @ 0x5
   642                           
   643  0075                     isdigit@c:	
   644                           ; 1 bytes @ 0x5
   645                           
   646                           
   647                           ; 1 bytes @ 0x5
   648  0075                     	ds	1
   649  0076                     ??_lcd_puts:	
   650                           
   651                           	psect	cstackBANK0
   652  0048                     __pcstackBANK0:	
   653                           ; 0 bytes @ 0x6
   654                           
   655  0048                     ??_lcd_ioinit:	
   656  0048                     ??_lcd_iowrite4:	
   657                           ; 0 bytes @ 0x0
   658                           
   659  0048                     ??_dhtlib_read:	
   660                           ; 0 bytes @ 0x0
   661                           
   662  0048                     ?___lwdiv:	
   663                           ; 0 bytes @ 0x0
   664                           
   665  0048                     ?___wmul:	
   666                           ; 2 bytes @ 0x0
   667                           
   668  0048                     ?_tick_get:	
   669                           ; 2 bytes @ 0x0
   670                           
   671  0048                     ___lwdiv@divisor:	
   672                           ; 4 bytes @ 0x0
   673                           
   674  0048                     ___wmul@multiplier:	
   675                           ; 2 bytes @ 0x0
   676                           
   677                           
   678                           ; 2 bytes @ 0x0
   679  0048                     	ds	1
   680  0049                     lcd_ioinit@i:	
   681                           
   682                           ; 1 bytes @ 0x1
   683  0049                     	ds	1
   684  004A                     dhtlib_read@aindex:	
   685  004A                     lcd_iowrite4@data:	
   686                           ; 1 bytes @ 0x2
   687                           
   688  004A                     ___lwdiv@dividend:	
   689                           ; 1 bytes @ 0x2
   690                           
   691  004A                     ___wmul@multiplicand:	
   692                           ; 2 bytes @ 0x2
   693                           
   694                           
   695                           ; 2 bytes @ 0x2
   696  004A                     	ds	1
   697  004B                     dhtlib_read@bcount:	
   698  004B                     lcd_iowrite4@i:	
   699                           ; 1 bytes @ 0x3
   700                           
   701                           
   702                           ; 1 bytes @ 0x3
   703  004B                     	ds	1
   704  004C                     ??_led_task:	
   705  004C                     ?_lcd_send:	
   706                           ; 0 bytes @ 0x4
   707                           
   708  004C                     dhtlib_read@tocounter:	
   709                           ; 0 bytes @ 0x4
   710                           
   711  004C                     lcd_send@rs:	
   712                           ; 1 bytes @ 0x4
   713                           
   714  004C                     ___lwdiv@counter:	
   715                           ; 1 bytes @ 0x4
   716                           
   717                           
   718                           ; 1 bytes @ 0x4
   719  004C                     	ds	1
   720  004D                     ??_lcd_send:	
   721  004D                     dhtlib_read@i:	
   722                           ; 0 bytes @ 0x5
   723                           
   724  004D                     ___lwdiv@quotient:	
   725                           ; 1 bytes @ 0x5
   726                           
   727                           
   728                           ; 2 bytes @ 0x5
   729  004D                     	ds	1
   730  004E                     ?_dhtlib_read11:	
   731  004E                     dhtlib_read11@hum:	
   732                           ; 1 bytes @ 0x6
   733                           
   734  004E                     lcd_send@data:	
   735                           ; 1 bytes @ 0x6
   736                           
   737                           
   738                           ; 1 bytes @ 0x6
   739  004E                     	ds	1
   740  004F                     ??_lcd_on:	
   741  004F                     ?_lcd_puts:	
   742                           ; 0 bytes @ 0x7
   743                           
   744  004F                     ?_lcd_goto:	
   745                           ; 0 bytes @ 0x7
   746                           
   747  004F                     ??_dhtlib_read11:	
   748                           ; 0 bytes @ 0x7
   749                           
   750  004F                     ?_lcd_init:	
   751                           ; 0 bytes @ 0x7
   752                           
   753  004F                     ?___lwmod:	
   754                           ; 1 bytes @ 0x7
   755                           
   756  004F                     lcd_init@cols:	
   757                           ; 2 bytes @ 0x7
   758                           
   759  004F                     lcd_goto@row:	
   760                           ; 1 bytes @ 0x7
   761                           
   762  004F                     lcd_puts@string:	
   763                           ; 1 bytes @ 0x7
   764                           
   765  004F                     ___lwmod@divisor:	
   766                           ; 2 bytes @ 0x7
   767                           
   768                           
   769                           ; 2 bytes @ 0x7
   770  004F                     	ds	1
   771  0050                     ??_lcd_goto:	
   772  0050                     lcd_init@rows:	
   773                           ; 0 bytes @ 0x8
   774                           
   775                           
   776                           ; 1 bytes @ 0x8
   777  0050                     	ds	1
   778  0051                     ??_lcd_init:	
   779  0051                     lcd_goto@col:	
   780                           ; 0 bytes @ 0x9
   781                           
   782  0051                     ___lwmod@dividend:	
   783                           ; 1 bytes @ 0x9
   784                           
   785                           
   786                           ; 2 bytes @ 0x9
   787  0051                     	ds	1
   788  0052                     dhtlib_read11@temp:	
   789                           
   790                           ; 1 bytes @ 0xA
   791  0052                     	ds	1
   792  0053                     dhtlib_read11@chksum:	
   793  0053                     lcd_init@iodata:	
   794                           ; 1 bytes @ 0xB
   795                           
   796  0053                     ___lwmod@counter:	
   797                           ; 1 bytes @ 0xB
   798                           
   799                           
   800                           ; 1 bytes @ 0xB
   801  0053                     	ds	1
   802  0054                     ?_sprintf:	
   803  0054                     dhtlib_read11@s:	
   804                           ; 2 bytes @ 0xC
   805                           
   806  0054                     sprintf@f:	
   807                           ; 1 bytes @ 0xC
   808                           
   809                           
   810                           ; 1 bytes @ 0xC
   811  0054                     	ds	5
   812  0059                     ??_sprintf:	
   813                           
   814                           ; 0 bytes @ 0x11
   815  0059                     	ds	3
   816  005C                     sprintf@ap:	
   817                           
   818                           ; 1 bytes @ 0x14
   819  005C                     	ds	1
   820  005D                     sprintf@prec:	
   821                           
   822                           ; 1 bytes @ 0x15
   823  005D                     	ds	1
   824  005E                     sprintf@flag:	
   825                           
   826                           ; 1 bytes @ 0x16
   827  005E                     	ds	1
   828  005F                     sprintf@sp:	
   829                           
   830                           ; 1 bytes @ 0x17
   831  005F                     	ds	1
   832  0060                     sprintf@width:	
   833                           
   834                           ; 2 bytes @ 0x18
   835  0060                     	ds	2
   836  0062                     sprintf@_val:	
   837                           
   838                           ; 3 bytes @ 0x1A
   839  0062                     	ds	3
   840  0065                     sprintf@c:	
   841                           
   842                           ; 1 bytes @ 0x1D
   843  0065                     	ds	1
   844  0066                     ??_dht11_task:	
   845                           
   846                           ; 0 bytes @ 0x1E
   847  0066                     	ds	5
   848  006B                     ??_main:	
   849                           
   850                           ; 0 bytes @ 0x23
   851  006B                     	ds	2
   852                           
   853                           	psect	maintext
   854  0616                     __pmaintext:	
   855 ;;
   856 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   857 ;;
   858 ;; *************** function _main *****************
   859 ;; Defined at:
   860 ;;		line 40 in file "main.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;		None
   863 ;; Auto vars:     Size  Location     Type
   864 ;;		None
   865 ;; Return value:  Size  Location     Type
   866 ;;		None               void
   867 ;; Registers used:
   868 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   869 ;; Tracked objects:
   870 ;;		On entry : 17F/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   874 ;;      Params:         0       0       0       0       0
   875 ;;      Locals:         0       0       0       0       0
   876 ;;      Temps:          0       2       0       0       0
   877 ;;      Totals:         0       2       0       0       0
   878 ;;Total ram usage:        2 bytes
   879 ;; Hardware stack levels required when called:    7
   880 ;; This function calls:
   881 ;;		_lcd_init
   882 ;;		_tick_init
   883 ;;		_dhtlib_init
   884 ;;		_lcd_on
   885 ;;		_lcd_puts
   886 ;;		_led_task
   887 ;;		_dht11_task
   888 ;; This function is called by:
   889 ;;		Startup code after reset
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893                           
   894                           ;psect for function _main
   895  0616                     _main:	
   896                           
   897                           ;main.c: 42: OSCCON = 0x7C;
   898                           
   899                           ;incstack = 0
   900                           ; Regs used in _main: [allreg]
   901  0616  307C               	movlw	124
   902  0617  1683               	bsf	3,5	;RP0=1, select bank1
   903  0618  1303               	bcf	3,6	;RP1=0, select bank1
   904  0619  008F               	movwf	15	;volatile
   905                           
   906                           ;main.c: 43: ANSEL = 0x00;
   907  061A  019B               	clrf	27	;volatile
   908                           
   909                           ;main.c: 46: lcd_init(0, 16, 2);
   910  061B  3010               	movlw	16
   911  061C  1283               	bcf	3,5	;RP0=0, select bank0
   912  061D  1303               	bcf	3,6	;RP1=0, select bank0
   913  061E  00EB               	movwf	??_main
   914  061F  086B               	movf	??_main,w
   915  0620  00CF               	movwf	?_lcd_init
   916  0621  3002               	movlw	2
   917  0622  00EC               	movwf	??_main+1
   918  0623  086C               	movf	??_main+1,w
   919  0624  00D0               	movwf	?_lcd_init+1
   920  0625  3000               	movlw	0
   921  0626  118A  2216  118A   	fcall	_lcd_init
   922                           
   923                           ;main.c: 47: tick_init();
   924  0629  118A  2740  118A   	fcall	_tick_init
   925                           
   926                           ;main.c: 48: dhtlib_init();
   927  062C  118A  2776  118A   	fcall	_dhtlib_init
   928                           
   929                           ;main.c: 51: lcd_on();
   930  062F  118A  272F  118A   	fcall	_lcd_on
   931                           
   932                           ;main.c: 53: lcd_puts("  PRUEBA DHT11  ");
   933  0632  303C               	movlw	low (STR_1-__stringbase)
   934  0633  1283               	bcf	3,5	;RP0=0, select bank0
   935  0634  1303               	bcf	3,6	;RP1=0, select bank0
   936  0635  00CF               	movwf	?_lcd_puts
   937  0636  3080               	movlw	128
   938  0637  00D0               	movwf	?_lcd_puts+1
   939  0638  118A  26AB  118A   	fcall	_lcd_puts
   940  063B                     l2326:	
   941                           ;main.c: 57: for (;;) {
   942                           
   943                           
   944                           ;main.c: 58: led_task();
   945  063B  118A  24B9  118A   	fcall	_led_task
   946                           
   947                           ;main.c: 59: dht11_task();
   948  063E  118A  22E5  118A   	fcall	_dht11_task
   949                           
   950                           ;main.c: 60: }
   951  0641  2E3B               	goto	l2326
   952  0642                     __end_of_main:	
   953                           
   954                           	psect	text1
   955  02E5                     __ptext1:	
   956 ;; *************** function _dht11_task *****************
   957 ;; Defined at:
   958 ;;		line 67 in file "main.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;		None
   961 ;; Auto vars:     Size  Location     Type
   962 ;;  eResult         1    0[BANK1 ] enum E1128
   963 ;;  hb              1    2[BANK1 ] unsigned char 
   964 ;;  tb              1    1[BANK1 ] unsigned char 
   965 ;; Return value:  Size  Location     Type
   966 ;;		None               void
   967 ;; Registers used:
   968 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   974 ;;      Params:         0       0       0       0       0
   975 ;;      Locals:         0       0       3       0       0
   976 ;;      Temps:          0       5       0       0       0
   977 ;;      Totals:         0       5       3       0       0
   978 ;;Total ram usage:        8 bytes
   979 ;; Hardware stack levels used:    1
   980 ;; Hardware stack levels required when called:    6
   981 ;; This function calls:
   982 ;;		_lcd_puts
   983 ;;		_tick_get
   984 ;;		_lcd_goto
   985 ;;		_dhtlib_read11
   986 ;;		_sprintf
   987 ;; This function is called by:
   988 ;;		_main
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           
   993                           ;psect for function _dht11_task
   994  02E5                     _dht11_task:	
   995                           
   996                           ;main.c: 68: static unsigned long ltick = 0;
   997                           ;main.c: 70: uint8_t tb = 0, hb = 0;
   998                           
   999                           ;incstack = 0
  1000                           ; Regs used in _dht11_task: [allreg]
  1001  02E5  1683               	bsf	3,5	;RP0=1, select bank1
  1002  02E6  1303               	bcf	3,6	;RP1=0, select bank1
  1003  02E7  01A1               	clrf	dht11_task@tb^(0+128)
  1004  02E8  01A2               	clrf	dht11_task@hb^(0+128)
  1005                           
  1006                           ;main.c: 73: if (tick_get() - ltick >= ((unsigned long long)((2000000 + 128ull)/8ull)) *
      +                           5) {
  1007  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  1008  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  1009  02EB  092B               	comf	dht11_task@ltick,w
  1010  02EC  00E6               	movwf	??_dht11_task
  1011  02ED  092C               	comf	dht11_task@ltick+1,w
  1012  02EE  00E7               	movwf	??_dht11_task+1
  1013  02EF  092D               	comf	dht11_task@ltick+2,w
  1014  02F0  00E8               	movwf	??_dht11_task+2
  1015  02F1  092E               	comf	dht11_task@ltick+3,w
  1016  02F2  00E9               	movwf	??_dht11_task+3
  1017  02F3  0AE6               	incf	??_dht11_task,f
  1018  02F4  1903               	skipnz
  1019  02F5  0AE7               	incf	??_dht11_task+1,f
  1020  02F6  1903               	skipnz
  1021  02F7  0AE8               	incf	??_dht11_task+2,f
  1022  02F8  1903               	skipnz
  1023  02F9  0AE9               	incf	??_dht11_task+3,f
  1024  02FA  118A  271C  118A   	fcall	_tick_get
  1025  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  1026  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  1027  02FF  0848               	movf	?_tick_get,w
  1028  0300  07E6               	addwf	??_dht11_task,f
  1029  0301  0849               	movf	?_tick_get+1,w
  1030  0302  1803               	skipnc
  1031  0303  0F49               	incfsz	?_tick_get+1,w
  1032  0304  2B06               	goto	u2030
  1033  0305  2B07               	goto	u2031
  1034  0306                     u2030:	
  1035  0306  07E7               	addwf	??_dht11_task+1,f
  1036  0307                     u2031:	
  1037  0307  084A               	movf	?_tick_get+2,w
  1038  0308  1803               	skipnc
  1039  0309  0F4A               	incfsz	?_tick_get+2,w
  1040  030A  2B0C               	goto	u2032
  1041  030B  2B0D               	goto	u2033
  1042  030C                     u2032:	
  1043  030C  07E8               	addwf	??_dht11_task+2,f
  1044  030D                     u2033:	
  1045  030D  084B               	movf	?_tick_get+3,w
  1046  030E  1803               	skipnc
  1047  030F  0A4B               	incf	?_tick_get+3,w
  1048  0310  07E9               	addwf	??_dht11_task+3,f
  1049  0311  3000               	movlw	0
  1050  0312  0269               	subwf	??_dht11_task+3,w
  1051  0313  1D03               	skipz
  1052  0314  2B1F               	goto	u2045
  1053  0315  3013               	movlw	19
  1054  0316  0268               	subwf	??_dht11_task+2,w
  1055  0317  1D03               	skipz
  1056  0318  2B1F               	goto	u2045
  1057  0319  3013               	movlw	19
  1058  031A  0267               	subwf	??_dht11_task+1,w
  1059  031B  1D03               	skipz
  1060  031C  2B1F               	goto	u2045
  1061  031D  3020               	movlw	32
  1062  031E  0266               	subwf	??_dht11_task,w
  1063  031F                     u2045:	
  1064  031F  1C03               	skipc
  1065  0320  0008               	return
  1066                           
  1067                           ;main.c: 75: ltick = tick_get();
  1068  0321  118A  271C  118A   	fcall	_tick_get
  1069  0324  1283               	bcf	3,5	;RP0=0, select bank0
  1070  0325  1303               	bcf	3,6	;RP1=0, select bank0
  1071  0326  084B               	movf	?_tick_get+3,w
  1072  0327  00AE               	movwf	dht11_task@ltick+3
  1073  0328  084A               	movf	?_tick_get+2,w
  1074  0329  00AD               	movwf	dht11_task@ltick+2
  1075  032A  0849               	movf	?_tick_get+1,w
  1076  032B  00AC               	movwf	dht11_task@ltick+1
  1077  032C  0848               	movf	?_tick_get,w
  1078  032D  00AB               	movwf	dht11_task@ltick
  1079                           
  1080                           ;main.c: 77: lcd_goto(0, 1);
  1081  032E  01CF               	clrf	?_lcd_goto
  1082  032F  0ACF               	incf	?_lcd_goto,f
  1083  0330  3000               	movlw	0
  1084  0331  118A  268A  118A   	fcall	_lcd_goto
  1085                           
  1086                           ;main.c: 79: enum dhtlib_status eResult = dhtlib_read11(&tb, &hb);
  1087  0334  30A2               	movlw	dht11_task@hb& (0+255)
  1088  0335  1283               	bcf	3,5	;RP0=0, select bank0
  1089  0336  1303               	bcf	3,6	;RP1=0, select bank0
  1090  0337  00E6               	movwf	??_dht11_task
  1091  0338  0866               	movf	??_dht11_task,w
  1092  0339  00CE               	movwf	?_dhtlib_read11
  1093  033A  30A1               	movlw	dht11_task@tb& (0+255)
  1094  033B  118A  25E6  118A   	fcall	_dhtlib_read11
  1095  033E  1283               	bcf	3,5	;RP0=0, select bank0
  1096  033F  1303               	bcf	3,6	;RP1=0, select bank0
  1097  0340  00E7               	movwf	??_dht11_task+1
  1098  0341  0867               	movf	??_dht11_task+1,w
  1099  0342  1683               	bsf	3,5	;RP0=1, select bank1
  1100  0343  1303               	bcf	3,6	;RP1=0, select bank1
  1101  0344  00A0               	movwf	dht11_task@eResult^(0+128)
  1102                           
  1103                           ;main.c: 80: if (eResult == E_DHTLIB_OK)
  1104  0345  08A0               	movf	dht11_task@eResult^(0+128),f
  1105  0346  1D03               	skipz
  1106  0347  2B65               	goto	l2412
  1107                           
  1108                           ;main.c: 81: sprintf(buf, "T: %02d C H: %02d%%  ", tb, hb);
  1109  0348  3026               	movlw	(STR_2-__stringbase)& (0+255)
  1110  0349  1283               	bcf	3,5	;RP0=0, select bank0
  1111  034A  1303               	bcf	3,6	;RP1=0, select bank0
  1112  034B  00E6               	movwf	??_dht11_task
  1113  034C  0866               	movf	??_dht11_task,w
  1114  034D  00D4               	movwf	?_sprintf
  1115  034E  1683               	bsf	3,5	;RP0=1, select bank1
  1116  034F  1303               	bcf	3,6	;RP1=0, select bank1
  1117  0350  0821               	movf	dht11_task@tb^(0+128),w
  1118  0351  1283               	bcf	3,5	;RP0=0, select bank0
  1119  0352  1303               	bcf	3,6	;RP1=0, select bank0
  1120  0353  00E7               	movwf	??_dht11_task+1
  1121  0354  01E8               	clrf	??_dht11_task+2
  1122  0355  0867               	movf	??_dht11_task+1,w
  1123  0356  00D5               	movwf	?_sprintf+1
  1124  0357  0868               	movf	??_dht11_task+2,w
  1125  0358  00D6               	movwf	?_sprintf+2
  1126  0359  1683               	bsf	3,5	;RP0=1, select bank1
  1127  035A  1303               	bcf	3,6	;RP1=0, select bank1
  1128  035B  0822               	movf	dht11_task@hb^(0+128),w
  1129  035C  1283               	bcf	3,5	;RP0=0, select bank0
  1130  035D  1303               	bcf	3,6	;RP1=0, select bank0
  1131  035E  00E9               	movwf	??_dht11_task+3
  1132  035F  01EA               	clrf	??_dht11_task+4
  1133  0360  0869               	movf	??_dht11_task+3,w
  1134  0361  00D7               	movwf	?_sprintf+3
  1135  0362  086A               	movf	??_dht11_task+4,w
  1136  0363  00D8               	movwf	?_sprintf+4
  1137  0364  2B76               	goto	L1
  1138  0365                     l2412:	
  1139                           
  1140                           ;main.c: 82: else
  1141                           ;main.c: 83: sprintf(buf, "Sensor error: %02d    ", eResult);
  1142  0365  300F               	movlw	(STR_3-__stringbase)& (0+255)
  1143  0366  1283               	bcf	3,5	;RP0=0, select bank0
  1144  0367  1303               	bcf	3,6	;RP1=0, select bank0
  1145  0368  00E6               	movwf	??_dht11_task
  1146  0369  0866               	movf	??_dht11_task,w
  1147  036A  00D4               	movwf	?_sprintf
  1148  036B  1683               	bsf	3,5	;RP0=1, select bank1
  1149  036C  1303               	bcf	3,6	;RP1=0, select bank1
  1150  036D  0820               	movf	dht11_task@eResult^(0+128),w
  1151  036E  1283               	bcf	3,5	;RP0=0, select bank0
  1152  036F  1303               	bcf	3,6	;RP1=0, select bank0
  1153  0370  00E7               	movwf	??_dht11_task+1
  1154  0371  01E8               	clrf	??_dht11_task+2
  1155  0372  0867               	movf	??_dht11_task+1,w
  1156  0373  00D5               	movwf	?_sprintf+1
  1157  0374  0868               	movf	??_dht11_task+2,w
  1158  0375  00D6               	movwf	?_sprintf+2
  1159  0376                     L1:	
  1160  0376  3034               	movlw	_buf& (0+255)
  1161  0377  118A  2028  118A   	fcall	_sprintf
  1162                           
  1163                           ;main.c: 85: lcd_puts(buf);
  1164  037A  3034               	movlw	_buf& (0+255)
  1165  037B  1283               	bcf	3,5	;RP0=0, select bank0
  1166  037C  1303               	bcf	3,6	;RP1=0, select bank0
  1167  037D  00CF               	movwf	?_lcd_puts
  1168  037E  3000               	movlw	0
  1169  037F  00D0               	movwf	?_lcd_puts+1
  1170  0380  118A  26AB         	fcall	_lcd_puts
  1171  0382  0008               	return
  1172  0383                     __end_of_dht11_task:	
  1173                           
  1174                           	psect	text2
  1175  0028                     __ptext2:	
  1176 ;; *************** function _sprintf *****************
  1177 ;; Defined at:
  1178 ;;		line 493 in file "/Applications/microchip/xc8/v1.21/sources/common/doprnt.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;  sp              1    wreg     PTR unsigned char 
  1181 ;;		 -> buf(20), 
  1182 ;;  f               1   12[BANK0 ] PTR const unsigned char 
  1183 ;;		 -> STR_3(23), STR_2(22), 
  1184 ;; Auto vars:     Size  Location     Type
  1185 ;;  sp              1   23[BANK0 ] PTR unsigned char 
  1186 ;;		 -> buf(20), 
  1187 ;;  _val            3   26[BANK0 ] struct .
  1188 ;;  width           2   24[BANK0 ] int 
  1189 ;;  c               1   29[BANK0 ] char 
  1190 ;;  flag            1   22[BANK0 ] unsigned char 
  1191 ;;  prec            1   21[BANK0 ] char 
  1192 ;;  ap              1   20[BANK0 ] PTR void [1]
  1193 ;;		 -> ?_sprintf(2), 
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  2   12[BANK0 ] int 
  1196 ;; Registers used:
  1197 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1203 ;;      Params:         0       5       0       0       0
  1204 ;;      Locals:         0      10       0       0       0
  1205 ;;      Temps:          0       3       0       0       0
  1206 ;;      Totals:         0      18       0       0       0
  1207 ;;Total ram usage:       18 bytes
  1208 ;; Hardware stack levels used:    1
  1209 ;; Hardware stack levels required when called:    3
  1210 ;; This function calls:
  1211 ;;		_isdigit
  1212 ;;		___lwdiv
  1213 ;;		___lwmod
  1214 ;;		___wmul
  1215 ;; This function is called by:
  1216 ;;		_dht11_task
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           
  1221                           ;psect for function _sprintf
  1222  0028                     _sprintf:	
  1223                           
  1224                           ;incstack = 0
  1225                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1226                           ;sprintf@sp stored from wreg
  1227  0028  1283               	bcf	3,5	;RP0=0, select bank0
  1228  0029  1303               	bcf	3,6	;RP1=0, select bank0
  1229  002A  00DF               	movwf	sprintf@sp
  1230                           
  1231                           ;doprnt.c: 494: va_list ap;
  1232                           ;doprnt.c: 499: signed char c;
  1233                           ;doprnt.c: 501: int width;
  1234                           ;doprnt.c: 506: signed char prec;
  1235                           ;doprnt.c: 508: unsigned char flag;
  1236                           ;doprnt.c: 527: union {
  1237                           ;doprnt.c: 528: unsigned int _val;
  1238                           ;doprnt.c: 529: struct {
  1239                           ;doprnt.c: 530: const char * _cp;
  1240                           ;doprnt.c: 531: unsigned _len;
  1241                           ;doprnt.c: 532: } _str;
  1242                           ;doprnt.c: 533: } _val;
  1243                           ;doprnt.c: 542: *ap = __va_start();
  1244  002B  3055               	movlw	(?_sprintf+1)& (0+255)
  1245  002C  00D9               	movwf	??_sprintf
  1246  002D  0859               	movf	??_sprintf,w
  1247  002E  00DC               	movwf	sprintf@ap
  1248  002F                     l2578:	
  1249                           ;doprnt.c: 545: while(c = *f++) {
  1250                           
  1251  002F  3001               	movlw	1
  1252  0030  07D4               	addwf	sprintf@f,f
  1253  0031  30FF               	movlw	-1
  1254  0032  0754               	addwf	sprintf@f,w
  1255  0033  0084               	movwf	4
  1256  0034  118A  241D  118A   	fcall	stringdir
  1257  0037  00D9               	movwf	??_sprintf
  1258  0038  0859               	movf	??_sprintf,w
  1259  0039  00E5               	movwf	sprintf@c
  1260  003A  08E5               	movf	sprintf@c,f
  1261  003B  1903               	btfsc	3,2
  1262  003C  2A0F               	goto	l2580
  1263                           
  1264                           ;doprnt.c: 547: if(c != '%')
  1265  003D  0865               	movf	sprintf@c,w
  1266  003E  3A25               	xorlw	37
  1267  003F  1903               	skipnz
  1268  0040  284D               	goto	l2460
  1269                           
  1270                           ;doprnt.c: 549: {
  1271                           ;doprnt.c: 550: ((*sp++ = (c)));
  1272  0041  0865               	movf	sprintf@c,w
  1273  0042  00D9               	movwf	??_sprintf
  1274  0043  085F               	movf	sprintf@sp,w
  1275  0044  0084               	movwf	4
  1276  0045  0859               	movf	??_sprintf,w
  1277  0046  1383               	bcf	3,7	;select IRP bank0
  1278  0047  0080               	movwf	0
  1279  0048  3001               	movlw	1
  1280  0049  00D9               	movwf	??_sprintf
  1281  004A  0859               	movf	??_sprintf,w
  1282  004B  07DF               	addwf	sprintf@sp,f
  1283                           
  1284                           ;doprnt.c: 551: continue;
  1285  004C  282F               	goto	l2578
  1286  004D                     l2460:	
  1287                           
  1288                           ;doprnt.c: 552: }
  1289                           ;doprnt.c: 555: width = 0;
  1290  004D  01E0               	clrf	sprintf@width
  1291  004E  01E1               	clrf	sprintf@width+1
  1292                           
  1293                           ;doprnt.c: 557: flag = 0;
  1294  004F  01DE               	clrf	sprintf@flag
  1295                           
  1296                           ;doprnt.c: 560: switch(*f) {
  1297                           
  1298                           ;doprnt.c: 559: for(;;) {
  1299  0050  2856               	goto	l2466
  1300  0051                     l290:	
  1301                           ;doprnt.c: 588: case '0':
  1302                           
  1303                           
  1304                           ;doprnt.c: 589: flag |= 0x04;
  1305  0051  155E               	bsf	sprintf@flag,2
  1306                           
  1307                           ;doprnt.c: 590: f++;
  1308  0052  3001               	movlw	1
  1309  0053  00D9               	movwf	??_sprintf
  1310  0054  0859               	movf	??_sprintf,w
  1311  0055  07D4               	addwf	sprintf@f,f
  1312  0056                     l2466:	
  1313                           ;doprnt.c: 593: }
  1314                           
  1315                           ;doprnt.c: 591: continue;
  1316                           
  1317  0056  0854               	movf	sprintf@f,w
  1318  0057  0084               	movwf	4
  1319  0058  118A  241D  118A   	fcall	stringdir
  1320                           
  1321                           ; Switch size 1, requested type "space"
  1322                           ; Number of cases is 1, Range of values is 48 to 48
  1323                           ; switch strategies available:
  1324                           ; Name         Instructions Cycles
  1325                           ; simple_byte            4     3 (average)
  1326                           ; direct_byte           12    10 (fixed)
  1327                           ; jumptable            263     9 (fixed)
  1328                           ;	Chosen strategy is simple_byte
  1329  005B  3A30               	xorlw	48	; case 48
  1330  005C  1903               	skipnz
  1331  005D  2851               	goto	l290
  1332  005E  285F               	goto	l2468
  1333  005F                     l2468:	
  1334                           ;doprnt.c: 595: }
  1335                           
  1336                           ;doprnt.c: 594: break;
  1337                           
  1338                           
  1339                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  1340  005F  0854               	movf	sprintf@f,w
  1341  0060  0084               	movwf	4
  1342  0061  118A  241D  118A   	fcall	stringdir
  1343  0064  118A  2760  118A   	fcall	_isdigit
  1344  0067  1C03               	btfss	3,0
  1345  0068  28FA               	goto	l2504
  1346                           
  1347                           ;doprnt.c: 607: width = 0;
  1348  0069  1283               	bcf	3,5	;RP0=0, select bank0
  1349  006A  1303               	bcf	3,6	;RP1=0, select bank0
  1350  006B  01E0               	clrf	sprintf@width
  1351  006C  01E1               	clrf	sprintf@width+1
  1352  006D                     l2472:	
  1353                           ;doprnt.c: 608: do {
  1354                           
  1355                           
  1356                           ;doprnt.c: 609: width *= 10;
  1357  006D  300A               	movlw	10
  1358  006E  1283               	bcf	3,5	;RP0=0, select bank0
  1359  006F  1303               	bcf	3,6	;RP1=0, select bank0
  1360  0070  00C8               	movwf	?___wmul
  1361  0071  3000               	movlw	0
  1362  0072  00C9               	movwf	?___wmul+1
  1363  0073  0861               	movf	sprintf@width+1,w
  1364  0074  01CB               	clrf	?___wmul+3
  1365  0075  07CB               	addwf	?___wmul+3,f
  1366  0076  0860               	movf	sprintf@width,w
  1367  0077  01CA               	clrf	?___wmul+2
  1368  0078  07CA               	addwf	?___wmul+2,f
  1369  0079  118A  2642  118A   	fcall	___wmul
  1370  007C  1283               	bcf	3,5	;RP0=0, select bank0
  1371  007D  1303               	bcf	3,6	;RP1=0, select bank0
  1372  007E  0849               	movf	?___wmul+1,w
  1373  007F  01E1               	clrf	sprintf@width+1
  1374  0080  07E1               	addwf	sprintf@width+1,f
  1375  0081  0848               	movf	?___wmul,w
  1376  0082  01E0               	clrf	sprintf@width
  1377  0083  07E0               	addwf	sprintf@width,f
  1378                           
  1379                           ;doprnt.c: 610: width += *f++ - '0';
  1380  0084  0854               	movf	sprintf@f,w
  1381  0085  0084               	movwf	4
  1382  0086  118A  241D  118A   	fcall	stringdir
  1383  0089  3ED0               	addlw	208
  1384  008A  00D9               	movwf	??_sprintf
  1385  008B  30FF               	movlw	255
  1386  008C  1803               	skipnc
  1387  008D  3000               	movlw	0
  1388  008E  00DA               	movwf	??_sprintf+1
  1389  008F  0859               	movf	??_sprintf,w
  1390  0090  07E0               	addwf	sprintf@width,f
  1391  0091  1803               	skipnc
  1392  0092  0AE1               	incf	sprintf@width+1,f
  1393  0093  085A               	movf	??_sprintf+1,w
  1394  0094  07E1               	addwf	sprintf@width+1,f
  1395  0095  3001               	movlw	1
  1396  0096  00D9               	movwf	??_sprintf
  1397  0097  0859               	movf	??_sprintf,w
  1398  0098  07D4               	addwf	sprintf@f,f
  1399                           
  1400                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  1401  0099  0854               	movf	sprintf@f,w
  1402  009A  0084               	movwf	4
  1403  009B  118A  241D  118A   	fcall	stringdir
  1404  009E  118A  2760  118A   	fcall	_isdigit
  1405  00A1  1C03               	btfss	3,0
  1406  00A2  28FA               	goto	l2504
  1407  00A3  286D               	goto	l2472
  1408  00A4                     l2480:	
  1409                           ;doprnt.c: 759: dostring:
  1410                           
  1411                           ;doprnt.c: 707: case 'i':
  1412                           ;doprnt.c: 708: break;
  1413                           
  1414                           ;doprnt.c: 706: case 'd':
  1415                           
  1416                           ;doprnt.c: 647: goto alldone;
  1417                           
  1418                           ;doprnt.c: 646: case 0:
  1419                           
  1420                           ;doprnt.c: 617: }
  1421                           ;doprnt.c: 644: switch(c = *f++) {
  1422                           
  1423                           
  1424                           ;doprnt.c: 766: if(width > _val._str._len)
  1425  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  1426  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  1427  00A6  0861               	movf	sprintf@width+1,w
  1428  00A7  0264               	subwf	sprintf@_val+2,w
  1429  00A8  1D03               	skipz
  1430  00A9  28AC               	goto	u2135
  1431  00AA  0860               	movf	sprintf@width,w
  1432  00AB  0263               	subwf	sprintf@_val+1,w
  1433  00AC                     u2135:	
  1434  00AC  1803               	skipnc
  1435  00AD  28B5               	goto	l2484
  1436                           
  1437                           ;doprnt.c: 767: width -= _val._str._len;
  1438  00AE  0863               	movf	sprintf@_val+1,w
  1439  00AF  02E0               	subwf	sprintf@width,f
  1440  00B0  0864               	movf	sprintf@_val+2,w
  1441  00B1  1C03               	skipc
  1442  00B2  03E1               	decf	sprintf@width+1,f
  1443  00B3  02E1               	subwf	sprintf@width+1,f
  1444  00B4  28B7               	goto	l2490
  1445  00B5                     l2484:	
  1446                           
  1447                           ;doprnt.c: 768: else
  1448                           ;doprnt.c: 769: width = 0;
  1449  00B5  01E0               	clrf	sprintf@width
  1450  00B6  01E1               	clrf	sprintf@width+1
  1451  00B7                     l2490:	
  1452                           ;doprnt.c: 773: while(width--)
  1453                           
  1454  00B7  30FF               	movlw	255
  1455  00B8  07E0               	addwf	sprintf@width,f
  1456  00B9  1803               	skipnc
  1457  00BA  0AE1               	incf	sprintf@width+1,f
  1458  00BB  30FF               	movlw	255
  1459  00BC  07E1               	addwf	sprintf@width+1,f
  1460  00BD  30FF               	movlw	255
  1461  00BE  0661               	xorwf	sprintf@width+1,w
  1462  00BF  1D03               	skipz
  1463  00C0  28C3               	goto	u2145
  1464  00C1  30FF               	movlw	255
  1465  00C2  0660               	xorwf	sprintf@width,w
  1466  00C3                     u2145:	
  1467  00C3  1903               	btfsc	3,2
  1468  00C4  28E2               	goto	l2498
  1469                           
  1470                           ;doprnt.c: 774: ((*sp++ = (' ')));
  1471  00C5  3020               	movlw	32
  1472  00C6  00D9               	movwf	??_sprintf
  1473  00C7  085F               	movf	sprintf@sp,w
  1474  00C8  0084               	movwf	4
  1475  00C9  0859               	movf	??_sprintf,w
  1476  00CA  1383               	bcf	3,7	;select IRP bank0
  1477  00CB  0080               	movwf	0
  1478  00CC  3001               	movlw	1
  1479  00CD  00D9               	movwf	??_sprintf
  1480  00CE  0859               	movf	??_sprintf,w
  1481  00CF  07DF               	addwf	sprintf@sp,f
  1482  00D0  28B7               	goto	l2490
  1483  00D1                     l2492:	
  1484                           ;doprnt.c: 776: while(_val._str._len--)
  1485                           
  1486                           
  1487                           ;doprnt.c: 777: ((*sp++ = (*_val._str._cp++)));
  1488  00D1  0862               	movf	sprintf@_val,w
  1489  00D2  0084               	movwf	4
  1490  00D3  1383               	bcf	3,7	;select IRP bank0
  1491  00D4  0800               	movf	0,w
  1492  00D5  00D9               	movwf	??_sprintf
  1493  00D6  085F               	movf	sprintf@sp,w
  1494  00D7  0084               	movwf	4
  1495  00D8  0859               	movf	??_sprintf,w
  1496  00D9  0080               	movwf	0
  1497  00DA  3001               	movlw	1
  1498  00DB  00D9               	movwf	??_sprintf
  1499  00DC  0859               	movf	??_sprintf,w
  1500  00DD  07E2               	addwf	sprintf@_val,f
  1501  00DE  3001               	movlw	1
  1502  00DF  00D9               	movwf	??_sprintf
  1503  00E0  0859               	movf	??_sprintf,w
  1504  00E1  07DF               	addwf	sprintf@sp,f
  1505  00E2                     l2498:	
  1506  00E2  3001               	movlw	1
  1507  00E3  02E3               	subwf	sprintf@_val+1,f
  1508  00E4  3000               	movlw	0
  1509  00E5  1C03               	skipc
  1510  00E6  03E4               	decf	sprintf@_val+2,f
  1511  00E7  02E4               	subwf	sprintf@_val+2,f
  1512  00E8  30FF               	movlw	255
  1513  00E9  0664               	xorwf	sprintf@_val+2,w
  1514  00EA  1D03               	skipz
  1515  00EB  28EE               	goto	u2155
  1516  00EC  30FF               	movlw	255
  1517  00ED  0663               	xorwf	sprintf@_val+1,w
  1518  00EE                     u2155:	
  1519  00EE  1903               	btfsc	3,2
  1520  00EF  282F               	goto	l2578
  1521  00F0  28D1               	goto	l2492
  1522  00F1                     l2500:	
  1523                           ;doprnt.c: 811: default:
  1524                           
  1525                           ;doprnt.c: 783: continue;
  1526                           
  1527                           
  1528                           ;doprnt.c: 814: _val._str._cp = (char *)&c;
  1529  00F1  3065               	movlw	sprintf@c& (0+255)
  1530  00F2  00D9               	movwf	??_sprintf
  1531  00F3  0859               	movf	??_sprintf,w
  1532  00F4  00E2               	movwf	sprintf@_val
  1533                           
  1534                           ;doprnt.c: 815: _val._str._len = 1;
  1535  00F5  3001               	movlw	1
  1536  00F6  00E3               	movwf	sprintf@_val+1
  1537  00F7  3000               	movlw	0
  1538  00F8  00E4               	movwf	sprintf@_val+2
  1539                           
  1540                           ;doprnt.c: 816: goto dostring;
  1541  00F9  28A4               	goto	l2480
  1542  00FA                     l2504:	
  1543                           ;doprnt.c: 831: }
  1544                           
  1545  00FA  3001               	movlw	1
  1546  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1547  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1548  00FD  07D4               	addwf	sprintf@f,f
  1549  00FE  30FF               	movlw	-1
  1550  00FF  0754               	addwf	sprintf@f,w
  1551  0100  0084               	movwf	4
  1552  0101  118A  241D  118A   	fcall	stringdir
  1553  0104  00E5               	movwf	sprintf@c
  1554                           
  1555                           ; Switch size 1, requested type "space"
  1556                           ; Number of cases is 3, Range of values is 0 to 105
  1557                           ; switch strategies available:
  1558                           ; Name         Instructions Cycles
  1559                           ; simple_byte           10     6 (average)
  1560                           ; direct_byte          219     7 (fixed)
  1561                           ; jumptable            260     6 (fixed)
  1562                           ;	Chosen strategy is simple_byte
  1563  0105  3A00               	xorlw	0	; case 0
  1564  0106  1903               	skipnz
  1565  0107  2A0F               	goto	l2580
  1566  0108  3A64               	xorlw	100	; case 100
  1567  0109  1903               	skipnz
  1568  010A  290F               	goto	l2506
  1569  010B  3A0D               	xorlw	13	; case 105
  1570  010C  1903               	skipnz
  1571  010D  290F               	goto	l2506
  1572  010E  28F1               	goto	l2500
  1573  010F                     l2506:	
  1574                           
  1575                           ;doprnt.c: 1260: {
  1576                           ;doprnt.c: 1266: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1577  010F  1283               	bcf	3,5	;RP0=0, select bank0
  1578  0110  1303               	bcf	3,6	;RP1=0, select bank0
  1579  0111  085C               	movf	sprintf@ap,w
  1580  0112  0084               	movwf	4
  1581  0113  1383               	bcf	3,7	;select IRP bank0
  1582  0114  0800               	movf	0,w
  1583  0115  00E2               	movwf	sprintf@_val
  1584  0116  0A84               	incf	4,f
  1585  0117  0800               	movf	0,w
  1586  0118  00E3               	movwf	sprintf@_val+1
  1587  0119  3002               	movlw	2
  1588  011A  00D9               	movwf	??_sprintf
  1589  011B  0859               	movf	??_sprintf,w
  1590  011C  07DC               	addwf	sprintf@ap,f
  1591                           
  1592                           ;doprnt.c: 1268: if((int)_val._val < 0) {
  1593  011D  1FE3               	btfss	sprintf@_val+1,7
  1594  011E  2928               	goto	l2516
  1595                           
  1596                           ;doprnt.c: 1269: flag |= 0x03;
  1597  011F  3003               	movlw	3
  1598  0120  00D9               	movwf	??_sprintf
  1599  0121  0859               	movf	??_sprintf,w
  1600  0122  04DE               	iorwf	sprintf@flag,f
  1601                           
  1602                           ;doprnt.c: 1270: _val._val = -_val._val;
  1603  0123  09E2               	comf	sprintf@_val,f
  1604  0124  09E3               	comf	sprintf@_val+1,f
  1605  0125  0AE2               	incf	sprintf@_val,f
  1606  0126  1903               	skipnz
  1607  0127  0AE3               	incf	sprintf@_val+1,f
  1608  0128                     l2516:	
  1609                           
  1610                           ;doprnt.c: 1271: }
  1611                           ;doprnt.c: 1273: }
  1612                           ;doprnt.c: 1312: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1613  0128  01E5               	clrf	sprintf@c
  1614  0129  0AE5               	incf	sprintf@c,f
  1615  012A  0865               	movf	sprintf@c,w
  1616  012B  3A05               	xorlw	5
  1617  012C  1903               	btfsc	3,2
  1618  012D  294B               	goto	l2528
  1619  012E                     l2520:	
  1620                           
  1621                           ;doprnt.c: 1313: if(_val._val < dpowers[c])
  1622  012E  0865               	movf	sprintf@c,w
  1623  012F  00D9               	movwf	??_sprintf
  1624  0130  0759               	addwf	??_sprintf,w
  1625  0131  3E01               	addlw	low (_dpowers-__stringbase)
  1626  0132  0084               	movwf	4
  1627  0133  118A  241D  118A   	fcall	stringdir
  1628  0136  00DA               	movwf	??_sprintf+1
  1629  0137  118A  241D  118A   	fcall	stringdir
  1630  013A  00DB               	movwf	??_sprintf+2
  1631  013B  085B               	movf	??_sprintf+2,w
  1632  013C  0263               	subwf	sprintf@_val+1,w
  1633  013D  1D03               	skipz
  1634  013E  2941               	goto	u2185
  1635  013F  085A               	movf	??_sprintf+1,w
  1636  0140  0262               	subwf	sprintf@_val,w
  1637  0141                     u2185:	
  1638  0141  1C03               	btfss	3,0
  1639  0142  294B               	goto	l2528
  1640                           
  1641                           ;doprnt.c: 1314: break;
  1642  0143  3001               	movlw	1
  1643  0144  00D9               	movwf	??_sprintf
  1644  0145  0859               	movf	??_sprintf,w
  1645  0146  07E5               	addwf	sprintf@c,f
  1646  0147  0865               	movf	sprintf@c,w
  1647  0148  3A05               	xorlw	5
  1648  0149  1D03               	skipz
  1649  014A  292E               	goto	l2520
  1650  014B                     l2528:	
  1651                           
  1652                           ;doprnt.c: 1352: if(width && flag & 0x03)
  1653  014B  0861               	movf	sprintf@width+1,w
  1654  014C  0460               	iorwf	sprintf@width,w
  1655  014D  1903               	skipnz
  1656  014E  2959               	goto	l317
  1657  014F  085E               	movf	sprintf@flag,w
  1658  0150  3903               	andlw	3
  1659  0151  1903               	btfsc	3,2
  1660  0152  2959               	goto	l317
  1661                           
  1662                           ;doprnt.c: 1353: width--;
  1663  0153  30FF               	movlw	255
  1664  0154  07E0               	addwf	sprintf@width,f
  1665  0155  1803               	skipnc
  1666  0156  0AE1               	incf	sprintf@width+1,f
  1667  0157  30FF               	movlw	255
  1668  0158  07E1               	addwf	sprintf@width+1,f
  1669  0159                     l317:	
  1670                           
  1671                           ;doprnt.c: 1388: if(width > c)
  1672  0159  0865               	movf	sprintf@c,w
  1673  015A  00D9               	movwf	??_sprintf
  1674  015B  01DA               	clrf	??_sprintf+1
  1675  015C  1BD9               	btfsc	??_sprintf,7
  1676  015D  03DA               	decf	??_sprintf+1,f
  1677  015E  085A               	movf	??_sprintf+1,w
  1678  015F  3A80               	xorlw	128
  1679  0160  00DB               	movwf	??_sprintf+2
  1680  0161  0861               	movf	sprintf@width+1,w
  1681  0162  3A80               	xorlw	128
  1682  0163  025B               	subwf	??_sprintf+2,w
  1683  0164  1D03               	skipz
  1684  0165  2968               	goto	u2225
  1685  0166  0860               	movf	sprintf@width,w
  1686  0167  0259               	subwf	??_sprintf,w
  1687  0168                     u2225:	
  1688  0168  1803               	skipnc
  1689  0169  2978               	goto	l2536
  1690                           
  1691                           ;doprnt.c: 1389: width -= c;
  1692  016A  1283               	bcf	3,5	;RP0=0, select bank0
  1693  016B  1303               	bcf	3,6	;RP1=0, select bank0
  1694  016C  0865               	movf	sprintf@c,w
  1695  016D  00D9               	movwf	??_sprintf
  1696  016E  01DA               	clrf	??_sprintf+1
  1697  016F  1BD9               	btfsc	??_sprintf,7
  1698  0170  03DA               	decf	??_sprintf+1,f
  1699  0171  0859               	movf	??_sprintf,w
  1700  0172  02E0               	subwf	sprintf@width,f
  1701  0173  085A               	movf	??_sprintf+1,w
  1702  0174  1C03               	skipc
  1703  0175  03E1               	decf	sprintf@width+1,f
  1704  0176  02E1               	subwf	sprintf@width+1,f
  1705  0177  297C               	goto	l2538
  1706  0178                     l2536:	
  1707                           
  1708                           ;doprnt.c: 1390: else
  1709                           ;doprnt.c: 1391: width = 0;
  1710  0178  1283               	bcf	3,5	;RP0=0, select bank0
  1711  0179  1303               	bcf	3,6	;RP1=0, select bank0
  1712  017A  01E0               	clrf	sprintf@width
  1713  017B  01E1               	clrf	sprintf@width+1
  1714  017C                     l2538:	
  1715                           
  1716                           ;doprnt.c: 1394: if(flag & 0x04) {
  1717  017C  1D5E               	btfss	sprintf@flag,2
  1718  017D  29A3               	goto	l2554
  1719                           
  1720                           ;doprnt.c: 1399: if(flag & 0x03)
  1721  017E  085E               	movf	sprintf@flag,w
  1722  017F  3903               	andlw	3
  1723  0180  1903               	btfsc	3,2
  1724  0181  298D               	goto	l2546
  1725                           
  1726                           ;doprnt.c: 1400: ((*sp++ = ('-')));
  1727  0182  302D               	movlw	45
  1728  0183  00D9               	movwf	??_sprintf
  1729  0184  085F               	movf	sprintf@sp,w
  1730  0185  0084               	movwf	4
  1731  0186  0859               	movf	??_sprintf,w
  1732  0187  1383               	bcf	3,7	;select IRP bank0
  1733  0188  0080               	movwf	0
  1734  0189  3001               	movlw	1
  1735  018A  00D9               	movwf	??_sprintf
  1736  018B  0859               	movf	??_sprintf,w
  1737  018C  07DF               	addwf	sprintf@sp,f
  1738  018D                     l2546:	
  1739                           
  1740                           ;doprnt.c: 1422: if(width)
  1741  018D  0861               	movf	sprintf@width+1,w
  1742  018E  0460               	iorwf	sprintf@width,w
  1743  018F  1903               	skipnz
  1744  0190  29CB               	goto	l2568
  1745                           
  1746                           ;doprnt.c: 1424: ((*sp++ = ('0')));
  1747                           
  1748                           ;doprnt.c: 1423: do
  1749  0191  3030               	movlw	48
  1750  0192  00D9               	movwf	??_sprintf
  1751  0193  085F               	movf	sprintf@sp,w
  1752  0194  0084               	movwf	4
  1753  0195  0859               	movf	??_sprintf,w
  1754  0196  1383               	bcf	3,7	;select IRP bank0
  1755  0197  0080               	movwf	0
  1756  0198  3001               	movlw	1
  1757  0199  00D9               	movwf	??_sprintf
  1758  019A  0859               	movf	??_sprintf,w
  1759  019B  07DF               	addwf	sprintf@sp,f
  1760                           
  1761                           ;doprnt.c: 1425: while(--width);
  1762  019C  30FF               	movlw	255
  1763  019D  07E0               	addwf	sprintf@width,f
  1764  019E  1803               	skipnc
  1765  019F  0AE1               	incf	sprintf@width+1,f
  1766  01A0  30FF               	movlw	255
  1767  01A1  07E1               	addwf	sprintf@width+1,f
  1768  01A2  298D               	goto	l2546
  1769  01A3                     l2554:	
  1770                           ;doprnt.c: 1427: } else
  1771                           
  1772                           
  1773                           ;doprnt.c: 1429: {
  1774                           ;doprnt.c: 1431: if(width
  1775                           ;doprnt.c: 1435: )
  1776  01A3  0861               	movf	sprintf@width+1,w
  1777  01A4  0460               	iorwf	sprintf@width,w
  1778  01A5  1903               	skipnz
  1779  01A6  29BC               	goto	l2562
  1780  01A7                     l2556:	
  1781                           ;doprnt.c: 1436: do
  1782                           
  1783                           
  1784                           ;doprnt.c: 1437: ((*sp++ = (' ')));
  1785  01A7  3020               	movlw	32
  1786  01A8  00D9               	movwf	??_sprintf
  1787  01A9  085F               	movf	sprintf@sp,w
  1788  01AA  0084               	movwf	4
  1789  01AB  0859               	movf	??_sprintf,w
  1790  01AC  1383               	bcf	3,7	;select IRP bank0
  1791  01AD  0080               	movwf	0
  1792  01AE  3001               	movlw	1
  1793  01AF  00D9               	movwf	??_sprintf
  1794  01B0  0859               	movf	??_sprintf,w
  1795  01B1  07DF               	addwf	sprintf@sp,f
  1796                           
  1797                           ;doprnt.c: 1438: while(--width);
  1798  01B2  30FF               	movlw	255
  1799  01B3  07E0               	addwf	sprintf@width,f
  1800  01B4  1803               	skipnc
  1801  01B5  0AE1               	incf	sprintf@width+1,f
  1802  01B6  30FF               	movlw	255
  1803  01B7  07E1               	addwf	sprintf@width+1,f
  1804  01B8  0861               	movf	sprintf@width+1,w
  1805  01B9  0460               	iorwf	sprintf@width,w
  1806  01BA  1D03               	skipz
  1807  01BB  29A7               	goto	l2556
  1808  01BC                     l2562:	
  1809                           
  1810                           ;doprnt.c: 1445: if(flag & 0x03)
  1811  01BC  085E               	movf	sprintf@flag,w
  1812  01BD  3903               	andlw	3
  1813  01BE  1903               	btfsc	3,2
  1814  01BF  29CB               	goto	l2568
  1815                           
  1816                           ;doprnt.c: 1446: ((*sp++ = ('-')));
  1817  01C0  302D               	movlw	45
  1818  01C1  00D9               	movwf	??_sprintf
  1819  01C2  085F               	movf	sprintf@sp,w
  1820  01C3  0084               	movwf	4
  1821  01C4  0859               	movf	??_sprintf,w
  1822  01C5  1383               	bcf	3,7	;select IRP bank0
  1823  01C6  0080               	movwf	0
  1824  01C7  3001               	movlw	1
  1825  01C8  00D9               	movwf	??_sprintf
  1826  01C9  0859               	movf	??_sprintf,w
  1827  01CA  07DF               	addwf	sprintf@sp,f
  1828  01CB                     l2568:	
  1829                           
  1830                           ;doprnt.c: 1476: }
  1831                           ;doprnt.c: 1479: prec = c;
  1832  01CB  0865               	movf	sprintf@c,w
  1833  01CC  00D9               	movwf	??_sprintf
  1834  01CD  0859               	movf	??_sprintf,w
  1835  01CE  00DD               	movwf	sprintf@prec
  1836  01CF                     l2576:	
  1837                           ;doprnt.c: 1481: while(prec--) {
  1838                           
  1839  01CF  30FF               	movlw	-1
  1840  01D0  00D9               	movwf	??_sprintf
  1841  01D1  0859               	movf	??_sprintf,w
  1842  01D2  07DD               	addwf	sprintf@prec,f
  1843  01D3  085D               	movf	sprintf@prec,w
  1844  01D4  3AFF               	xorlw	-1
  1845  01D5  1903               	btfsc	3,2
  1846  01D6  282F               	goto	l2578
  1847                           
  1848                           ;doprnt.c: 1485: {
  1849                           ;doprnt.c: 1496: c = (_val._val / dpowers[prec]) % 10 + '0';
  1850  01D7  300A               	movlw	10
  1851  01D8  00CF               	movwf	?___lwmod
  1852  01D9  3000               	movlw	0
  1853  01DA  00D0               	movwf	?___lwmod+1
  1854  01DB  085D               	movf	sprintf@prec,w
  1855  01DC  00D9               	movwf	??_sprintf
  1856  01DD  0759               	addwf	??_sprintf,w
  1857  01DE  3E01               	addlw	low (_dpowers-__stringbase)
  1858  01DF  0084               	movwf	4
  1859  01E0  118A  241D  118A   	fcall	stringdir
  1860  01E3  00C8               	movwf	?___lwdiv
  1861  01E4  118A  241D  118A   	fcall	stringdir
  1862  01E7  00C9               	movwf	?___lwdiv+1
  1863  01E8  0863               	movf	sprintf@_val+1,w
  1864  01E9  01CB               	clrf	?___lwdiv+3
  1865  01EA  07CB               	addwf	?___lwdiv+3,f
  1866  01EB  0862               	movf	sprintf@_val,w
  1867  01EC  01CA               	clrf	?___lwdiv+2
  1868  01ED  07CA               	addwf	?___lwdiv+2,f
  1869  01EE  118A  2502  118A   	fcall	___lwdiv
  1870  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  1871  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  1872  01F3  0849               	movf	?___lwdiv+1,w
  1873  01F4  01D2               	clrf	?___lwmod+3
  1874  01F5  07D2               	addwf	?___lwmod+3,f
  1875  01F6  0848               	movf	?___lwdiv,w
  1876  01F7  01D1               	clrf	?___lwmod+2
  1877  01F8  07D1               	addwf	?___lwmod+2,f
  1878  01F9  118A  257F  118A   	fcall	___lwmod
  1879  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  1880  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  1881  01FE  084F               	movf	?___lwmod,w
  1882  01FF  3E30               	addlw	48
  1883  0200  00DA               	movwf	??_sprintf+1
  1884  0201  085A               	movf	??_sprintf+1,w
  1885  0202  00E5               	movwf	sprintf@c
  1886                           
  1887                           ;doprnt.c: 1530: }
  1888                           ;doprnt.c: 1531: ((*sp++ = (c)));
  1889  0203  0865               	movf	sprintf@c,w
  1890  0204  00D9               	movwf	??_sprintf
  1891  0205  085F               	movf	sprintf@sp,w
  1892  0206  0084               	movwf	4
  1893  0207  0859               	movf	??_sprintf,w
  1894  0208  1383               	bcf	3,7	;select IRP bank0
  1895  0209  0080               	movwf	0
  1896  020A  3001               	movlw	1
  1897  020B  00D9               	movwf	??_sprintf
  1898  020C  0859               	movf	??_sprintf,w
  1899  020D  07DF               	addwf	sprintf@sp,f
  1900  020E  29CF               	goto	l2576
  1901  020F                     l2580:	
  1902                           ;doprnt.c: 1532: }
  1903                           ;doprnt.c: 1540: }
  1904                           ;doprnt.c: 1542: alldone:
  1905                           
  1906                           
  1907                           ;doprnt.c: 1545: *sp = 0;
  1908  020F  1283               	bcf	3,5	;RP0=0, select bank0
  1909  0210  1303               	bcf	3,6	;RP1=0, select bank0
  1910  0211  085F               	movf	sprintf@sp,w
  1911  0212  0084               	movwf	4
  1912  0213  1383               	bcf	3,7	;select IRP bank0
  1913  0214  0180               	clrf	0
  1914  0215  0008               	return
  1915  0216                     __end_of_sprintf:	
  1916                           ;doprnt.c: 1547: return 0;
  1917                           ;	Return value of _sprintf is never used
  1918                           
  1919                           
  1920                           	psect	text3
  1921  0642                     __ptext3:	
  1922 ;; *************** function ___wmul *****************
  1923 ;; Defined at:
  1924 ;;		line 3 in file "/Applications/microchip/xc8/v1.21/sources/pic/wmul.c"
  1925 ;; Parameters:    Size  Location     Type
  1926 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1927 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;  product         2    4[COMMON] unsigned int 
  1930 ;; Return value:  Size  Location     Type
  1931 ;;                  2    0[BANK0 ] unsigned int 
  1932 ;; Registers used:
  1933 ;;		wreg, status,2, status,0
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1939 ;;      Params:         0       4       0       0       0
  1940 ;;      Locals:         2       0       0       0       0
  1941 ;;      Temps:          0       0       0       0       0
  1942 ;;      Totals:         2       4       0       0       0
  1943 ;;Total ram usage:        6 bytes
  1944 ;; Hardware stack levels used:    1
  1945 ;; Hardware stack levels required when called:    2
  1946 ;; This function calls:
  1947 ;;		Nothing
  1948 ;; This function is called by:
  1949 ;;		_sprintf
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953                           
  1954                           ;psect for function ___wmul
  1955  0642                     ___wmul:	
  1956                           
  1957                           ;incstack = 0
  1958                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1959  0642  01F4               	clrf	___wmul@product
  1960  0643  01F5               	clrf	___wmul@product+1
  1961  0644                     l2906:	
  1962  0644  1283               	bcf	3,5	;RP0=0, select bank0
  1963  0645  1303               	bcf	3,6	;RP1=0, select bank0
  1964  0646  1C48               	btfss	___wmul@multiplier,0
  1965  0647  2E4E               	goto	l772
  1966  0648  084A               	movf	___wmul@multiplicand,w
  1967  0649  07F4               	addwf	___wmul@product,f
  1968  064A  1803               	skipnc
  1969  064B  0AF5               	incf	___wmul@product+1,f
  1970  064C  084B               	movf	___wmul@multiplicand+1,w
  1971  064D  07F5               	addwf	___wmul@product+1,f
  1972  064E                     l772:	
  1973  064E  3001               	movlw	1
  1974  064F                     u2805:	
  1975  064F  1003               	clrc
  1976  0650  0DCA               	rlf	___wmul@multiplicand,f
  1977  0651  0DCB               	rlf	___wmul@multiplicand+1,f
  1978  0652  3EFF               	addlw	-1
  1979  0653  1D03               	skipz
  1980  0654  2E4F               	goto	u2805
  1981  0655  3001               	movlw	1
  1982  0656                     u2815:	
  1983  0656  1003               	clrc
  1984  0657  0CC9               	rrf	___wmul@multiplier+1,f
  1985  0658  0CC8               	rrf	___wmul@multiplier,f
  1986  0659  3EFF               	addlw	-1
  1987  065A  1D03               	skipz
  1988  065B  2E56               	goto	u2815
  1989  065C  0849               	movf	___wmul@multiplier+1,w
  1990  065D  0448               	iorwf	___wmul@multiplier,w
  1991  065E  1D03               	skipz
  1992  065F  2E44               	goto	l2906
  1993  0660  0875               	movf	___wmul@product+1,w
  1994  0661  01C9               	clrf	?___wmul+1
  1995  0662  07C9               	addwf	?___wmul+1,f
  1996  0663  0874               	movf	___wmul@product,w
  1997  0664  01C8               	clrf	?___wmul
  1998  0665  07C8               	addwf	?___wmul,f
  1999  0666  0008               	return
  2000  0667                     __end_of___wmul:	
  2001                           
  2002                           	psect	text4
  2003  057F                     __ptext4:	
  2004 ;; *************** function ___lwmod *****************
  2005 ;; Defined at:
  2006 ;;		line 5 in file "/Applications/microchip/xc8/v1.21/sources/pic/lwmod.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;  divisor         2    7[BANK0 ] unsigned int 
  2009 ;;  dividend        2    9[BANK0 ] unsigned int 
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;  counter         1   11[BANK0 ] unsigned char 
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  2    7[BANK0 ] unsigned int 
  2014 ;; Registers used:
  2015 ;;		wreg, status,2, status,0
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2021 ;;      Params:         0       4       0       0       0
  2022 ;;      Locals:         0       1       0       0       0
  2023 ;;      Temps:          1       0       0       0       0
  2024 ;;      Totals:         1       5       0       0       0
  2025 ;;Total ram usage:        6 bytes
  2026 ;; Hardware stack levels used:    1
  2027 ;; Hardware stack levels required when called:    2
  2028 ;; This function calls:
  2029 ;;		Nothing
  2030 ;; This function is called by:
  2031 ;;		_sprintf
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           
  2036                           ;psect for function ___lwmod
  2037  057F                     ___lwmod:	
  2038                           
  2039                           ;incstack = 0
  2040                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2041  057F  1283               	bcf	3,5	;RP0=0, select bank0
  2042  0580  1303               	bcf	3,6	;RP1=0, select bank0
  2043  0581  0850               	movf	___lwmod@divisor+1,w
  2044  0582  044F               	iorwf	___lwmod@divisor,w
  2045  0583  1903               	skipnz
  2046  0584  2DAE               	goto	l2900
  2047  0585  01D3               	clrf	___lwmod@counter
  2048  0586  0AD3               	incf	___lwmod@counter,f
  2049  0587                     l2890:	
  2050  0587  1BD0               	btfsc	___lwmod@divisor+1,7
  2051  0588  2D95               	goto	l2892
  2052  0589  3001               	movlw	1
  2053  058A                     u2745:	
  2054  058A  1003               	clrc
  2055  058B  0DCF               	rlf	___lwmod@divisor,f
  2056  058C  0DD0               	rlf	___lwmod@divisor+1,f
  2057  058D  3EFF               	addlw	-1
  2058  058E  1D03               	skipz
  2059  058F  2D8A               	goto	u2745
  2060  0590  3001               	movlw	1
  2061  0591  00F5               	movwf	??___lwmod
  2062  0592  0875               	movf	??___lwmod,w
  2063  0593  07D3               	addwf	___lwmod@counter,f
  2064  0594  2D87               	goto	l2890
  2065  0595                     l2892:	
  2066  0595  0850               	movf	___lwmod@divisor+1,w
  2067  0596  0252               	subwf	___lwmod@dividend+1,w
  2068  0597  1D03               	skipz
  2069  0598  2D9B               	goto	u2765
  2070  0599  084F               	movf	___lwmod@divisor,w
  2071  059A  0251               	subwf	___lwmod@dividend,w
  2072  059B                     u2765:	
  2073  059B  1C03               	skipc
  2074  059C  2DA3               	goto	l2896
  2075  059D  084F               	movf	___lwmod@divisor,w
  2076  059E  02D1               	subwf	___lwmod@dividend,f
  2077  059F  0850               	movf	___lwmod@divisor+1,w
  2078  05A0  1C03               	skipc
  2079  05A1  03D2               	decf	___lwmod@dividend+1,f
  2080  05A2  02D2               	subwf	___lwmod@dividend+1,f
  2081  05A3                     l2896:	
  2082  05A3  3001               	movlw	1
  2083  05A4                     u2775:	
  2084  05A4  1003               	clrc
  2085  05A5  0CD0               	rrf	___lwmod@divisor+1,f
  2086  05A6  0CCF               	rrf	___lwmod@divisor,f
  2087  05A7  3EFF               	addlw	-1
  2088  05A8  1D03               	skipz
  2089  05A9  2DA4               	goto	u2775
  2090  05AA  3001               	movlw	1
  2091  05AB  02D3               	subwf	___lwmod@counter,f
  2092  05AC  1D03               	btfss	3,2
  2093  05AD  2D95               	goto	l2892
  2094  05AE                     l2900:	
  2095  05AE  0852               	movf	___lwmod@dividend+1,w
  2096  05AF  01D0               	clrf	?___lwmod+1
  2097  05B0  07D0               	addwf	?___lwmod+1,f
  2098  05B1  0851               	movf	___lwmod@dividend,w
  2099  05B2  01CF               	clrf	?___lwmod
  2100  05B3  07CF               	addwf	?___lwmod,f
  2101  05B4  0008               	return
  2102  05B5                     __end_of___lwmod:	
  2103                           
  2104                           	psect	text5
  2105  0502                     __ptext5:	
  2106 ;; *************** function ___lwdiv *****************
  2107 ;; Defined at:
  2108 ;;		line 5 in file "/Applications/microchip/xc8/v1.21/sources/pic/lwdiv.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;  divisor         2    0[BANK0 ] unsigned int 
  2111 ;;  dividend        2    2[BANK0 ] unsigned int 
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;  quotient        2    5[BANK0 ] unsigned int 
  2114 ;;  counter         1    4[BANK0 ] unsigned char 
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  2    0[BANK0 ] unsigned int 
  2117 ;; Registers used:
  2118 ;;		wreg, status,2, status,0
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2124 ;;      Params:         0       4       0       0       0
  2125 ;;      Locals:         0       3       0       0       0
  2126 ;;      Temps:          1       0       0       0       0
  2127 ;;      Totals:         1       7       0       0       0
  2128 ;;Total ram usage:        8 bytes
  2129 ;; Hardware stack levels used:    1
  2130 ;; Hardware stack levels required when called:    2
  2131 ;; This function calls:
  2132 ;;		Nothing
  2133 ;; This function is called by:
  2134 ;;		_sprintf
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           
  2139                           ;psect for function ___lwdiv
  2140  0502                     ___lwdiv:	
  2141                           
  2142                           ;incstack = 0
  2143                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2144  0502  1283               	bcf	3,5	;RP0=0, select bank0
  2145  0503  1303               	bcf	3,6	;RP1=0, select bank0
  2146  0504  01CD               	clrf	___lwdiv@quotient
  2147  0505  01CE               	clrf	___lwdiv@quotient+1
  2148  0506  0849               	movf	___lwdiv@divisor+1,w
  2149  0507  0448               	iorwf	___lwdiv@divisor,w
  2150  0508  1903               	skipnz
  2151  0509  2D3B               	goto	l2878
  2152  050A  01CC               	clrf	___lwdiv@counter
  2153  050B  0ACC               	incf	___lwdiv@counter,f
  2154  050C                     l2866:	
  2155  050C  1BC9               	btfsc	___lwdiv@divisor+1,7
  2156  050D  2D1A               	goto	l2868
  2157  050E  3001               	movlw	1
  2158  050F                     u2675:	
  2159  050F  1003               	clrc
  2160  0510  0DC8               	rlf	___lwdiv@divisor,f
  2161  0511  0DC9               	rlf	___lwdiv@divisor+1,f
  2162  0512  3EFF               	addlw	-1
  2163  0513  1D03               	skipz
  2164  0514  2D0F               	goto	u2675
  2165  0515  3001               	movlw	1
  2166  0516  00F4               	movwf	??___lwdiv
  2167  0517  0874               	movf	??___lwdiv,w
  2168  0518  07CC               	addwf	___lwdiv@counter,f
  2169  0519  2D0C               	goto	l2866
  2170  051A                     l2868:	
  2171  051A  3001               	movlw	1
  2172  051B                     u2695:	
  2173  051B  1003               	clrc
  2174  051C  0DCD               	rlf	___lwdiv@quotient,f
  2175  051D  0DCE               	rlf	___lwdiv@quotient+1,f
  2176  051E  3EFF               	addlw	-1
  2177  051F  1D03               	skipz
  2178  0520  2D1B               	goto	u2695
  2179  0521  0849               	movf	___lwdiv@divisor+1,w
  2180  0522  024B               	subwf	___lwdiv@dividend+1,w
  2181  0523  1D03               	skipz
  2182  0524  2D27               	goto	u2705
  2183  0525  0848               	movf	___lwdiv@divisor,w
  2184  0526  024A               	subwf	___lwdiv@dividend,w
  2185  0527                     u2705:	
  2186  0527  1C03               	skipc
  2187  0528  2D30               	goto	l2874
  2188  0529  0848               	movf	___lwdiv@divisor,w
  2189  052A  02CA               	subwf	___lwdiv@dividend,f
  2190  052B  0849               	movf	___lwdiv@divisor+1,w
  2191  052C  1C03               	skipc
  2192  052D  03CB               	decf	___lwdiv@dividend+1,f
  2193  052E  02CB               	subwf	___lwdiv@dividend+1,f
  2194  052F  144D               	bsf	___lwdiv@quotient,0
  2195  0530                     l2874:	
  2196  0530  3001               	movlw	1
  2197  0531                     u2715:	
  2198  0531  1003               	clrc
  2199  0532  0CC9               	rrf	___lwdiv@divisor+1,f
  2200  0533  0CC8               	rrf	___lwdiv@divisor,f
  2201  0534  3EFF               	addlw	-1
  2202  0535  1D03               	skipz
  2203  0536  2D31               	goto	u2715
  2204  0537  3001               	movlw	1
  2205  0538  02CC               	subwf	___lwdiv@counter,f
  2206  0539  1D03               	btfss	3,2
  2207  053A  2D1A               	goto	l2868
  2208  053B                     l2878:	
  2209  053B  084E               	movf	___lwdiv@quotient+1,w
  2210  053C  01C9               	clrf	?___lwdiv+1
  2211  053D  07C9               	addwf	?___lwdiv+1,f
  2212  053E  084D               	movf	___lwdiv@quotient,w
  2213  053F  01C8               	clrf	?___lwdiv
  2214  0540  07C8               	addwf	?___lwdiv,f
  2215  0541  0008               	return
  2216  0542                     __end_of___lwdiv:	
  2217                           
  2218                           	psect	text6
  2219  0760                     __ptext6:	
  2220 ;; *************** function _isdigit *****************
  2221 ;; Defined at:
  2222 ;;		line 13 in file "/Applications/microchip/xc8/v1.21/sources/common/isdigit.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;  c               1    wreg     unsigned char 
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;  c               1    5[COMMON] unsigned char 
  2227 ;; Return value:  Size  Location     Type
  2228 ;;		None               void
  2229 ;; Registers used:
  2230 ;;		wreg, status,2, status,0
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2236 ;;      Params:         0       0       0       0       0
  2237 ;;      Locals:         2       0       0       0       0
  2238 ;;      Temps:          0       0       0       0       0
  2239 ;;      Totals:         2       0       0       0       0
  2240 ;;Total ram usage:        2 bytes
  2241 ;; Hardware stack levels used:    1
  2242 ;; Hardware stack levels required when called:    2
  2243 ;; This function calls:
  2244 ;;		Nothing
  2245 ;; This function is called by:
  2246 ;;		_sprintf
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           
  2251                           ;psect for function _isdigit
  2252  0760                     _isdigit:	
  2253                           
  2254                           ;incstack = 0
  2255                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2256                           ;isdigit@c stored from wreg
  2257  0760  00F5               	movwf	isdigit@c
  2258  0761  01F4               	clrf	_isdigit$715
  2259  0762  303A               	movlw	58
  2260  0763  0275               	subwf	isdigit@c,w
  2261  0764  1803               	skipnc
  2262  0765  2F6C               	goto	l2852
  2263  0766  3030               	movlw	48
  2264  0767  0275               	subwf	isdigit@c,w
  2265  0768  1C03               	skipc
  2266  0769  2F6C               	goto	l2852
  2267  076A  01F4               	clrf	_isdigit$715
  2268  076B  0AF4               	incf	_isdigit$715,f
  2269  076C                     l2852:	
  2270  076C  0C74               	rrf	_isdigit$715,w
  2271  076D  0008               	return
  2272  076E                     __end_of_isdigit:	
  2273                           
  2274                           	psect	text7
  2275  05E6                     __ptext7:	
  2276 ;; *************** function _dhtlib_read11 *****************
  2277 ;; Defined at:
  2278 ;;		line 113 in file "../DHTLib.c"
  2279 ;; Parameters:    Size  Location     Type
  2280 ;;  temp            1    wreg     PTR unsigned char 
  2281 ;;		 -> dht11_task@tb(1), 
  2282 ;;  hum             1    6[BANK0 ] PTR unsigned char 
  2283 ;;		 -> dht11_task@hb(1), 
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;  temp            1   10[BANK0 ] PTR unsigned char 
  2286 ;;		 -> dht11_task@tb(1), 
  2287 ;;  s               1   12[BANK0 ] enum E1000
  2288 ;;  chksum          1   11[BANK0 ] unsigned char 
  2289 ;; Return value:  Size  Location     Type
  2290 ;;                  1    wreg      enum E1128
  2291 ;; Registers used:
  2292 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2298 ;;      Params:         0       1       0       0       0
  2299 ;;      Locals:         0       3       0       0       0
  2300 ;;      Temps:          0       3       0       0       0
  2301 ;;      Totals:         0       7       0       0       0
  2302 ;;Total ram usage:        7 bytes
  2303 ;; Hardware stack levels used:    1
  2304 ;; Hardware stack levels required when called:    4
  2305 ;; This function calls:
  2306 ;;		_dhtlib_read
  2307 ;; This function is called by:
  2308 ;;		_dht11_task
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312                           
  2313                           ;psect for function _dhtlib_read11
  2314  05E6                     _dhtlib_read11:	
  2315                           
  2316                           ;incstack = 0
  2317                           ; Regs used in _dhtlib_read11: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2318                           ;dhtlib_read11@temp stored from wreg
  2319  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  2320  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  2321  05E8  00D2               	movwf	dhtlib_read11@temp
  2322                           
  2323                           ;DHTLib.c: 115: enum dhtlib_status s = dhtlib_read();
  2324  05E9  118A  2383  118A   	fcall	_dhtlib_read
  2325  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  2326  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  2327  05EE  00CF               	movwf	??_dhtlib_read11
  2328  05EF  084F               	movf	??_dhtlib_read11,w
  2329  05F0  00D4               	movwf	dhtlib_read11@s
  2330                           
  2331                           ;DHTLib.c: 116: if (s != E_DHTLIB_OK)
  2332  05F1  0854               	movf	dhtlib_read11@s,w
  2333  05F2  1903               	btfsc	3,2
  2334  05F3  2DF6               	goto	l2438
  2335                           
  2336                           ;DHTLib.c: 117: return s;
  2337  05F4  0854               	movf	dhtlib_read11@s,w
  2338  05F5  0008               	return
  2339  05F6                     l2438:	
  2340                           
  2341                           ;DHTLib.c: 119: unsigned char chksum = bits[0] + bits[1] + bits[2] + bits[3];
  2342  05F6  0828               	movf	_bits+2,w
  2343  05F7  0727               	addwf	_bits+1,w
  2344  05F8  00CF               	movwf	??_dhtlib_read11
  2345  05F9  0829               	movf	_bits+3,w
  2346  05FA  074F               	addwf	??_dhtlib_read11,w
  2347  05FB  00D0               	movwf	??_dhtlib_read11+1
  2348  05FC  0826               	movf	_bits,w
  2349  05FD  0750               	addwf	??_dhtlib_read11+1,w
  2350  05FE  00D1               	movwf	??_dhtlib_read11+2
  2351  05FF  0851               	movf	??_dhtlib_read11+2,w
  2352  0600  00D3               	movwf	dhtlib_read11@chksum
  2353                           
  2354                           ;DHTLib.c: 120: if (chksum != bits[4])
  2355  0601  082A               	movf	_bits+4,w
  2356  0602  0653               	xorwf	dhtlib_read11@chksum,w
  2357  0603  1903               	skipnz
  2358  0604  2E07               	goto	l2446
  2359                           
  2360                           ;DHTLib.c: 121: return E_DHTLIB_CHKSUM_ERROR;
  2361  0605  3002               	movlw	2
  2362  0606  0008               	return
  2363  0607                     l2446:	
  2364                           
  2365                           ;DHTLib.c: 123: * hum = bits[0];
  2366  0607  0826               	movf	_bits,w
  2367  0608  00CF               	movwf	??_dhtlib_read11
  2368  0609  084E               	movf	dhtlib_read11@hum,w
  2369  060A  0084               	movwf	4
  2370  060B  084F               	movf	??_dhtlib_read11,w
  2371  060C  1383               	bcf	3,7	;select IRP bank0
  2372  060D  0080               	movwf	0
  2373                           
  2374                           ;DHTLib.c: 124: * temp = bits[2];
  2375  060E  0828               	movf	_bits+2,w
  2376  060F  00CF               	movwf	??_dhtlib_read11
  2377  0610  0852               	movf	dhtlib_read11@temp,w
  2378  0611  0084               	movwf	4
  2379  0612  084F               	movf	??_dhtlib_read11,w
  2380  0613  0080               	movwf	0
  2381                           
  2382                           ;DHTLib.c: 126: return E_DHTLIB_OK;
  2383  0614  3000               	movlw	0
  2384  0615  0008               	return
  2385  0616                     __end_of_dhtlib_read11:	
  2386                           
  2387                           	psect	text8
  2388  0383                     __ptext8:	
  2389 ;; *************** function _dhtlib_read *****************
  2390 ;; Defined at:
  2391 ;;		line 40 in file "../DHTLib.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;		None
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;  i               1    5[BANK0 ] unsigned char 
  2396 ;;  tocounter       1    4[BANK0 ] unsigned char 
  2397 ;;  bcount          1    3[BANK0 ] unsigned char 
  2398 ;;  aindex          1    2[BANK0 ] unsigned char 
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  1    wreg      enum E1000
  2401 ;; Registers used:
  2402 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2408 ;;      Params:         0       0       0       0       0
  2409 ;;      Locals:         0       4       0       0       0
  2410 ;;      Temps:          0       2       0       0       0
  2411 ;;      Totals:         0       6       0       0       0
  2412 ;;Total ram usage:        6 bytes
  2413 ;; Hardware stack levels used:    1
  2414 ;; Hardware stack levels required when called:    3
  2415 ;; This function calls:
  2416 ;;		_dhtlib_start
  2417 ;; This function is called by:
  2418 ;;		_dhtlib_read11
  2419 ;;		_dhtlib_read22
  2420 ;;		_dhtlib_float22
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           
  2425                           ;psect for function _dhtlib_read
  2426  0383                     _dhtlib_read:	
  2427                           
  2428                           ;DHTLib.c: 41: unsigned char i = 0;
  2429                           
  2430                           ;incstack = 0
  2431                           ; Regs used in _dhtlib_read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2432  0383  1283               	bcf	3,5	;RP0=0, select bank0
  2433  0384  1303               	bcf	3,6	;RP1=0, select bank0
  2434  0385  01CD               	clrf	dhtlib_read@i
  2435                           
  2436                           ;DHTLib.c: 42: unsigned char aindex = 0;
  2437  0386  01CA               	clrf	dhtlib_read@aindex
  2438                           
  2439                           ;DHTLib.c: 43: unsigned char bcount = 7;
  2440  0387  3007               	movlw	7
  2441  0388  00C8               	movwf	??_dhtlib_read
  2442  0389  0848               	movf	??_dhtlib_read,w
  2443  038A  00CB               	movwf	dhtlib_read@bcount
  2444                           
  2445                           ;DHTLib.c: 47: PORTBASE tocounter = 0;
  2446  038B  01CC               	clrf	dhtlib_read@tocounter
  2447                           
  2448                           ;DHTLib.c: 50: for (i = 0; i < 5; i++) bits[i] = 0;
  2449  038C  01CD               	clrf	dhtlib_read@i
  2450  038D  3005               	movlw	5
  2451  038E  024D               	subwf	dhtlib_read@i,w
  2452  038F  1803               	btfsc	3,0
  2453  0390  2B9E               	goto	l73
  2454  0391                     l2596:	
  2455  0391  084D               	movf	dhtlib_read@i,w
  2456  0392  3E26               	addlw	_bits& (0+255)
  2457  0393  0084               	movwf	4
  2458  0394  1383               	bcf	3,7	;select IRP bank0
  2459  0395  0180               	clrf	0
  2460  0396  3001               	movlw	1
  2461  0397  00C8               	movwf	??_dhtlib_read
  2462  0398  0848               	movf	??_dhtlib_read,w
  2463  0399  07CD               	addwf	dhtlib_read@i,f
  2464  039A  3005               	movlw	5
  2465  039B  024D               	subwf	dhtlib_read@i,w
  2466  039C  1C03               	skipc
  2467  039D  2B91               	goto	l2596
  2468  039E                     l73:	
  2469                           
  2470                           ;DHTLib.c: 53: INTCONbits.GIE = 0;;
  2471  039E  138B               	bcf	11,7	;volatile
  2472                           
  2473                           ;DHTLib.c: 56: dhtlib_start();
  2474  039F  118A  26EB  118A   	fcall	_dhtlib_start
  2475                           
  2476                           ;DHTLib.c: 59: tocounter = 1;
  2477  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  2478  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  2479  03A4  01CC               	clrf	dhtlib_read@tocounter
  2480  03A5  0ACC               	incf	dhtlib_read@tocounter,f
  2481  03A6                     l74:	
  2482                           ;DHTLib.c: 60: while (!PORTBbits.RB2) {
  2483                           
  2484  03A6  1906               	btfsc	6,2	;volatile
  2485  03A7  2BB1               	goto	l78
  2486                           
  2487                           ;DHTLib.c: 61: if (!tocounter++)
  2488  03A8  3001               	movlw	1
  2489  03A9  00C8               	movwf	??_dhtlib_read
  2490  03AA  0848               	movf	??_dhtlib_read,w
  2491  03AB  07CC               	addwf	dhtlib_read@tocounter,f
  2492  03AC  084C               	movf	dhtlib_read@tocounter,w
  2493  03AD  3A01               	xorlw	1
  2494  03AE  1903               	btfsc	3,2
  2495  03AF  2C10               	goto	l77
  2496  03B0  2BA6               	goto	l74
  2497  03B1                     l78:	
  2498                           ;DHTLib.c: 62: goto timeout;
  2499                           
  2500                           
  2501                           ;DHTLib.c: 63: }
  2502                           ;DHTLib.c: 65: tocounter = 1;
  2503  03B1  01CC               	clrf	dhtlib_read@tocounter
  2504  03B2  0ACC               	incf	dhtlib_read@tocounter,f
  2505  03B3                     l79:	
  2506                           ;DHTLib.c: 66: while (PORTBbits.RB2) {
  2507                           
  2508  03B3  1D06               	btfss	6,2	;volatile
  2509  03B4  2BBE               	goto	l2614
  2510                           
  2511                           ;DHTLib.c: 67: if (!tocounter++)
  2512  03B5  3001               	movlw	1
  2513  03B6  00C8               	movwf	??_dhtlib_read
  2514  03B7  0848               	movf	??_dhtlib_read,w
  2515  03B8  07CC               	addwf	dhtlib_read@tocounter,f
  2516  03B9  084C               	movf	dhtlib_read@tocounter,w
  2517  03BA  3A01               	xorlw	1
  2518  03BB  1903               	btfsc	3,2
  2519  03BC  2C10               	goto	l77
  2520  03BD  2BB3               	goto	l79
  2521  03BE                     l2614:	
  2522                           ;DHTLib.c: 68: goto timeout;
  2523                           
  2524                           
  2525                           ;DHTLib.c: 69: }
  2526                           ;DHTLib.c: 71: for (i = 0; i < 40; i++) {
  2527  03BE  01CD               	clrf	dhtlib_read@i
  2528  03BF  3028               	movlw	40
  2529  03C0  024D               	subwf	dhtlib_read@i,w
  2530  03C1  1803               	btfsc	3,0
  2531  03C2  2C0D               	goto	l84
  2532  03C3                     l83:	
  2533                           
  2534                           ;DHTLib.c: 72: tocounter = 1;
  2535  03C3  01CC               	clrf	dhtlib_read@tocounter
  2536  03C4  0ACC               	incf	dhtlib_read@tocounter,f
  2537  03C5                     l85:	
  2538                           ;DHTLib.c: 73: while (!PORTBbits.RB2) {
  2539                           
  2540  03C5  1906               	btfsc	6,2	;volatile
  2541  03C6  2BD0               	goto	l2624
  2542                           
  2543                           ;DHTLib.c: 74: if (!tocounter++)
  2544  03C7  3001               	movlw	1
  2545  03C8  00C8               	movwf	??_dhtlib_read
  2546  03C9  0848               	movf	??_dhtlib_read,w
  2547  03CA  07CC               	addwf	dhtlib_read@tocounter,f
  2548  03CB  084C               	movf	dhtlib_read@tocounter,w
  2549  03CC  3A01               	xorlw	1
  2550  03CD  1903               	btfsc	3,2
  2551  03CE  2C10               	goto	l77
  2552  03CF  2BC5               	goto	l85
  2553  03D0                     l2624:	
  2554                           ;DHTLib.c: 75: goto timeout;
  2555                           
  2556                           
  2557                           ;DHTLib.c: 76: }
  2558                           ;DHTLib.c: 78: _delay((unsigned long)((40)*(2000000/1000000.0)));
  2559  03D0  301A               	movlw	26
  2560  03D1  00C8               	movwf	??_dhtlib_read
  2561  03D2                     u2837:	
  2562  03D2  0BC8               	decfsz	??_dhtlib_read,f
  2563  03D3  2BD2               	goto	u2837
  2564  03D4  0000               	nop
  2565                           
  2566                           ;DHTLib.c: 79: if (!PORTBbits.RB2) {
  2567  03D5  1283               	bcf	3,5	;RP0=0, select bank0
  2568  03D6  1303               	bcf	3,6	;RP1=0, select bank0
  2569  03D7  1D06               	btfss	6,2	;volatile
  2570  03D8  2BF7               	goto	L3
  2571                           
  2572                           ;DHTLib.c: 87: }
  2573                           ;DHTLib.c: 89: tocounter = 1;
  2574                           
  2575                           ;DHTLib.c: 85: }
  2576                           ;DHTLib.c: 86: continue;
  2577                           
  2578                           ;DHTLib.c: 84: bcount--;
  2579                           
  2580                           ;DHTLib.c: 83: } else {
  2581                           
  2582                           ;DHTLib.c: 82: aindex++;
  2583                           
  2584                           ;DHTLib.c: 81: bcount = 7;
  2585                           
  2586                           ;DHTLib.c: 80: if (bcount == 0) {
  2587  03D9  01CC               	clrf	dhtlib_read@tocounter
  2588  03DA  0ACC               	incf	dhtlib_read@tocounter,f
  2589  03DB                     l93:	
  2590                           ;DHTLib.c: 90: while (PORTBbits.RB2) {
  2591                           
  2592  03DB  1D06               	btfss	6,2	;volatile
  2593  03DC  2BE6               	goto	l2640
  2594                           
  2595                           ;DHTLib.c: 91: if (!tocounter++)
  2596  03DD  3001               	movlw	1
  2597  03DE  00C8               	movwf	??_dhtlib_read
  2598  03DF  0848               	movf	??_dhtlib_read,w
  2599  03E0  07CC               	addwf	dhtlib_read@tocounter,f
  2600  03E1  084C               	movf	dhtlib_read@tocounter,w
  2601  03E2  3A01               	xorlw	1
  2602  03E3  1903               	btfsc	3,2
  2603  03E4  2C10               	goto	l77
  2604  03E5  2BDB               	goto	l93
  2605  03E6                     l2640:	
  2606                           ;DHTLib.c: 92: goto timeout;
  2607                           
  2608                           
  2609                           ;DHTLib.c: 93: }
  2610                           ;DHTLib.c: 95: bits[aindex] |= (1 << bcount);
  2611  03E6  3001               	movlw	1
  2612  03E7  00C8               	movwf	??_dhtlib_read
  2613  03E8  0A4B               	incf	dhtlib_read@bcount,w
  2614  03E9  2BEC               	goto	u2454
  2615  03EA                     u2455:	
  2616  03EA  1003               	clrc
  2617  03EB  0DC8               	rlf	??_dhtlib_read,f
  2618  03EC                     u2454:	
  2619  03EC  3EFF               	addlw	-1
  2620  03ED  1D03               	skipz
  2621  03EE  2BEA               	goto	u2455
  2622  03EF  0848               	movf	??_dhtlib_read,w
  2623  03F0  00C9               	movwf	??_dhtlib_read+1
  2624  03F1  084A               	movf	dhtlib_read@aindex,w
  2625  03F2  3E26               	addlw	_bits& (0+255)
  2626  03F3  0084               	movwf	4
  2627  03F4  0849               	movf	??_dhtlib_read+1,w
  2628  03F5  1383               	bcf	3,7	;select IRP bank0
  2629  03F6  0480               	iorwf	0,f
  2630  03F7                     L3:	
  2631                           
  2632                           ;DHTLib.c: 96: if (bcount == 0) {
  2633  03F7  08CB               	movf	dhtlib_read@bcount,f
  2634  03F8  1D03               	skipz
  2635  03F9  2C03               	goto	l2648
  2636                           
  2637                           ;DHTLib.c: 97: bcount = 7;
  2638  03FA  3007               	movlw	7
  2639  03FB  00C8               	movwf	??_dhtlib_read
  2640  03FC  0848               	movf	??_dhtlib_read,w
  2641  03FD  00CB               	movwf	dhtlib_read@bcount
  2642                           
  2643                           ;DHTLib.c: 98: aindex++;
  2644  03FE  3001               	movlw	1
  2645  03FF  00C8               	movwf	??_dhtlib_read
  2646  0400  0848               	movf	??_dhtlib_read,w
  2647  0401  07CA               	addwf	dhtlib_read@aindex,f
  2648                           
  2649                           ;DHTLib.c: 99: } else {
  2650  0402  2C05               	goto	l92
  2651  0403                     l2648:	
  2652                           
  2653                           ;DHTLib.c: 100: bcount--;
  2654  0403  3001               	movlw	1
  2655  0404  02CB               	subwf	dhtlib_read@bcount,f
  2656  0405                     l92:	
  2657  0405  3001               	movlw	1
  2658  0406  00C8               	movwf	??_dhtlib_read
  2659  0407  0848               	movf	??_dhtlib_read,w
  2660  0408  07CD               	addwf	dhtlib_read@i,f
  2661  0409  3028               	movlw	40
  2662  040A  024D               	subwf	dhtlib_read@i,w
  2663  040B  1C03               	skipc
  2664  040C  2BC3               	goto	l83
  2665  040D                     l84:	
  2666                           
  2667                           ;DHTLib.c: 101: }
  2668                           ;DHTLib.c: 102: }
  2669                           ;DHTLib.c: 104: INTCONbits.GIE = 1;;
  2670  040D  178B               	bsf	11,7	;volatile
  2671                           
  2672                           ;DHTLib.c: 105: return E_DHTLIB_OK;
  2673  040E  3000               	movlw	0
  2674  040F  0008               	return
  2675  0410                     l77:	
  2676                           ;DHTLib.c: 107: timeout:
  2677                           
  2678                           
  2679                           ;DHTLib.c: 108: INTCONbits.GIE = 1;;
  2680  0410  178B               	bsf	11,7	;volatile
  2681                           
  2682                           ;DHTLib.c: 109: return E_DHTLIB_TIMEOUT_ERROR;
  2683  0411  3001               	movlw	1
  2684  0412  0008               	return
  2685  0413                     __end_of_dhtlib_read:	
  2686                           
  2687                           	psect	text9
  2688  06EB                     __ptext9:	
  2689 ;; *************** function _dhtlib_start *****************
  2690 ;; Defined at:
  2691 ;;		line 179 in file "../DHTLib.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;		None
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;		None
  2696 ;; Return value:  Size  Location     Type
  2697 ;;		None               void
  2698 ;; Registers used:
  2699 ;;		wreg
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2705 ;;      Params:         0       0       0       0       0
  2706 ;;      Locals:         0       0       0       0       0
  2707 ;;      Temps:          2       0       0       0       0
  2708 ;;      Totals:         2       0       0       0       0
  2709 ;;Total ram usage:        2 bytes
  2710 ;; Hardware stack levels used:    1
  2711 ;; Hardware stack levels required when called:    2
  2712 ;; This function calls:
  2713 ;;		Nothing
  2714 ;; This function is called by:
  2715 ;;		_dhtlib_read
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           
  2720                           ;psect for function _dhtlib_start
  2721  06EB                     _dhtlib_start:	
  2722                           
  2723                           ;DHTLib.c: 180: TRISBbits.TRISB2 = 0;
  2724                           
  2725                           ;incstack = 0
  2726                           ; Regs used in _dhtlib_start: [wreg]
  2727  06EB  1683               	bsf	3,5	;RP0=1, select bank1
  2728  06EC  1303               	bcf	3,6	;RP1=0, select bank1
  2729  06ED  1106               	bcf	6,2	;volatile
  2730                           
  2731                           ;DHTLib.c: 181: {PORTBbits.RB2 = 0; PORTBbits.RB2 = 0;};
  2732  06EE  1283               	bcf	3,5	;RP0=0, select bank0
  2733  06EF  1303               	bcf	3,6	;RP1=0, select bank0
  2734  06F0  1106               	bcf	6,2	;volatile
  2735  06F1  1106               	bcf	6,2	;volatile
  2736                           
  2737                           ;DHTLib.c: 183: _delay((unsigned long)((20)*(2000000/1000.0)));
  2738  06F2  3034               	movlw	52
  2739  06F3  00F5               	movwf	??_dhtlib_start+1
  2740  06F4  30F1               	movlw	241
  2741  06F5  00F4               	movwf	??_dhtlib_start
  2742  06F6                     u2847:	
  2743  06F6  0BF4               	decfsz	??_dhtlib_start,f
  2744  06F7  2EF6               	goto	u2847
  2745  06F8  0BF5               	decfsz	??_dhtlib_start+1,f
  2746  06F9  2EF6               	goto	u2847
  2747  06FA  2EFB               	nop2
  2748                           
  2749                           ;DHTLib.c: 185: {PORTBbits.RB2 = 1; PORTBbits.RB2 = 1;};
  2750  06FB  1283               	bcf	3,5	;RP0=0, select bank0
  2751  06FC  1303               	bcf	3,6	;RP1=0, select bank0
  2752  06FD  1506               	bsf	6,2	;volatile
  2753  06FE  1506               	bsf	6,2	;volatile
  2754                           
  2755                           ;DHTLib.c: 186: TRISBbits.TRISB2 = 1;
  2756  06FF  1683               	bsf	3,5	;RP0=1, select bank1
  2757  0700  1303               	bcf	3,6	;RP1=0, select bank1
  2758  0701  1506               	bsf	6,2	;volatile
  2759                           
  2760                           ;DHTLib.c: 188: _delay((unsigned long)((60)*(2000000/1000000.0)));
  2761  0702  3027               	movlw	39
  2762  0703  00F4               	movwf	??_dhtlib_start
  2763  0704                     u2857:	
  2764  0704  0BF4               	decfsz	??_dhtlib_start,f
  2765  0705  2F04               	goto	u2857
  2766  0706  2F07               	nop2	;nop
  2767  0707  0008               	return
  2768  0708                     __end_of_dhtlib_start:	
  2769                           
  2770                           	psect	text10
  2771  068A                     __ptext10:	
  2772 ;; *************** function _lcd_goto *****************
  2773 ;; Defined at:
  2774 ;;		line 148 in file "../LCD/LCD.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;  col             1    wreg     unsigned char 
  2777 ;;  row             1    7[BANK0 ] unsigned char 
  2778 ;; Auto vars:     Size  Location     Type
  2779 ;;  col             1    9[BANK0 ] unsigned char 
  2780 ;; Return value:  Size  Location     Type
  2781 ;;		None               void
  2782 ;; Registers used:
  2783 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2784 ;; Tracked objects:
  2785 ;;		On entry : 0/0
  2786 ;;		On exit  : 0/0
  2787 ;;		Unchanged: 0/0
  2788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2789 ;;      Params:         0       1       0       0       0
  2790 ;;      Locals:         0       1       0       0       0
  2791 ;;      Temps:          0       1       0       0       0
  2792 ;;      Totals:         0       3       0       0       0
  2793 ;;Total ram usage:        3 bytes
  2794 ;; Hardware stack levels used:    1
  2795 ;; Hardware stack levels required when called:    5
  2796 ;; This function calls:
  2797 ;;		_lcd_send
  2798 ;; This function is called by:
  2799 ;;		_dht11_task
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803                           
  2804                           ;psect for function _lcd_goto
  2805  068A                     _lcd_goto:	
  2806                           
  2807                           ;incstack = 0
  2808                           ; Regs used in _lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2809                           ;lcd_goto@col stored from wreg
  2810  068A  1283               	bcf	3,5	;RP0=0, select bank0
  2811  068B  1303               	bcf	3,6	;RP1=0, select bank0
  2812  068C  00D1               	movwf	lcd_goto@col
  2813                           
  2814                           ;LCD.c: 150: if (row >= lcdrows)
  2815  068D  086E               	movf	_lcdrows,w
  2816  068E  024F               	subwf	lcd_goto@row,w
  2817  068F  1C03               	skipc
  2818  0690  2E96               	goto	l2424
  2819                           
  2820                           ;LCD.c: 151: row = lcdrows - 1;
  2821  0691  086E               	movf	_lcdrows,w
  2822  0692  3EFF               	addlw	255
  2823  0693  00D0               	movwf	??_lcd_goto
  2824  0694  0850               	movf	??_lcd_goto,w
  2825  0695  00CF               	movwf	lcd_goto@row
  2826  0696                     l2424:	
  2827                           
  2828                           ;LCD.c: 152: if (col >= lcdcolumns)
  2829  0696  086D               	movf	_lcdcolumns,w
  2830  0697  0251               	subwf	lcd_goto@col,w
  2831  0698  1C03               	skipc
  2832  0699  2E9F               	goto	l2428
  2833                           
  2834                           ;LCD.c: 153: col = lcdcolumns - 1;
  2835  069A  086D               	movf	_lcdcolumns,w
  2836  069B  3EFF               	addlw	255
  2837  069C  00D0               	movwf	??_lcd_goto
  2838  069D  0850               	movf	??_lcd_goto,w
  2839  069E  00D1               	movwf	lcd_goto@col
  2840  069F                     l2428:	
  2841                           
  2842                           ;LCD.c: 155: lcd_send( E_SET_DDRAM_ADDR | (col + rowaddr[ row ]), 0 );
  2843  069F  01CC               	clrf	?_lcd_send
  2844  06A0  084F               	movf	lcd_goto@row,w
  2845  06A1  3E0B               	addlw	low (_rowaddr-__stringbase)
  2846  06A2  0084               	movwf	4
  2847  06A3  118A  241D  118A   	fcall	stringdir
  2848  06A6  0751               	addwf	lcd_goto@col,w
  2849  06A7  3880               	iorlw	128
  2850  06A8  118A  25B5         	fcall	_lcd_send
  2851  06AA  0008               	return
  2852  06AB                     __end_of_lcd_goto:	
  2853                           
  2854                           	psect	text11
  2855  06AB                     __ptext11:	
  2856 ;; *************** function _lcd_puts *****************
  2857 ;; Defined at:
  2858 ;;		line 177 in file "../LCD/LCD.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;  string          2    7[BANK0 ] PTR const unsigned char 
  2861 ;;		 -> buf(20), STR_1(17), 
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;		None
  2864 ;; Return value:  Size  Location     Type
  2865 ;;		None               void
  2866 ;; Registers used:
  2867 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2868 ;; Tracked objects:
  2869 ;;		On entry : 0/0
  2870 ;;		On exit  : 0/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2873 ;;      Params:         0       2       0       0       0
  2874 ;;      Locals:         0       0       0       0       0
  2875 ;;      Temps:          0       0       0       0       0
  2876 ;;      Totals:         0       2       0       0       0
  2877 ;;Total ram usage:        2 bytes
  2878 ;; Hardware stack levels used:    1
  2879 ;; Hardware stack levels required when called:    5
  2880 ;; This function calls:
  2881 ;;		_lcd_send
  2882 ;; This function is called by:
  2883 ;;		_main
  2884 ;;		_dht11_task
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           
  2889                           ;psect for function _lcd_puts
  2890  06AB                     _lcd_puts:	
  2891  06AB                     l2390:	
  2892                           ;LCD.c: 178: while (*string != '\0')
  2893                           
  2894                           ;incstack = 0
  2895                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2896                           
  2897  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  2898  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  2899  06AD  0850               	movf	lcd_puts@string+1,w
  2900  06AE  00FF               	movwf	127
  2901  06AF  084F               	movf	lcd_puts@string,w
  2902  06B0  0084               	movwf	4
  2903  06B1  118A  2413  118A   	fcall	stringtab
  2904  06B4  3800               	iorlw	0
  2905  06B5  1903               	btfsc	3,2
  2906  06B6  0008               	return
  2907                           
  2908                           ;LCD.c: 179: lcd_send( *string++, 1 );
  2909  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  2910  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  2911  06B9  01CC               	clrf	?_lcd_send
  2912  06BA  0ACC               	incf	?_lcd_send,f
  2913  06BB  0850               	movf	lcd_puts@string+1,w
  2914  06BC  00FF               	movwf	127
  2915  06BD  084F               	movf	lcd_puts@string,w
  2916  06BE  0084               	movwf	4
  2917  06BF  118A  2413  118A   	fcall	stringtab
  2918  06C2  118A  25B5  118A   	fcall	_lcd_send
  2919  06C5  3001               	movlw	1
  2920  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  2921  06C7  1303               	bcf	3,6	;RP1=0, select bank0
  2922  06C8  07CF               	addwf	lcd_puts@string,f
  2923  06C9  1803               	skipnc
  2924  06CA  0AD0               	incf	lcd_puts@string+1,f
  2925  06CB  2EAB               	goto	l2390
  2926  06CC                     __end_of_lcd_puts:	
  2927                           
  2928                           	psect	text12
  2929  04B9                     __ptext12:	
  2930 ;; *************** function _led_task *****************
  2931 ;; Defined at:
  2932 ;;		line 94 in file "main.c"
  2933 ;; Parameters:    Size  Location     Type
  2934 ;;		None
  2935 ;; Auto vars:     Size  Location     Type
  2936 ;;		None
  2937 ;; Return value:  Size  Location     Type
  2938 ;;		None               void
  2939 ;; Registers used:
  2940 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2941 ;; Tracked objects:
  2942 ;;		On entry : 0/0
  2943 ;;		On exit  : 0/0
  2944 ;;		Unchanged: 0/0
  2945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2946 ;;      Params:         0       0       0       0       0
  2947 ;;      Locals:         0       0       0       0       0
  2948 ;;      Temps:          0       4       0       0       0
  2949 ;;      Totals:         0       4       0       0       0
  2950 ;;Total ram usage:        4 bytes
  2951 ;; Hardware stack levels used:    1
  2952 ;; Hardware stack levels required when called:    4
  2953 ;; This function calls:
  2954 ;;		_tick_get
  2955 ;; This function is called by:
  2956 ;;		_main
  2957 ;; This function uses a non-reentrant model
  2958 ;;
  2959                           
  2960                           
  2961                           ;psect for function _led_task
  2962  04B9                     _led_task:	
  2963                           
  2964                           ;main.c: 96: static unsigned long ltime = 0;
  2965                           ;main.c: 98: if (tick_get() - ltime >= ((unsigned long long)((2000000 + 128ull)/8ull)) /
      +                           2) {
  2966                           
  2967                           ;incstack = 0
  2968                           ; Regs used in _led_task: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2969  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  2970  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  2971  04BB  092F               	comf	led_task@ltime,w
  2972  04BC  00CC               	movwf	??_led_task
  2973  04BD  0930               	comf	led_task@ltime+1,w
  2974  04BE  00CD               	movwf	??_led_task+1
  2975  04BF  0931               	comf	led_task@ltime+2,w
  2976  04C0  00CE               	movwf	??_led_task+2
  2977  04C1  0932               	comf	led_task@ltime+3,w
  2978  04C2  00CF               	movwf	??_led_task+3
  2979  04C3  0ACC               	incf	??_led_task,f
  2980  04C4  1903               	skipnz
  2981  04C5  0ACD               	incf	??_led_task+1,f
  2982  04C6  1903               	skipnz
  2983  04C7  0ACE               	incf	??_led_task+2,f
  2984  04C8  1903               	skipnz
  2985  04C9  0ACF               	incf	??_led_task+3,f
  2986  04CA  118A  271C  118A   	fcall	_tick_get
  2987  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  2988  04CE  1303               	bcf	3,6	;RP1=0, select bank0
  2989  04CF  0848               	movf	?_tick_get,w
  2990  04D0  07CC               	addwf	??_led_task,f
  2991  04D1  0849               	movf	?_tick_get+1,w
  2992  04D2  1803               	skipnc
  2993  04D3  0F49               	incfsz	?_tick_get+1,w
  2994  04D4  2CD6               	goto	u2010
  2995  04D5  2CD7               	goto	u2011
  2996  04D6                     u2010:	
  2997  04D6  07CD               	addwf	??_led_task+1,f
  2998  04D7                     u2011:	
  2999  04D7  084A               	movf	?_tick_get+2,w
  3000  04D8  1803               	skipnc
  3001  04D9  0F4A               	incfsz	?_tick_get+2,w
  3002  04DA  2CDC               	goto	u2012
  3003  04DB  2CDD               	goto	u2013
  3004  04DC                     u2012:	
  3005  04DC  07CE               	addwf	??_led_task+2,f
  3006  04DD                     u2013:	
  3007  04DD  084B               	movf	?_tick_get+3,w
  3008  04DE  1803               	skipnc
  3009  04DF  0A4B               	incf	?_tick_get+3,w
  3010  04E0  07CF               	addwf	??_led_task+3,f
  3011  04E1  3000               	movlw	0
  3012  04E2  024F               	subwf	??_led_task+3,w
  3013  04E3  1D03               	skipz
  3014  04E4  2CEF               	goto	u2025
  3015  04E5  3001               	movlw	1
  3016  04E6  024E               	subwf	??_led_task+2,w
  3017  04E7  1D03               	skipz
  3018  04E8  2CEF               	goto	u2025
  3019  04E9  30E8               	movlw	232
  3020  04EA  024D               	subwf	??_led_task+1,w
  3021  04EB  1D03               	skipz
  3022  04EC  2CEF               	goto	u2025
  3023  04ED  3050               	movlw	80
  3024  04EE  024C               	subwf	??_led_task,w
  3025  04EF                     u2025:	
  3026  04EF  1C03               	skipc
  3027  04F0  0008               	return
  3028                           
  3029                           ;main.c: 99: ltime = tick_get();
  3030  04F1  118A  271C         	fcall	_tick_get
  3031  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  3032  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  3033  04F5  084B               	movf	?_tick_get+3,w
  3034  04F6  00B2               	movwf	led_task@ltime+3
  3035  04F7  084A               	movf	?_tick_get+2,w
  3036  04F8  00B1               	movwf	led_task@ltime+2
  3037  04F9  0849               	movf	?_tick_get+1,w
  3038  04FA  00B0               	movwf	led_task@ltime+1
  3039  04FB  0848               	movf	?_tick_get,w
  3040  04FC  00AF               	movwf	led_task@ltime
  3041                           
  3042                           ;main.c: 102: PORTA ^= 0x10;
  3043  04FD  3010               	movlw	16
  3044  04FE  00CC               	movwf	??_led_task
  3045  04FF  084C               	movf	??_led_task,w
  3046  0500  0685               	xorwf	5,f	;volatile
  3047  0501  0008               	return
  3048  0502                     __end_of_led_task:	
  3049                           
  3050                           	psect	text13
  3051  071C                     __ptext13:	
  3052 ;; *************** function _tick_get *****************
  3053 ;; Defined at:
  3054 ;;		line 42 in file "../Tick/Tick-PIC16.c"
  3055 ;; Parameters:    Size  Location     Type
  3056 ;;		None
  3057 ;; Auto vars:     Size  Location     Type
  3058 ;;		None
  3059 ;; Return value:  Size  Location     Type
  3060 ;;                  4    0[BANK0 ] unsigned long 
  3061 ;; Registers used:
  3062 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3063 ;; Tracked objects:
  3064 ;;		On entry : 0/0
  3065 ;;		On exit  : 0/0
  3066 ;;		Unchanged: 0/0
  3067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3068 ;;      Params:         0       4       0       0       0
  3069 ;;      Locals:         0       0       0       0       0
  3070 ;;      Temps:          0       0       0       0       0
  3071 ;;      Totals:         0       4       0       0       0
  3072 ;;Total ram usage:        4 bytes
  3073 ;; Hardware stack levels used:    1
  3074 ;; Hardware stack levels required when called:    3
  3075 ;; This function calls:
  3076 ;;		_tick_read_internal
  3077 ;; This function is called by:
  3078 ;;		_dht11_task
  3079 ;;		_led_task
  3080 ;; This function uses a non-reentrant model
  3081 ;;
  3082                           
  3083                           
  3084                           ;psect for function _tick_get
  3085  071C                     _tick_get:	
  3086                           
  3087                           ;Tick-PIC16.c: 43: tick_read_internal();
  3088                           
  3089                           ;incstack = 0
  3090                           ; Regs used in _tick_get: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3091  071C  118A  26CC         	fcall	_tick_read_internal
  3092                           
  3093                           ;Tick-PIC16.c: 44: return *((uint32_t *) & tickbuffer[0]);
  3094  071E  3020               	movlw	low _tickbuffer
  3095  071F  0084               	movwf	4
  3096  0720  1383               	bcf	3,7	;select IRP bank0
  3097  0721  0800               	movf	0,w
  3098  0722  1283               	bcf	3,5	;RP0=0, select bank0
  3099  0723  1303               	bcf	3,6	;RP1=0, select bank0
  3100  0724  00C8               	movwf	?_tick_get
  3101  0725  0A84               	incf	4,f
  3102  0726  0800               	movf	0,w
  3103  0727  00C9               	movwf	?_tick_get+1
  3104  0728  0A84               	incf	4,f
  3105  0729  0800               	movf	0,w
  3106  072A  00CA               	movwf	?_tick_get+2
  3107  072B  0A84               	incf	4,f
  3108  072C  0800               	movf	0,w
  3109  072D  00CB               	movwf	?_tick_get+3
  3110  072E  0008               	return
  3111  072F                     __end_of_tick_get:	
  3112                           
  3113                           	psect	text14
  3114  06CC                     __ptext14:	
  3115 ;; *************** function _tick_read_internal *****************
  3116 ;; Defined at:
  3117 ;;		line 56 in file "../Tick/Tick-PIC16.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;		None
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;		None
  3122 ;; Return value:  Size  Location     Type
  3123 ;;		None               void
  3124 ;; Registers used:
  3125 ;;		wreg
  3126 ;; Tracked objects:
  3127 ;;		On entry : 0/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3131 ;;      Params:         0       0       0       0       0
  3132 ;;      Locals:         0       0       0       0       0
  3133 ;;      Temps:          1       0       0       0       0
  3134 ;;      Totals:         1       0       0       0       0
  3135 ;;Total ram usage:        1 bytes
  3136 ;; Hardware stack levels used:    1
  3137 ;; Hardware stack levels required when called:    2
  3138 ;; This function calls:
  3139 ;;		Nothing
  3140 ;; This function is called by:
  3141 ;;		_tick_get
  3142 ;; This function uses a non-reentrant model
  3143 ;;
  3144                           
  3145                           
  3146                           ;psect for function _tick_read_internal
  3147  06CC                     _tick_read_internal:	
  3148  06CC                     l151:	
  3149                           ;incstack = 0
  3150                           ; Regs used in _tick_read_internal: [wreg]
  3151                           ;Tick-PIC16.c: 57: do {
  3152                           
  3153                           
  3154                           ;Tick-PIC16.c: 58: PIE1bits.TMR1IE = 1;
  3155  06CC  1683               	bsf	3,5	;RP0=1, select bank1
  3156  06CD  1303               	bcf	3,6	;RP1=0, select bank1
  3157  06CE  140C               	bsf	12,0	;volatile
  3158  06CF  0000               	nop	;# 
  3159                           
  3160                           ;Tick-PIC16.c: 60: PIE1bits.TMR1IE = 0;
  3161  06D0  1683               	bsf	3,5	;RP0=1, select bank1
  3162  06D1  1303               	bcf	3,6	;RP1=0, select bank1
  3163  06D2  100C               	bcf	12,0	;volatile
  3164                           
  3165                           ;Tick-PIC16.c: 62: tickbuffer[0] = TMR1L;
  3166  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  3167  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  3168  06D5  080E               	movf	14,w	;volatile
  3169  06D6  00F4               	movwf	??_tick_read_internal
  3170  06D7  0874               	movf	??_tick_read_internal,w
  3171  06D8  00A0               	movwf	_tickbuffer
  3172                           
  3173                           ;Tick-PIC16.c: 63: tickbuffer[1] = TMR1H;
  3174  06D9  080F               	movf	15,w	;volatile
  3175  06DA  00F4               	movwf	??_tick_read_internal
  3176  06DB  0874               	movf	??_tick_read_internal,w
  3177  06DC  00A1               	movwf	_tickbuffer+1
  3178                           
  3179                           ;Tick-PIC16.c: 65: *((uint32_t*) & tickbuffer[2]) = tickcnt;
  3180  06DD  0879               	movf	_tickcnt+3,w	;volatile
  3181  06DE  00A5               	movwf	_tickbuffer+5
  3182  06DF  0878               	movf	_tickcnt+2,w	;volatile
  3183  06E0  00A4               	movwf	_tickbuffer+4
  3184  06E1  0877               	movf	_tickcnt+1,w	;volatile
  3185  06E2  00A3               	movwf	_tickbuffer+3
  3186  06E3  0876               	movf	_tickcnt,w	;volatile
  3187  06E4  00A2               	movwf	_tickbuffer+2
  3188                           
  3189                           ;Tick-PIC16.c: 66: } while (PIR1bits.TMR1IF);
  3190  06E5  180C               	btfsc	12,0	;volatile
  3191  06E6  2ECC               	goto	l151
  3192                           
  3193                           ;Tick-PIC16.c: 67: PIE1bits.TMR1IE = 1;
  3194  06E7  1683               	bsf	3,5	;RP0=1, select bank1
  3195  06E8  1303               	bcf	3,6	;RP1=0, select bank1
  3196  06E9  140C               	bsf	12,0	;volatile
  3197  06EA  0008               	return
  3198  06EB                     __end_of_tick_read_internal:	
  3199                           
  3200                           	psect	text15
  3201  072F                     __ptext15:	
  3202 ;; *************** function _lcd_on *****************
  3203 ;; Defined at:
  3204 ;;		line 90 in file "../LCD/LCD.c"
  3205 ;; Parameters:    Size  Location     Type
  3206 ;;		None
  3207 ;; Auto vars:     Size  Location     Type
  3208 ;;		None
  3209 ;; Return value:  Size  Location     Type
  3210 ;;		None               void
  3211 ;; Registers used:
  3212 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3213 ;; Tracked objects:
  3214 ;;		On entry : 0/0
  3215 ;;		On exit  : 0/0
  3216 ;;		Unchanged: 0/0
  3217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3218 ;;      Params:         0       0       0       0       0
  3219 ;;      Locals:         0       0       0       0       0
  3220 ;;      Temps:          0       1       0       0       0
  3221 ;;      Totals:         0       1       0       0       0
  3222 ;;Total ram usage:        1 bytes
  3223 ;; Hardware stack levels used:    1
  3224 ;; Hardware stack levels required when called:    5
  3225 ;; This function calls:
  3226 ;;		_lcd_send
  3227 ;; This function is called by:
  3228 ;;		_main
  3229 ;; This function uses a non-reentrant model
  3230 ;;
  3231                           
  3232                           
  3233                           ;psect for function _lcd_on
  3234  072F                     _lcd_on:	
  3235                           
  3236                           ;LCD.c: 91: dispctrl |= (1<<2);
  3237                           
  3238                           ;incstack = 0
  3239                           ; Regs used in _lcd_on: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3240  072F  1283               	bcf	3,5	;RP0=0, select bank0
  3241  0730  1303               	bcf	3,6	;RP1=0, select bank0
  3242  0731  1533               	bsf	_dispctrl,2
  3243                           
  3244                           ;LCD.c: 92: lcd_send( E_DISPLAY_ON_OFF_CTRL | dispctrl, 0 );
  3245  0732  01CC               	clrf	?_lcd_send
  3246  0733  0833               	movf	_dispctrl,w
  3247  0734  3808               	iorlw	8
  3248  0735  118A  25B5  118A   	fcall	_lcd_send
  3249                           
  3250                           ;LCD.c: 93: _delay((unsigned long)((50)*(1000000/1000000.0)));
  3251  0738  3010               	movlw	16
  3252  0739  1283               	bcf	3,5	;RP0=0, select bank0
  3253  073A  1303               	bcf	3,6	;RP1=0, select bank0
  3254  073B  00CF               	movwf	??_lcd_on
  3255  073C                     u2867:	
  3256  073C  0BCF               	decfsz	??_lcd_on,f
  3257  073D  2F3C               	goto	u2867
  3258  073E  0000               	nop
  3259  073F  0008               	return
  3260  0740                     __end_of_lcd_on:	
  3261                           
  3262                           	psect	text16
  3263  0776                     __ptext16:	
  3264 ;; *************** function _dhtlib_init *****************
  3265 ;; Defined at:
  3266 ;;		line 34 in file "../DHTLib.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;		None
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;		None
  3271 ;; Return value:  Size  Location     Type
  3272 ;;		None               void
  3273 ;; Registers used:
  3274 ;;		None
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/0
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3280 ;;      Params:         0       0       0       0       0
  3281 ;;      Locals:         0       0       0       0       0
  3282 ;;      Temps:          0       0       0       0       0
  3283 ;;      Totals:         0       0       0       0       0
  3284 ;;Total ram usage:        0 bytes
  3285 ;; Hardware stack levels used:    1
  3286 ;; Hardware stack levels required when called:    2
  3287 ;; This function calls:
  3288 ;;		Nothing
  3289 ;; This function is called by:
  3290 ;;		_main
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           
  3295                           ;psect for function _dhtlib_init
  3296  0776                     _dhtlib_init:	
  3297                           
  3298                           ;DHTLib.c: 36: TRISBbits.TRISB2 = 1;
  3299                           
  3300                           ;incstack = 0
  3301                           ; Regs used in _dhtlib_init: []
  3302  0776  1683               	bsf	3,5	;RP0=1, select bank1
  3303  0777  1303               	bcf	3,6	;RP1=0, select bank1
  3304  0778  1506               	bsf	6,2	;volatile
  3305  0779  0008               	return
  3306  077A                     __end_of_dhtlib_init:	
  3307                           
  3308                           	psect	text17
  3309  0740                     __ptext17:	
  3310 ;; *************** function _tick_init *****************
  3311 ;; Defined at:
  3312 ;;		line 28 in file "../Tick/Tick-PIC16.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;		None
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;		None
  3317 ;; Return value:  Size  Location     Type
  3318 ;;		None               void
  3319 ;; Registers used:
  3320 ;;		wreg, status,2
  3321 ;; Tracked objects:
  3322 ;;		On entry : 0/0
  3323 ;;		On exit  : 0/0
  3324 ;;		Unchanged: 0/0
  3325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3326 ;;      Params:         0       0       0       0       0
  3327 ;;      Locals:         0       0       0       0       0
  3328 ;;      Temps:          0       0       0       0       0
  3329 ;;      Totals:         0       0       0       0       0
  3330 ;;Total ram usage:        0 bytes
  3331 ;; Hardware stack levels used:    1
  3332 ;; Hardware stack levels required when called:    2
  3333 ;; This function calls:
  3334 ;;		Nothing
  3335 ;; This function is called by:
  3336 ;;		_main
  3337 ;; This function uses a non-reentrant model
  3338 ;;
  3339                           
  3340                           
  3341                           ;psect for function _tick_init
  3342  0740                     _tick_init:	
  3343                           
  3344                           ;Tick-PIC16.c: 29: T1CON = 0;
  3345                           
  3346                           ;incstack = 0
  3347                           ; Regs used in _tick_init: [wreg+status,2]
  3348  0740  1283               	bcf	3,5	;RP0=0, select bank0
  3349  0741  1303               	bcf	3,6	;RP1=0, select bank0
  3350  0742  0190               	clrf	16	;volatile
  3351                           
  3352                           ;Tick-PIC16.c: 30: TMR1L = 0;
  3353  0743  018E               	clrf	14	;volatile
  3354                           
  3355                           ;Tick-PIC16.c: 31: TMR1H = 0;
  3356  0744  018F               	clrf	15	;volatile
  3357                           
  3358                           ;Tick-PIC16.c: 33: PIR1bits.TMR1IF = 0;
  3359  0745  100C               	bcf	12,0	;volatile
  3360                           
  3361                           ;Tick-PIC16.c: 34: PIE1bits.TMR1IE = 1;
  3362  0746  1683               	bsf	3,5	;RP0=1, select bank1
  3363  0747  1303               	bcf	3,6	;RP1=0, select bank1
  3364  0748  140C               	bsf	12,0	;volatile
  3365                           
  3366                           ;Tick-PIC16.c: 35: INTCONbits.GIE = 1;
  3367  0749  178B               	bsf	11,7	;volatile
  3368                           
  3369                           ;Tick-PIC16.c: 36: INTCONbits.PEIE = 1;
  3370  074A  170B               	bsf	11,6	;volatile
  3371                           
  3372                           ;Tick-PIC16.c: 38: T1CON = 0x31;
  3373  074B  3031               	movlw	49
  3374  074C  1283               	bcf	3,5	;RP0=0, select bank0
  3375  074D  1303               	bcf	3,6	;RP1=0, select bank0
  3376  074E  0090               	movwf	16	;volatile
  3377  074F  0008               	return
  3378  0750                     __end_of_tick_init:	
  3379                           
  3380                           	psect	text18
  3381  0216                     __ptext18:	
  3382 ;; *************** function _lcd_init *****************
  3383 ;; Defined at:
  3384 ;;		line 32 in file "../LCD/LCD.c"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;  iodata          1    wreg     PTR void 
  3387 ;;		 -> NULL(0), 
  3388 ;;  cols            1    7[BANK0 ] unsigned char 
  3389 ;;  rows            1    8[BANK0 ] unsigned char 
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;  iodata          1   11[BANK0 ] PTR void 
  3392 ;;		 -> NULL(0), 
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  1    wreg      unsigned char 
  3395 ;; Registers used:
  3396 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3402 ;;      Params:         0       2       0       0       0
  3403 ;;      Locals:         0       1       0       0       0
  3404 ;;      Temps:          0       2       0       0       0
  3405 ;;      Totals:         0       5       0       0       0
  3406 ;;Total ram usage:        5 bytes
  3407 ;; Hardware stack levels used:    1
  3408 ;; Hardware stack levels required when called:    5
  3409 ;; This function calls:
  3410 ;;		_lcd_ioinit
  3411 ;;		_lcd_iowrite4
  3412 ;;		_lcd_send
  3413 ;; This function is called by:
  3414 ;;		_main
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417                           
  3418                           
  3419                           ;psect for function _lcd_init
  3420  0216                     _lcd_init:	
  3421                           
  3422                           ;incstack = 0
  3423                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3424                           ;lcd_init@iodata stored from wreg
  3425  0216  1283               	bcf	3,5	;RP0=0, select bank0
  3426  0217  1303               	bcf	3,6	;RP1=0, select bank0
  3427  0218  00D3               	movwf	lcd_init@iodata
  3428                           
  3429                           ;LCD.c: 34: iomode = lcd_ioinit(iodata);
  3430  0219  0853               	movf	lcd_init@iodata,w
  3431  021A  118A  2667  118A   	fcall	_lcd_ioinit
  3432  021D  1283               	bcf	3,5	;RP0=0, select bank0
  3433  021E  1303               	bcf	3,6	;RP1=0, select bank0
  3434  021F  00D1               	movwf	??_lcd_init
  3435  0220  0851               	movf	??_lcd_init,w
  3436  0221  00EF               	movwf	_iomode
  3437                           
  3438                           ;LCD.c: 35: lcdrows = rows;
  3439  0222  0850               	movf	lcd_init@rows,w
  3440  0223  00D1               	movwf	??_lcd_init
  3441  0224  0851               	movf	??_lcd_init,w
  3442  0225  00EE               	movwf	_lcdrows
  3443                           
  3444                           ;LCD.c: 36: lcdcolumns = cols;
  3445  0226  084F               	movf	lcd_init@cols,w
  3446  0227  00D1               	movwf	??_lcd_init
  3447  0228  0851               	movf	??_lcd_init,w
  3448  0229  00ED               	movwf	_lcdcolumns
  3449                           
  3450                           ;LCD.c: 39: _delay((unsigned long)((100)*(1000000/1000.0)));
  3451  022A  3082               	movlw	130
  3452  022B  00D2               	movwf	??_lcd_init+1
  3453  022C  30DD               	movlw	221
  3454  022D  00D1               	movwf	??_lcd_init
  3455  022E                     u2877:	
  3456  022E  0BD1               	decfsz	??_lcd_init,f
  3457  022F  2A2E               	goto	u2877
  3458  0230  0BD2               	decfsz	??_lcd_init+1,f
  3459  0231  2A2E               	goto	u2877
  3460  0232  2A33               	nop2
  3461                           
  3462                           ;LCD.c: 42: if (iomode == 4) {
  3463  0233  1283               	bcf	3,5	;RP0=0, select bank0
  3464  0234  1303               	bcf	3,6	;RP1=0, select bank0
  3465  0235  086F               	movf	_iomode,w
  3466  0236  3A04               	xorlw	4
  3467  0237  1D03               	skipz
  3468  0238  2A77               	goto	l2354
  3469                           
  3470                           ;LCD.c: 45: lcd_iowrite4(0x03);
  3471  0239  3003               	movlw	3
  3472  023A  118A  2542  118A   	fcall	_lcd_iowrite4
  3473                           
  3474                           ;LCD.c: 46: _delay((unsigned long)((5)*(1000000/1000.0)));
  3475  023D  3007               	movlw	7
  3476  023E  1283               	bcf	3,5	;RP0=0, select bank0
  3477  023F  1303               	bcf	3,6	;RP1=0, select bank0
  3478  0240  00D2               	movwf	??_lcd_init+1
  3479  0241  307D               	movlw	125
  3480  0242  00D1               	movwf	??_lcd_init
  3481  0243                     u2887:	
  3482  0243  0BD1               	decfsz	??_lcd_init,f
  3483  0244  2A43               	goto	u2887
  3484  0245  0BD2               	decfsz	??_lcd_init+1,f
  3485  0246  2A43               	goto	u2887
  3486                           
  3487                           ;LCD.c: 47: lcd_iowrite4(0x03);
  3488  0247  3003               	movlw	3
  3489  0248  118A  2542  118A   	fcall	_lcd_iowrite4
  3490                           
  3491                           ;LCD.c: 48: _delay((unsigned long)((120)*(1000000/1000000.0)));
  3492  024B  3027               	movlw	39
  3493  024C  1283               	bcf	3,5	;RP0=0, select bank0
  3494  024D  1303               	bcf	3,6	;RP1=0, select bank0
  3495  024E  00D1               	movwf	??_lcd_init
  3496  024F                     u2897:	
  3497  024F  0BD1               	decfsz	??_lcd_init,f
  3498  0250  2A4F               	goto	u2897
  3499  0251  2A52               	nop2	;nop
  3500                           
  3501                           ;LCD.c: 49: lcd_iowrite4(0x03);
  3502  0252  3003               	movlw	3
  3503  0253  118A  2542  118A   	fcall	_lcd_iowrite4
  3504                           
  3505                           ;LCD.c: 50: _delay((unsigned long)((120)*(1000000/1000000.0)));
  3506  0256  3027               	movlw	39
  3507  0257  1283               	bcf	3,5	;RP0=0, select bank0
  3508  0258  1303               	bcf	3,6	;RP1=0, select bank0
  3509  0259  00D1               	movwf	??_lcd_init
  3510  025A                     u2907:	
  3511  025A  0BD1               	decfsz	??_lcd_init,f
  3512  025B  2A5A               	goto	u2907
  3513  025C  2A5D               	nop2	;nop
  3514                           
  3515                           ;LCD.c: 51: lcd_iowrite4(0x02);
  3516  025D  3002               	movlw	2
  3517  025E  118A  2542  118A   	fcall	_lcd_iowrite4
  3518                           
  3519                           ;LCD.c: 52: _delay((unsigned long)((120)*(1000000/1000000.0)));
  3520  0261  3027               	movlw	39
  3521  0262  1283               	bcf	3,5	;RP0=0, select bank0
  3522  0263  1303               	bcf	3,6	;RP1=0, select bank0
  3523  0264  00D1               	movwf	??_lcd_init
  3524  0265                     u2917:	
  3525  0265  0BD1               	decfsz	??_lcd_init,f
  3526  0266  2A65               	goto	u2917
  3527  0267  2A68               	nop2	;nop
  3528                           
  3529                           ;LCD.c: 53: lcd_send( E_FUNCTION_SET | 0 | (1<<3) | (1<<2), 0 );
  3530  0268  1283               	bcf	3,5	;RP0=0, select bank0
  3531  0269  1303               	bcf	3,6	;RP1=0, select bank0
  3532  026A  01CC               	clrf	?_lcd_send
  3533  026B  302C               	movlw	44
  3534  026C  118A  25B5  118A   	fcall	_lcd_send
  3535                           
  3536                           ;LCD.c: 54: _delay((unsigned long)((50)*(1000000/1000000.0)));
  3537  026F  3010               	movlw	16
  3538  0270  1283               	bcf	3,5	;RP0=0, select bank0
  3539  0271  1303               	bcf	3,6	;RP1=0, select bank0
  3540  0272  00D1               	movwf	??_lcd_init
  3541  0273                     u2927:	
  3542  0273  0BD1               	decfsz	??_lcd_init,f
  3543  0274  2A73               	goto	u2927
  3544  0275  0000               	nop
  3545                           
  3546                           ;LCD.c: 55: } else if (iomode == 8) {
  3547  0276  2AB6               	goto	l2368
  3548  0277                     l2354:	
  3549  0277  1283               	bcf	3,5	;RP0=0, select bank0
  3550  0278  1303               	bcf	3,6	;RP1=0, select bank0
  3551  0279  086F               	movf	_iomode,w
  3552  027A  3A08               	xorlw	8
  3553  027B  1D03               	skipz
  3554  027C  2AB6               	goto	l2368
  3555                           
  3556                           ;LCD.c: 57: lcd_send( E_FUNCTION_SET, 0 );
  3557  027D  01CC               	clrf	?_lcd_send
  3558  027E  3020               	movlw	32
  3559  027F  118A  25B5  118A   	fcall	_lcd_send
  3560                           
  3561                           ;LCD.c: 58: _delay((unsigned long)((5)*(1000000/1000.0)));
  3562  0282  3007               	movlw	7
  3563  0283  1283               	bcf	3,5	;RP0=0, select bank0
  3564  0284  1303               	bcf	3,6	;RP1=0, select bank0
  3565  0285  00D2               	movwf	??_lcd_init+1
  3566  0286  307D               	movlw	125
  3567  0287  00D1               	movwf	??_lcd_init
  3568  0288                     u2937:	
  3569  0288  0BD1               	decfsz	??_lcd_init,f
  3570  0289  2A88               	goto	u2937
  3571  028A  0BD2               	decfsz	??_lcd_init+1,f
  3572  028B  2A88               	goto	u2937
  3573                           
  3574                           ;LCD.c: 59: lcd_send( E_FUNCTION_SET, 0 );
  3575  028C  1283               	bcf	3,5	;RP0=0, select bank0
  3576  028D  1303               	bcf	3,6	;RP1=0, select bank0
  3577  028E  01CC               	clrf	?_lcd_send
  3578  028F  3020               	movlw	32
  3579  0290  118A  25B5  118A   	fcall	_lcd_send
  3580                           
  3581                           ;LCD.c: 60: _delay((unsigned long)((120)*(1000000/1000000.0)));
  3582  0293  3027               	movlw	39
  3583  0294  1283               	bcf	3,5	;RP0=0, select bank0
  3584  0295  1303               	bcf	3,6	;RP1=0, select bank0
  3585  0296  00D1               	movwf	??_lcd_init
  3586  0297                     u2947:	
  3587  0297  0BD1               	decfsz	??_lcd_init,f
  3588  0298  2A97               	goto	u2947
  3589  0299  2A9A               	nop2	;nop
  3590                           
  3591                           ;LCD.c: 61: lcd_send( E_FUNCTION_SET, 0 );
  3592  029A  1283               	bcf	3,5	;RP0=0, select bank0
  3593  029B  1303               	bcf	3,6	;RP1=0, select bank0
  3594  029C  01CC               	clrf	?_lcd_send
  3595  029D  3020               	movlw	32
  3596  029E  118A  25B5  118A   	fcall	_lcd_send
  3597                           
  3598                           ;LCD.c: 62: _delay((unsigned long)((120)*(1000000/1000000.0)));
  3599  02A1  3027               	movlw	39
  3600  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  3601  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  3602  02A4  00D1               	movwf	??_lcd_init
  3603  02A5                     u2957:	
  3604  02A5  0BD1               	decfsz	??_lcd_init,f
  3605  02A6  2AA5               	goto	u2957
  3606  02A7  2AA8               	nop2	;nop
  3607                           
  3608                           ;LCD.c: 63: lcd_send( E_FUNCTION_SET | (1<<4) | (1<<3) | (1<<2), 0 );
  3609  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  3610  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  3611  02AA  01CC               	clrf	?_lcd_send
  3612  02AB  303C               	movlw	60
  3613  02AC  118A  25B5  118A   	fcall	_lcd_send
  3614                           
  3615                           ;LCD.c: 64: _delay((unsigned long)((50)*(1000000/1000000.0)));
  3616  02AF  3010               	movlw	16
  3617  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  3618  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  3619  02B2  00D1               	movwf	??_lcd_init
  3620  02B3                     u2967:	
  3621  02B3  0BD1               	decfsz	??_lcd_init,f
  3622  02B4  2AB3               	goto	u2967
  3623  02B5  0000               	nop
  3624  02B6                     l2368:	
  3625                           
  3626                           ;LCD.c: 65: }
  3627                           ;LCD.c: 67: lcd_send( E_DISPLAY_ON_OFF_CTRL | 0, 0 );
  3628  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  3629  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  3630  02B8  01CC               	clrf	?_lcd_send
  3631  02B9  3008               	movlw	8
  3632  02BA  118A  25B5  118A   	fcall	_lcd_send
  3633                           
  3634                           ;LCD.c: 68: _delay((unsigned long)((50)*(1000000/1000000.0)));
  3635  02BD  3010               	movlw	16
  3636  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  3637  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  3638  02C0  00D1               	movwf	??_lcd_init
  3639  02C1                     u2977:	
  3640  02C1  0BD1               	decfsz	??_lcd_init,f
  3641  02C2  2AC1               	goto	u2977
  3642  02C3  0000               	nop
  3643                           
  3644                           ;LCD.c: 69: lcd_send( E_CLEAR_DISPLAY, 0 );
  3645  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  3646  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  3647  02C6  01CC               	clrf	?_lcd_send
  3648  02C7  3001               	movlw	1
  3649  02C8  118A  25B5  118A   	fcall	_lcd_send
  3650                           
  3651                           ;LCD.c: 70: _delay((unsigned long)((2)*(1000000/1000.0)));
  3652  02CB  3003               	movlw	3
  3653  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  3654  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  3655  02CE  00D2               	movwf	??_lcd_init+1
  3656  02CF  3097               	movlw	151
  3657  02D0  00D1               	movwf	??_lcd_init
  3658  02D1                     u2987:	
  3659  02D1  0BD1               	decfsz	??_lcd_init,f
  3660  02D2  2AD1               	goto	u2987
  3661  02D3  0BD2               	decfsz	??_lcd_init+1,f
  3662  02D4  2AD1               	goto	u2987
  3663  02D5  2AD6               	nop2
  3664                           
  3665                           ;LCD.c: 71: lcd_send( E_ENTRY_MODE_SET | 0 | (1<<1), 0 );
  3666  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  3667  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  3668  02D8  01CC               	clrf	?_lcd_send
  3669  02D9  3006               	movlw	6
  3670  02DA  118A  25B5  118A   	fcall	_lcd_send
  3671                           
  3672                           ;LCD.c: 72: _delay((unsigned long)((50)*(1000000/1000000.0)));
  3673  02DD  3010               	movlw	16
  3674  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  3675  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  3676  02E0  00D1               	movwf	??_lcd_init
  3677  02E1                     u2997:	
  3678  02E1  0BD1               	decfsz	??_lcd_init,f
  3679  02E2  2AE1               	goto	u2997
  3680  02E3  0000               	nop
  3681  02E4  0008               	return
  3682  02E5                     __end_of_lcd_init:	
  3683                           ;LCD.c: 74: return 1;
  3684                           ;	Return value of _lcd_init is never used
  3685                           
  3686                           
  3687                           	psect	text19
  3688  05B5                     __ptext19:	
  3689 ;; *************** function _lcd_send *****************
  3690 ;; Defined at:
  3691 ;;		line 159 in file "../LCD/LCD.c"
  3692 ;; Parameters:    Size  Location     Type
  3693 ;;  data            1    wreg     unsigned char 
  3694 ;;  rs              1    4[BANK0 ] unsigned char 
  3695 ;; Auto vars:     Size  Location     Type
  3696 ;;  data            1    6[BANK0 ] unsigned char 
  3697 ;; Return value:  Size  Location     Type
  3698 ;;		None               void
  3699 ;; Registers used:
  3700 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3701 ;; Tracked objects:
  3702 ;;		On entry : 0/0
  3703 ;;		On exit  : 0/0
  3704 ;;		Unchanged: 0/0
  3705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3706 ;;      Params:         0       1       0       0       0
  3707 ;;      Locals:         0       1       0       0       0
  3708 ;;      Temps:          0       1       0       0       0
  3709 ;;      Totals:         0       3       0       0       0
  3710 ;;Total ram usage:        3 bytes
  3711 ;; Hardware stack levels used:    1
  3712 ;; Hardware stack levels required when called:    4
  3713 ;; This function calls:
  3714 ;;		_lcd_iowrite4
  3715 ;;		_lcd_ioset
  3716 ;;		_lcd_iowrite8
  3717 ;; This function is called by:
  3718 ;;		_lcd_init
  3719 ;;		_lcd_on
  3720 ;;		_lcd_goto
  3721 ;;		_lcd_puts
  3722 ;;		_lcd_clear
  3723 ;;		_lcd_home
  3724 ;;		_lcd_off
  3725 ;;		_lcd_cursor
  3726 ;;		_lcd_cursor_left
  3727 ;;		_lcd_cursor_right
  3728 ;;		_lcd_scroll_left
  3729 ;;		_lcd_scroll_right
  3730 ;;		_lcd_autoscroll_on
  3731 ;;		_lcd_autoscroll_off
  3732 ;;		_lcd_create_char
  3733 ;; This function uses a non-reentrant model
  3734 ;;
  3735                           
  3736                           
  3737                           ;psect for function _lcd_send
  3738  05B5                     _lcd_send:	
  3739                           
  3740                           ;incstack = 0
  3741                           ; Regs used in _lcd_send: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3742                           ;lcd_send@data stored from wreg
  3743  05B5  1283               	bcf	3,5	;RP0=0, select bank0
  3744  05B6  1303               	bcf	3,6	;RP1=0, select bank0
  3745  05B7  00CE               	movwf	lcd_send@data
  3746                           
  3747                           ;LCD.c: 161: if (rs)
  3748  05B8  084C               	movf	lcd_send@rs,w
  3749  05B9  1903               	btfsc	3,2
  3750  05BA  2DBE               	goto	l2758
  3751                           
  3752                           ;LCD.c: 162: lcd_ioset(E_RS_PIN,1);
  3753  05BB  01F4               	clrf	?_lcd_ioset
  3754  05BC  0AF4               	incf	?_lcd_ioset,f
  3755  05BD  2DBF               	goto	L4
  3756  05BE                     l2758:	
  3757                           
  3758                           ;LCD.c: 163: else
  3759                           ;LCD.c: 164: lcd_ioset(E_RS_PIN,0);
  3760  05BE  01F4               	clrf	?_lcd_ioset
  3761  05BF                     L4:	
  3762  05BF  3009               	movlw	9
  3763  05C0  118A  246F  118A   	fcall	_lcd_ioset
  3764                           
  3765                           ;LCD.c: 166: lcd_ioset(E_RW_PIN,0);
  3766  05C3  01F4               	clrf	?_lcd_ioset
  3767  05C4  300A               	movlw	10
  3768  05C5  118A  246F  118A   	fcall	_lcd_ioset
  3769                           
  3770                           ;LCD.c: 168: if (iomode == 4) {
  3771  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  3772  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  3773  05CA  086F               	movf	_iomode,w
  3774  05CB  3A04               	xorlw	4
  3775  05CC  1D03               	skipz
  3776  05CD  2DE0               	goto	l2764
  3777                           
  3778                           ;LCD.c: 169: lcd_iowrite4(data >> 4);
  3779  05CE  084E               	movf	lcd_send@data,w
  3780  05CF  00CD               	movwf	??_lcd_send
  3781  05D0  3004               	movlw	4
  3782  05D1                     u2605:	
  3783  05D1  1003               	clrc
  3784  05D2  0CCD               	rrf	??_lcd_send,f
  3785  05D3  3EFF               	addlw	-1
  3786  05D4  1D03               	skipz
  3787  05D5  2DD1               	goto	u2605
  3788  05D6  084D               	movf	??_lcd_send,w
  3789  05D7  118A  2542  118A   	fcall	_lcd_iowrite4
  3790                           
  3791                           ;LCD.c: 170: lcd_iowrite4(data);
  3792  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  3793  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  3794  05DC  084E               	movf	lcd_send@data,w
  3795  05DD  118A  2542         	fcall	_lcd_iowrite4
  3796                           
  3797                           ;LCD.c: 171: } else {
  3798  05DF  0008               	return
  3799  05E0                     l2764:	
  3800                           
  3801                           ;LCD.c: 172: lcd_iowrite8(data);
  3802  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  3803  05E1  1303               	bcf	3,6	;RP1=0, select bank0
  3804  05E2  084E               	movf	lcd_send@data,w
  3805  05E3  118A  277C         	fcall	_lcd_iowrite8
  3806  05E5  0008               	return
  3807  05E6                     __end_of_lcd_send:	
  3808                           
  3809                           	psect	text20
  3810  077C                     __ptext20:	
  3811 ;; *************** function _lcd_iowrite8 *****************
  3812 ;; Defined at:
  3813 ;;		line 141 in file "../LCD/LCD-PIC16.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;  data            1    wreg     unsigned char 
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;  data            1    0[COMMON] unsigned char 
  3818 ;; Return value:  Size  Location     Type
  3819 ;;		None               void
  3820 ;; Registers used:
  3821 ;;		wreg
  3822 ;; Tracked objects:
  3823 ;;		On entry : 0/0
  3824 ;;		On exit  : 0/0
  3825 ;;		Unchanged: 0/0
  3826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3827 ;;      Params:         0       0       0       0       0
  3828 ;;      Locals:         0       0       0       0       0
  3829 ;;      Temps:          0       0       0       0       0
  3830 ;;      Totals:         0       0       0       0       0
  3831 ;;Total ram usage:        0 bytes
  3832 ;; Hardware stack levels used:    1
  3833 ;; Hardware stack levels required when called:    2
  3834 ;; This function calls:
  3835 ;;		Nothing
  3836 ;; This function is called by:
  3837 ;;		_lcd_send
  3838 ;; This function uses a non-reentrant model
  3839 ;;
  3840                           
  3841                           
  3842                           ;psect for function _lcd_iowrite8
  3843  077C                     _lcd_iowrite8:	
  3844                           
  3845                           ;incstack = 0
  3846                           ; Regs used in _lcd_iowrite8: [wreg]
  3847  077C  0008               	return
  3848  077D                     __end_of_lcd_iowrite8:	
  3849                           
  3850                           	psect	text21
  3851  0542                     __ptext21:	
  3852 ;; *************** function _lcd_iowrite4 *****************
  3853 ;; Defined at:
  3854 ;;		line 127 in file "../LCD/LCD-PIC16.c"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;  data            1    wreg     unsigned char 
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;  data            1    2[BANK0 ] unsigned char 
  3859 ;;  i               1    3[BANK0 ] unsigned char 
  3860 ;; Return value:  Size  Location     Type
  3861 ;;		None               void
  3862 ;; Registers used:
  3863 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3864 ;; Tracked objects:
  3865 ;;		On entry : 0/0
  3866 ;;		On exit  : 0/0
  3867 ;;		Unchanged: 0/0
  3868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3869 ;;      Params:         0       0       0       0       0
  3870 ;;      Locals:         0       2       0       0       0
  3871 ;;      Temps:          0       2       0       0       0
  3872 ;;      Totals:         0       4       0       0       0
  3873 ;;Total ram usage:        4 bytes
  3874 ;; Hardware stack levels used:    1
  3875 ;; Hardware stack levels required when called:    3
  3876 ;; This function calls:
  3877 ;;		_lcd_ioset
  3878 ;; This function is called by:
  3879 ;;		_lcd_init
  3880 ;;		_lcd_send
  3881 ;; This function uses a non-reentrant model
  3882 ;;
  3883                           
  3884                           
  3885                           ;psect for function _lcd_iowrite4
  3886  0542                     _lcd_iowrite4:	
  3887                           
  3888                           ;incstack = 0
  3889                           ; Regs used in _lcd_iowrite4: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3890                           ;lcd_iowrite4@data stored from wreg
  3891  0542  1283               	bcf	3,5	;RP0=0, select bank0
  3892  0543  1303               	bcf	3,6	;RP1=0, select bank0
  3893  0544  00CA               	movwf	lcd_iowrite4@data
  3894                           
  3895                           ;LCD-PIC16.c: 129: uint8_t i;
  3896                           ;LCD-PIC16.c: 131: for (i = 4; i < 8; i++)
  3897  0545  3004               	movlw	4
  3898  0546  00C8               	movwf	??_lcd_iowrite4
  3899  0547  0848               	movf	??_lcd_iowrite4,w
  3900  0548  00CB               	movwf	lcd_iowrite4@i
  3901  0549  3008               	movlw	8
  3902  054A  024B               	subwf	lcd_iowrite4@i,w
  3903  054B  1803               	btfsc	3,0
  3904  054C  2D6E               	goto	l2748
  3905  054D                     l2742:	
  3906                           
  3907                           ;LCD-PIC16.c: 132: lcd_ioset(i, (data & (1 << i - 4)) ? 1 : 0);
  3908  054D  3001               	movlw	1
  3909  054E  00C8               	movwf	??_lcd_iowrite4
  3910  054F  084B               	movf	lcd_iowrite4@i,w
  3911  0550  3EFC               	addlw	-4
  3912  0551  3E01               	addlw	1
  3913  0552  2D55               	goto	u2564
  3914  0553                     u2565:	
  3915  0553  1003               	clrc
  3916  0554  0DC8               	rlf	??_lcd_iowrite4,f
  3917  0555                     u2564:	
  3918  0555  3EFF               	addlw	-1
  3919  0556  1D03               	skipz
  3920  0557  2D53               	goto	u2565
  3921  0558  0848               	movf	??_lcd_iowrite4,w
  3922  0559  054A               	andwf	lcd_iowrite4@data,w
  3923  055A  3000               	movlw	0
  3924  055B  1D03               	btfss	3,2
  3925  055C  3001               	movlw	1
  3926  055D  00C9               	movwf	??_lcd_iowrite4+1
  3927  055E  0849               	movf	??_lcd_iowrite4+1,w
  3928  055F  00F4               	movwf	?_lcd_ioset
  3929  0560  084B               	movf	lcd_iowrite4@i,w
  3930  0561  118A  246F  118A   	fcall	_lcd_ioset
  3931  0564  3001               	movlw	1
  3932  0565  1283               	bcf	3,5	;RP0=0, select bank0
  3933  0566  1303               	bcf	3,6	;RP1=0, select bank0
  3934  0567  00C8               	movwf	??_lcd_iowrite4
  3935  0568  0848               	movf	??_lcd_iowrite4,w
  3936  0569  07CB               	addwf	lcd_iowrite4@i,f
  3937  056A  3008               	movlw	8
  3938  056B  024B               	subwf	lcd_iowrite4@i,w
  3939  056C  1C03               	skipc
  3940  056D  2D4D               	goto	l2742
  3941  056E                     l2748:	
  3942                           
  3943                           ;LCD-PIC16.c: 134: lcd_ioset(E_EN_PIN,1);
  3944  056E  01F4               	clrf	?_lcd_ioset
  3945  056F  0AF4               	incf	?_lcd_ioset,f
  3946  0570  3008               	movlw	8
  3947  0571  118A  246F  118A   	fcall	_lcd_ioset
  3948                           
  3949                           ;LCD-PIC16.c: 135: _delay((unsigned long)((10)*(1000000/1000000.0)));
  3950  0574  3003               	movlw	3
  3951  0575  1283               	bcf	3,5	;RP0=0, select bank0
  3952  0576  1303               	bcf	3,6	;RP1=0, select bank0
  3953  0577  00C8               	movwf	??_lcd_iowrite4
  3954  0578                     u3007:	
  3955  0578  0BC8               	decfsz	??_lcd_iowrite4,f
  3956  0579  2D78               	goto	u3007
  3957                           
  3958                           ;LCD-PIC16.c: 136: lcd_ioset(E_EN_PIN,0);
  3959  057A  01F4               	clrf	?_lcd_ioset
  3960  057B  3008               	movlw	8
  3961  057C  118A  246F         	fcall	_lcd_ioset
  3962  057E  0008               	return
  3963  057F                     __end_of_lcd_iowrite4:	
  3964                           
  3965                           	psect	text22
  3966  0667                     __ptext22:	
  3967 ;; *************** function _lcd_ioinit *****************
  3968 ;; Defined at:
  3969 ;;		line 46 in file "../LCD/LCD-PIC16.c"
  3970 ;; Parameters:    Size  Location     Type
  3971 ;;  iodata          1    wreg     PTR void 
  3972 ;;		 -> NULL(0), 
  3973 ;; Auto vars:     Size  Location     Type
  3974 ;;  iodata          1    0[COMMON] PTR void 
  3975 ;;		 -> NULL(0), 
  3976 ;;  i               1    1[BANK0 ] unsigned char 
  3977 ;; Return value:  Size  Location     Type
  3978 ;;                  1    wreg      unsigned char 
  3979 ;; Registers used:
  3980 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3981 ;; Tracked objects:
  3982 ;;		On entry : 0/0
  3983 ;;		On exit  : 0/0
  3984 ;;		Unchanged: 0/0
  3985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3986 ;;      Params:         0       0       0       0       0
  3987 ;;      Locals:         0       1       0       0       0
  3988 ;;      Temps:          0       1       0       0       0
  3989 ;;      Totals:         0       2       0       0       0
  3990 ;;Total ram usage:        2 bytes
  3991 ;; Hardware stack levels used:    1
  3992 ;; Hardware stack levels required when called:    3
  3993 ;; This function calls:
  3994 ;;		_lcd_ioset
  3995 ;; This function is called by:
  3996 ;;		_lcd_init
  3997 ;; This function uses a non-reentrant model
  3998 ;;
  3999                           
  4000                           
  4001                           ;psect for function _lcd_ioinit
  4002  0667                     _lcd_ioinit:	
  4003                           
  4004                           ;LCD-PIC16.c: 47: uint8_t i = 0;
  4005                           
  4006                           ;incstack = 0
  4007                           ; Regs used in _lcd_ioinit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4008  0667  1283               	bcf	3,5	;RP0=0, select bank0
  4009  0668  1303               	bcf	3,6	;RP1=0, select bank0
  4010  0669  01C9               	clrf	lcd_ioinit@i
  4011                           
  4012                           ;LCD-PIC16.c: 50: TRISBbits.TRISB0 = 0;
  4013  066A  1683               	bsf	3,5	;RP0=1, select bank1
  4014  066B  1303               	bcf	3,6	;RP1=0, select bank1
  4015  066C  1006               	bcf	6,0	;volatile
  4016                           
  4017                           ;LCD-PIC16.c: 51: TRISBbits.TRISB1 = 0;
  4018  066D  1086               	bcf	6,1	;volatile
  4019                           
  4020                           ;LCD-PIC16.c: 57: TRISAbits.TRISA0 = 0;
  4021  066E  1005               	bcf	5,0	;volatile
  4022                           
  4023                           ;LCD-PIC16.c: 58: TRISAbits.TRISA1 = 0;
  4024  066F  1085               	bcf	5,1	;volatile
  4025                           
  4026                           ;LCD-PIC16.c: 59: TRISAbits.TRISA2 = 0;
  4027  0670  1105               	bcf	5,2	;volatile
  4028                           
  4029                           ;LCD-PIC16.c: 60: TRISAbits.TRISA3 = 0;
  4030  0671  1185               	bcf	5,3	;volatile
  4031                           
  4032                           ;LCD-PIC16.c: 72: for (i = 0; i < 11; i++)
  4033  0672  1283               	bcf	3,5	;RP0=0, select bank0
  4034  0673  1303               	bcf	3,6	;RP1=0, select bank0
  4035  0674  01C9               	clrf	lcd_ioinit@i
  4036  0675  300B               	movlw	11
  4037  0676  0249               	subwf	lcd_ioinit@i,w
  4038  0677  1803               	btfsc	3,0
  4039  0678  2E88               	goto	l2734
  4040  0679                     l2728:	
  4041                           
  4042                           ;LCD-PIC16.c: 73: lcd_ioset(i, 0);
  4043  0679  01F4               	clrf	?_lcd_ioset
  4044  067A  0849               	movf	lcd_ioinit@i,w
  4045  067B  118A  246F  118A   	fcall	_lcd_ioset
  4046  067E  3001               	movlw	1
  4047  067F  1283               	bcf	3,5	;RP0=0, select bank0
  4048  0680  1303               	bcf	3,6	;RP1=0, select bank0
  4049  0681  00C8               	movwf	??_lcd_ioinit
  4050  0682  0848               	movf	??_lcd_ioinit,w
  4051  0683  07C9               	addwf	lcd_ioinit@i,f
  4052  0684  300B               	movlw	11
  4053  0685  0249               	subwf	lcd_ioinit@i,w
  4054  0686  1C03               	skipc
  4055  0687  2E79               	goto	l2728
  4056  0688                     l2734:	
  4057                           
  4058                           ;LCD-PIC16.c: 77: return 4;
  4059  0688  3004               	movlw	4
  4060  0689  0008               	return
  4061  068A                     __end_of_lcd_ioinit:	
  4062                           
  4063                           	psect	text23
  4064  046F                     __ptext23:	
  4065 ;; *************** function _lcd_ioset *****************
  4066 ;; Defined at:
  4067 ;;		line 84 in file "../LCD/LCD-PIC16.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;  pin             1    wreg     enum E1012
  4070 ;;  out             1    4[COMMON] unsigned char 
  4071 ;; Auto vars:     Size  Location     Type
  4072 ;;  pin             1    5[COMMON] enum E1012
  4073 ;; Return value:  Size  Location     Type
  4074 ;;		None               void
  4075 ;; Registers used:
  4076 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4077 ;; Tracked objects:
  4078 ;;		On entry : 0/0
  4079 ;;		On exit  : 0/0
  4080 ;;		Unchanged: 0/0
  4081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4082 ;;      Params:         1       0       0       0       0
  4083 ;;      Locals:         1       0       0       0       0
  4084 ;;      Temps:          0       0       0       0       0
  4085 ;;      Totals:         2       0       0       0       0
  4086 ;;Total ram usage:        2 bytes
  4087 ;; Hardware stack levels used:    1
  4088 ;; Hardware stack levels required when called:    2
  4089 ;; This function calls:
  4090 ;;		Nothing
  4091 ;; This function is called by:
  4092 ;;		_lcd_send
  4093 ;;		_lcd_ioinit
  4094 ;;		_lcd_iowrite4
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098                           
  4099                           ;psect for function _lcd_ioset
  4100  046F                     _lcd_ioset:	
  4101                           
  4102                           ;incstack = 0
  4103                           ; Regs used in _lcd_ioset: [wreg-fsr0h+status,2+status,0]
  4104                           ;lcd_ioset@pin stored from wreg
  4105  046F  00F5               	movwf	lcd_ioset@pin
  4106                           
  4107                           ;LCD-PIC16.c: 85: switch (pin) {
  4108  0470  2CA1               	goto	l2826
  4109  0471                     l2812:	
  4110                           ;LCD-PIC16.c: 100: case E_D4_PIN:
  4111                           
  4112                           
  4113                           ;LCD-PIC16.c: 101: PORTAbits.RA0 = out;
  4114  0471  0874               	movf	lcd_ioset@out,w
  4115  0472  1283               	bcf	3,5	;RP0=0, select bank0
  4116  0473  1303               	bcf	3,6	;RP1=0, select bank0
  4117  0474  1D03               	skipz
  4118  0475  1405               	bsf	5,0	;volatile
  4119  0476  1903               	skipnz
  4120  0477  1005               	bcf	5,0	;volatile
  4121                           
  4122                           ;LCD-PIC16.c: 102: break;
  4123  0478  0008               	return
  4124  0479                     l2814:	
  4125                           ;LCD-PIC16.c: 103: case E_D5_PIN:
  4126                           
  4127                           
  4128                           ;LCD-PIC16.c: 104: PORTAbits.RA1 = out;
  4129  0479  0874               	movf	lcd_ioset@out,w
  4130  047A  1283               	bcf	3,5	;RP0=0, select bank0
  4131  047B  1303               	bcf	3,6	;RP1=0, select bank0
  4132  047C  1D03               	skipz
  4133  047D  1485               	bsf	5,1	;volatile
  4134  047E  1903               	skipnz
  4135  047F  1085               	bcf	5,1	;volatile
  4136                           
  4137                           ;LCD-PIC16.c: 105: break;
  4138  0480  0008               	return
  4139  0481                     l2816:	
  4140                           ;LCD-PIC16.c: 106: case E_D6_PIN:
  4141                           
  4142                           
  4143                           ;LCD-PIC16.c: 107: PORTAbits.RA2 = out;
  4144  0481  0874               	movf	lcd_ioset@out,w
  4145  0482  1283               	bcf	3,5	;RP0=0, select bank0
  4146  0483  1303               	bcf	3,6	;RP1=0, select bank0
  4147  0484  1D03               	skipz
  4148  0485  1505               	bsf	5,2	;volatile
  4149  0486  1903               	skipnz
  4150  0487  1105               	bcf	5,2	;volatile
  4151                           
  4152                           ;LCD-PIC16.c: 108: break;
  4153  0488  0008               	return
  4154  0489                     l2818:	
  4155                           ;LCD-PIC16.c: 109: case E_D7_PIN:
  4156                           
  4157                           
  4158                           ;LCD-PIC16.c: 110: PORTAbits.RA3 = out;
  4159  0489  0874               	movf	lcd_ioset@out,w
  4160  048A  1283               	bcf	3,5	;RP0=0, select bank0
  4161  048B  1303               	bcf	3,6	;RP1=0, select bank0
  4162  048C  1D03               	skipz
  4163  048D  1585               	bsf	5,3	;volatile
  4164  048E  1903               	skipnz
  4165  048F  1185               	bcf	5,3	;volatile
  4166                           
  4167                           ;LCD-PIC16.c: 111: break;
  4168  0490  0008               	return
  4169  0491                     l2820:	
  4170                           ;LCD-PIC16.c: 112: case E_RS_PIN:
  4171                           
  4172                           
  4173                           ;LCD-PIC16.c: 113: PORTBbits.RB1 = out;
  4174  0491  0874               	movf	lcd_ioset@out,w
  4175  0492  1283               	bcf	3,5	;RP0=0, select bank0
  4176  0493  1303               	bcf	3,6	;RP1=0, select bank0
  4177  0494  1D03               	skipz
  4178  0495  1486               	bsf	6,1	;volatile
  4179  0496  1903               	skipnz
  4180  0497  1086               	bcf	6,1	;volatile
  4181                           
  4182                           ;LCD-PIC16.c: 114: break;
  4183  0498  0008               	return
  4184  0499                     l2822:	
  4185                           ;LCD-PIC16.c: 115: case E_EN_PIN:
  4186                           
  4187                           
  4188                           ;LCD-PIC16.c: 116: PORTBbits.RB0 = out;
  4189  0499  0874               	movf	lcd_ioset@out,w
  4190  049A  1283               	bcf	3,5	;RP0=0, select bank0
  4191  049B  1303               	bcf	3,6	;RP1=0, select bank0
  4192  049C  1D03               	skipz
  4193  049D  1406               	bsf	6,0	;volatile
  4194  049E  1903               	skipnz
  4195  049F  1006               	bcf	6,0	;volatile
  4196                           
  4197                           ;LCD-PIC16.c: 123: }
  4198                           
  4199                           ;LCD-PIC16.c: 122: break;
  4200                           
  4201                           ;LCD-PIC16.c: 118: case E_RW_PIN:
  4202                           
  4203                           ;LCD-PIC16.c: 117: break;
  4204  04A0  0008               	return
  4205  04A1                     l2826:	
  4206  04A1  0875               	movf	lcd_ioset@pin,w
  4207                           
  4208                           ; Switch size 1, requested type "space"
  4209                           ; Number of cases is 7, Range of values is 4 to 10
  4210                           ; switch strategies available:
  4211                           ; Name         Instructions Cycles
  4212                           ; simple_byte           22    12 (average)
  4213                           ; direct_byte           24    10 (fixed)
  4214                           ; jumptable            263     9 (fixed)
  4215                           ;	Chosen strategy is simple_byte
  4216  04A2  3A04               	xorlw	4	; case 4
  4217  04A3  1903               	skipnz
  4218  04A4  2C71               	goto	l2812
  4219  04A5  3A01               	xorlw	1	; case 5
  4220  04A6  1903               	skipnz
  4221  04A7  2C79               	goto	l2814
  4222  04A8  3A03               	xorlw	3	; case 6
  4223  04A9  1903               	skipnz
  4224  04AA  2C81               	goto	l2816
  4225  04AB  3A01               	xorlw	1	; case 7
  4226  04AC  1903               	skipnz
  4227  04AD  2C89               	goto	l2818
  4228  04AE  3A0F               	xorlw	15	; case 8
  4229  04AF  1903               	skipnz
  4230  04B0  2C99               	goto	l2822
  4231  04B1  3A01               	xorlw	1	; case 9
  4232  04B2  1903               	skipnz
  4233  04B3  2C91               	goto	l2820
  4234  04B4  3A03               	xorlw	3	; case 10
  4235  04B5  1903               	skipnz
  4236  04B6  2CB8               	goto	l266
  4237  04B7  2CB8               	goto	l266
  4238  04B8                     l266:	
  4239  04B8  0008               	return
  4240  04B9                     __end_of_lcd_ioset:	
  4241                           
  4242                           	psect	text24
  4243  0750                     __ptext24:	
  4244 ;; *************** function _isr *****************
  4245 ;; Defined at:
  4246 ;;		line 110 in file "main.c"
  4247 ;; Parameters:    Size  Location     Type
  4248 ;;		None
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;		None
  4251 ;; Return value:  Size  Location     Type
  4252 ;;		None               void
  4253 ;; Registers used:
  4254 ;;		wreg, status,2, status,0, pclath, cstack
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4260 ;;      Params:         0       0       0       0       0
  4261 ;;      Locals:         0       0       0       0       0
  4262 ;;      Temps:          4       0       0       0       0
  4263 ;;      Totals:         4       0       0       0       0
  4264 ;;Total ram usage:        4 bytes
  4265 ;; Hardware stack levels used:    1
  4266 ;; Hardware stack levels required when called:    1
  4267 ;; This function calls:
  4268 ;;		_tick_update
  4269 ;; This function is called by:
  4270 ;;		Interrupt level 1
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           
  4274                           
  4275                           ;psect for function _isr
  4276  0750                     _isr:	
  4277                           
  4278                           ;main.c: 112: tick_update();
  4279  0750  118A  2708  118A   	fcall	_tick_update
  4280  0753  0873               	movf	??_isr+3,w
  4281  0754  1283               	bcf	3,5	;RP0=0, select bank0
  4282  0755  1303               	bcf	3,6	;RP1=0, select bank0
  4283  0756  00FF               	movwf	127
  4284  0757  0872               	movf	??_isr+2,w
  4285  0758  008A               	movwf	10
  4286  0759  0871               	movf	??_isr+1,w
  4287  075A  0084               	movwf	4
  4288  075B  0E70               	swapf	??_isr^(0+-128),w
  4289  075C  0083               	movwf	3
  4290  075D  0EFE               	swapf	126,f
  4291  075E  0E7E               	swapf	126,w
  4292  075F  0009               	retfie
  4293  0760                     __end_of_isr:	
  4294                           
  4295                           	psect	intentry
  4296  0004                     __pintentry:	
  4297                           ;incstack = 0
  4298                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  4299                           
  4300  0004                     interrupt_function:	
  4301  007E                     saved_w	set	btemp
  4302  0004  00FE               	movwf	btemp
  4303  0005  0E03               	swapf	3,w
  4304  0006  00F0               	movwf	??_isr
  4305  0007  0804               	movf	4,w
  4306  0008  00F1               	movwf	??_isr+1
  4307  0009  080A               	movf	10,w
  4308  000A  00F2               	movwf	??_isr+2
  4309  000B  1283               	bcf	3,5	;RP0=0, select bank0
  4310  000C  1303               	bcf	3,6	;RP1=0, select bank0
  4311  000D  087F               	movf	btemp+1,w
  4312  000E  00F3               	movwf	??_isr+3
  4313  000F  118A  2F50         	ljmp	_isr
  4314                           
  4315                           	psect	text25
  4316  0708                     __ptext25:	
  4317 ;; *************** function _tick_update *****************
  4318 ;; Defined at:
  4319 ;;		line 48 in file "../Tick/Tick-PIC16.c"
  4320 ;; Parameters:    Size  Location     Type
  4321 ;;		None
  4322 ;; Auto vars:     Size  Location     Type
  4323 ;;		None
  4324 ;; Return value:  Size  Location     Type
  4325 ;;		None               void
  4326 ;; Registers used:
  4327 ;;		wreg
  4328 ;; Tracked objects:
  4329 ;;		On entry : 0/0
  4330 ;;		On exit  : 0/0
  4331 ;;		Unchanged: 0/0
  4332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4333 ;;      Params:         0       0       0       0       0
  4334 ;;      Locals:         0       0       0       0       0
  4335 ;;      Temps:          0       0       0       0       0
  4336 ;;      Totals:         0       0       0       0       0
  4337 ;;Total ram usage:        0 bytes
  4338 ;; Hardware stack levels used:    1
  4339 ;; This function calls:
  4340 ;;		Nothing
  4341 ;; This function is called by:
  4342 ;;		_isr
  4343 ;; This function uses a non-reentrant model
  4344 ;;
  4345                           
  4346                           
  4347                           ;psect for function _tick_update
  4348  0708                     _tick_update:	
  4349                           
  4350                           ;Tick-PIC16.c: 49: if (PIR1bits.TMR1IF) {
  4351                           
  4352                           ;incstack = 0
  4353                           ; Regs used in _tick_update: [wreg]
  4354  0708  1283               	bcf	3,5	;RP0=0, select bank0
  4355  0709  1303               	bcf	3,6	;RP1=0, select bank0
  4356  070A  1C0C               	btfss	12,0	;volatile
  4357  070B  0008               	return
  4358                           
  4359                           ;Tick-PIC16.c: 50: tickcnt++;
  4360  070C  3001               	movlw	1
  4361  070D  07F6               	addwf	_tickcnt,f	;volatile
  4362  070E  3000               	movlw	0
  4363  070F  1803               	skipnc
  4364  0710  3001               	movlw	1
  4365  0711  07F7               	addwf	_tickcnt+1,f	;volatile
  4366  0712  3000               	movlw	0
  4367  0713  1803               	skipnc
  4368  0714  3001               	movlw	1
  4369  0715  07F8               	addwf	_tickcnt+2,f	;volatile
  4370  0716  3000               	movlw	0
  4371  0717  1803               	skipnc
  4372  0718  3001               	movlw	1
  4373  0719  07F9               	addwf	_tickcnt+3,f	;volatile
  4374                           
  4375                           ;Tick-PIC16.c: 51: PIR1bits.TMR1IF = 0;
  4376  071A  100C               	bcf	12,0	;volatile
  4377  071B  0008               	return
  4378  071C                     __end_of_tick_update:	
  4379  007E                     btemp	set	126	;btemp
  4380  007E                     wtemp0	set	126


Data Sizes:
    Strings     62
    Constant    14
    Data        2
    BSS         44
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     37      80
    BANK1            80      3       3
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    ?___lwdiv	unsigned int  size(1) Largest target is 0

    ?___lwmod	unsigned int  size(1) Largest target is 0

    ?___wmul	unsigned int  size(1) Largest target is 0

    lcd_ioinit@iodata	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    ?_tick_get	unsigned long  size(1) Largest target is 0

    sprintf@_val._cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_3(CODE[23]), STR_2(CODE[22]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> buf(BANK0[20]), 

    ?_sprintf	int  size(1) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S532$_cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    lcd_puts@string	PTR const unsigned char  size(2) Largest target is 20
		 -> buf(BANK0[20]), STR_1(CODE[17]), 

    lcd_init@iodata	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    dhtlib_read11@temp	PTR unsigned char  size(1) Largest target is 1
		 -> dht11_task@tb(BANK1[1]), 

    dhtlib_read11@hum	PTR unsigned char  size(1) Largest target is 1
		 -> dht11_task@hb(BANK1[1]), 


Critical Paths under _main in COMMON

    _sprintf->_isdigit
    _sprintf->___lwmod
    _sprintf->___wmul
    ___lwmod->___lwdiv
    _dhtlib_read->_dhtlib_start
    _tick_get->_tick_read_internal
    _lcd_send->_lcd_ioset
    _lcd_iowrite4->_lcd_ioset
    _lcd_ioinit->_lcd_ioset

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_dht11_task
    _dht11_task->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _dhtlib_read11->_dhtlib_read
    _lcd_goto->_lcd_send
    _lcd_puts->_lcd_send
    _led_task->_tick_get
    _lcd_on->_lcd_send
    _lcd_init->_lcd_send
    _lcd_send->_lcd_iowrite4

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_dht11_task

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7851
                                             35 BANK0      2     2      0
                           _lcd_init
                          _tick_init
                        _dhtlib_init
                             _lcd_on
                           _lcd_puts
                           _led_task
                         _dht11_task
 ---------------------------------------------------------------------------------
 (1) _dht11_task                                           8     8      0    4839
                                             30 BANK0      5     5      0
                                              0 BANK1      3     3      0
                           _lcd_puts
                           _tick_get
                           _lcd_goto
                      _dhtlib_read11
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    13      5    2381
                                             12 BANK0     18    13      5
                            _isdigit
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     136
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     232
                                              5 COMMON     1     1      0
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     241
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      99
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _dhtlib_read11                                        7     6      1     618
                                              6 BANK0      7     6      1
                        _dhtlib_read
 ---------------------------------------------------------------------------------
 (3) _dhtlib_read                                          6     6      0     457
                                              0 BANK0      6     6      0
                       _dhtlib_start
 ---------------------------------------------------------------------------------
 (4) _dhtlib_start                                         2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _lcd_goto                                             3     2      1     849
                                              7 BANK0      3     2      1
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_puts                                             2     0      2     784
                                              7 BANK0      2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (1) _led_task                                             4     4      0       0
                                              4 BANK0      4     4      0
                           _tick_get
 ---------------------------------------------------------------------------------
 (2) _tick_get                                             4     0      4       0
                                              0 BANK0      4     0      4
                 _tick_read_internal
 ---------------------------------------------------------------------------------
 (3) _tick_read_internal                                   1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_on                                               1     1      0     719
                                              7 BANK0      1     1      0
                           _lcd_send
 ---------------------------------------------------------------------------------
 (1) _dhtlib_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _tick_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             5     3      2    1509
                                              7 BANK0      5     3      2
                         _lcd_ioinit
                       _lcd_iowrite4
                           _lcd_send
 ---------------------------------------------------------------------------------
 (3) _lcd_send                                             3     2      1     719
                                              4 BANK0      3     2      1
                       _lcd_iowrite4
                          _lcd_ioset
                       _lcd_iowrite8
 ---------------------------------------------------------------------------------
 (4) _lcd_iowrite8                                         1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _lcd_iowrite4                                         4     4      0     378
                                              0 BANK0      4     4      0
                          _lcd_ioset
 ---------------------------------------------------------------------------------
 (2) _lcd_ioinit                                           3     3      0     319
                                              0 BANK0      2     2      0
                          _lcd_ioset
 ---------------------------------------------------------------------------------
 (4) _lcd_ioset                                            2     1      1     217
                                              4 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
                        _tick_update
 ---------------------------------------------------------------------------------
 (7) _tick_update                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_init
     _lcd_ioinit
       _lcd_ioset
     _lcd_iowrite4
       _lcd_ioset
     _lcd_send
       _lcd_iowrite4
         _lcd_ioset
       _lcd_ioset
       _lcd_iowrite8
   _tick_init
   _dhtlib_init
   _lcd_on
     _lcd_send
       _lcd_iowrite4
         _lcd_ioset
       _lcd_ioset
       _lcd_iowrite8
   _lcd_puts
     _lcd_send
       _lcd_iowrite4
         _lcd_ioset
       _lcd_ioset
       _lcd_iowrite8
   _led_task
     _tick_get
       _tick_read_internal
   _dht11_task
     _lcd_puts
       _lcd_send
         _lcd_iowrite4
           _lcd_ioset
         _lcd_ioset
         _lcd_iowrite8
     _tick_get
       _tick_read_internal
     _lcd_goto
       _lcd_send
         _lcd_iowrite4
           _lcd_ioset
         _lcd_ioset
         _lcd_iowrite8
     _dhtlib_read11
       _dhtlib_read
         _dhtlib_start
     _sprintf
       _isdigit
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul

 _isr (ROOT)
   _tick_update

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      3       3       7        3.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     25      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      66      12        0.0%
ABS                  0      0      5D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       9       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Fri Aug 22 19:56:23 2014

              ?_lcd_iowrite4 0070                ?_lcd_iowrite8 0070                            pc 0002  
                __CFG_CP$OFF 0000                           l73 039E                           l74 03A6  
                         l83 03C3                           l92 0405                           l84 040D  
                         l93 03DB                           l85 03C5                           l77 0410  
                         l78 03B1                           l79 03B3                           fsr 0004  
        ___wmul@multiplicand 004A                          l151 06CC                          l317 0159  
                        l266 04B8                          l290 0051                          l772 064E  
               __CFG_CPD$OFF 0000             lcd_ioinit@iodata 0070                          _buf 0034  
                        _isr 0750                          fsr0 0004                          indf 0000  
                lcd_goto@col 0051                  lcd_goto@row 004F            dhtlib_read11@temp 0052  
                lcd_ioinit@i 0049                 dhtlib_read@i 004D                 __CFG_LVP$OFF 0000  
                       l2500 00F1                         l2412 0365                         l2326 063B  
                       l2424 0696                         l2520 012E                         l2504 00FA  
                       l2354 0277                         l2506 010F                         l2428 069F  
                       l2516 0128                         l2460 004D                         l2390 06AB  
                       l2614 03BE                         l2446 0607                         l2438 05F6  
                       l2368 02B6                         l2640 03E6                         l2624 03D0  
                       l2536 0178                         l2528 014B                         l2480 00A4  
                       l2472 006D                         l2562 01BC                         l2546 018D  
                       l2554 01A3                         l2538 017C                         l2490 00B7  
                       l2466 0056                         l2820 0491                         l2812 0471  
                       l2900 05AE                         l2556 01A7                         l2492 00D1  
                       l2484 00B5                         l2580 020F                         l2468 005F  
                       l2822 0499                         l2814 0479                         l2734 0688  
                       l2742 054D                         l2816 0481                         l2728 0679  
                       l2648 0403                         l2576 01CF                         l2568 01CB  
                       l2818 0489                         l2826 04A1                         l2906 0644  
                       l2498 00E2                         l2578 002F                         l2748 056E  
                       l2764 05E0                         l2596 0391                         l2852 076C  
                       l2758 05BE                         l2874 0530                         l2866 050C  
                       l2890 0587                         l2868 051A                         l2892 0595  
                       l2878 053B                         l2896 05A3                         ?_isr 0070  
                       STR_1 045E                         STR_2 0448                         STR_3 0431  
                       u2010 04D6                         u2011 04D7                         u2012 04DC  
                       u2013 04DD                         u2030 0306                         u2031 0307  
                       u2032 030C                         u2025 04EF                         u2033 030D  
                       u2045 031F                         u3007 0578                         u2135 00AC  
                       u2225 0168                         u2145 00C3                         u2155 00EE  
                       u2185 0141                         u2605 05D1                         u2454 03EC  
                       u2455 03EA                         u2705 0527                         u2715 0531  
                       u2564 0555                         u2565 0553                         u2805 064F  
                       u2815 0656                         u2745 058A                         u2907 025A  
                       u2675 050F                         u2917 0265                         u2837 03D2  
                       u2765 059B                         u2927 0273                         u2847 06F6  
                       u2695 051B                         u2775 05A4                         u2937 0288  
                       u2857 0704                         u2947 0297                         u2867 073C  
                       u2957 02A5                         u2877 022E                         u2967 02B3  
                       u2887 0243                         u2977 02C1                         u2897 024F  
                       u2987 02D1                         u2997 02E1               ??_dhtlib_start 0074  
               __CFG_WRT$OFF 0000                         _bits 0026                         _main 0616  
                       btemp 007E                 lcd_init@cols 004F                 lcd_init@rows 0050  
                       start 0011                __CFG_IESO$OFF 0000                __CFG_MCLRE$ON 0000  
             ??_lcd_iowrite4 0048               ??_lcd_iowrite8 0074                 lcd_ioset@pin 0075  
               lcd_ioset@out 0074                 lcd_send@data 004E                        ??_isr 0070  
          dhtlib_read@aindex 004A            dhtlib_read@bcount 004B                        ?_main 0070  
            ??_dhtlib_read11 004F                __CFG_WDTE$OFF 0000                        _ANSEL 009B  
                      _T1CON 0010              __end_of___lwdiv 0542              __end_of___lwmod 05B5  
                      _TMR1H 000F                        _TMR1L 000E                        _PORTA 0005  
             __CFG_CCPMX$RB0 0000               __CFG_FCMEN$OFF 0000              __end_of_dpowers 042D  
            __end_of_isdigit 076E  __size_of_tick_read_internal 001F               __CFG_BOREN$OFF 0000  
                      pclath 000A          dhtlib_read11@chksum 0053              __end_of_rowaddr 0431  
                      status 0003                        wtemp0 007E              __end_of_sprintf 0216  
             dhtlib_read11@s 0054              __initialization 0013                 __end_of_main 0642  
                     ??_main 006B                lcd_iowrite4@i 004B                       _OSCCON 008F  
             __CFG_PWRTE$OFF 0000                 ?_tick_update 0070         __size_of_dhtlib_init 0004  
       __size_of_dhtlib_read 0090             __end_of_lcd_init 02E5             __end_of_lcd_goto 06AB  
           __end_of_lcd_send 05E6             __end_of_lcd_puts 06CC             __end_of_led_task 0502  
                     ___wmul 0642                    ??___lwdiv 0074                    ??___lwmod 0075  
                     _lcd_on 072F                       _iomode 006F         __end_of_dhtlib_start 0708  
             lcd_init@iodata 0053             __end_of_tick_get 072F                    ??_isdigit 0074  
                     saved_w 007E         __end_of_lcd_iowrite4 057F         __end_of_lcd_iowrite8 077D  
                  ??_sprintf 0059      __end_of__initialization 0025               __pcstackCOMMON 0070  
               __pidataBANK0 077A                   _dht11_task 02E5             lcd_iowrite4@data 004A  
           lcd_iowrite8@data 0070                led_task@ltime 002F           __size_of_lcd_ioset 004A  
               dht11_task@hb 00A2                 dht11_task@tb 00A1                 sprintf@width 0060  
                 __pbssBANK0 0020                   __pmaintext 0616                      ?___wmul 0048  
                 __pintentry 0004                      ?_lcd_on 0070           __size_of_tick_init 0010  
                 _lcd_ioinit 0667                   _lcdcolumns 006D                    ?_lcd_init 004F  
                  ?_lcd_goto 004F                    ?_lcd_send 004C                    ?_lcd_puts 004F  
                 __stringtab 0413                    ?_led_task 0070                    ?_tick_get 0048  
      __size_of_dhtlib_start 001D            __end_of_lcd_ioset 04B9                  ?_dht11_task 0070  
       __size_of_tick_update 0014              __size_of___wmul 0025                      ___lwdiv 0502  
                    ___lwmod 057F              __size_of_lcd_on 0011                      __ptext1 02E5  
                    __ptext2 0028                      __ptext3 0642                      __ptext4 057F  
                    __ptext5 0502                      __ptext6 0760                      __ptext7 05E6  
                    __ptext8 0383                      __ptext9 06EB        __size_of_lcd_iowrite4 003D  
      __size_of_lcd_iowrite8 0001                      _lcdrows 006E                      _dpowers 0423  
      __end_of_dhtlib_read11 0616                      _isdigit 0760                 __size_of_isr 0010  
                    _tickcnt 0076   __end_of_tick_read_internal 06EB                      _rowaddr 042D  
                    _sprintf 0028                      clrloop0 076F                   ??_lcd_init 0051  
                 ??_lcd_goto 0050                   ??_lcd_send 004D                   ??_lcd_puts 0076  
       end_of_initialization 0025                   ??_led_task 004C            __end_of_tick_init 0750  
               _dhtlib_start 06EB               lcd_puts@string 004F                   ??_tick_get 0075  
                 _tickbuffer 0020              dht11_task@ltick 002B                 _lcd_iowrite4 0542  
               _lcd_iowrite8 077C                    _PORTAbits 0005                    _PORTBbits 0006  
                  _TRISAbits 0085                    _TRISBbits 0086                  ?_lcd_ioinit 0070  
        __size_of_dht11_task 009E             dhtlib_read11@hum 004E                   lcd_send@rs 004C  
              ??_dhtlib_init 0074                ??_dhtlib_read 0048               __end_of___wmul 0667  
             __end_of_lcd_on 0740          start_initialization 0013                  __end_of_isr 0760  
        __size_of_lcd_ioinit 0023                     ??___wmul 0074          __end_of_dhtlib_init 077A  
        __end_of_dhtlib_read 0413                     ??_lcd_on 004F                  __pdataBANK0 006D  
                __pbssCOMMON 0076                __pcstackBANK0 0048                __pcstackBANK1 00A0  
        __end_of__stringdata 046F            __size_of_lcd_init 00CF            __size_of_lcd_goto 0021  
          __size_of_lcd_send 0031                  sprintf@_val 0062                  sprintf@flag 005E  
          __size_of_lcd_puts 0021                  sprintf@prec 005D            __size_of_led_task 0049  
                  __pnvBANK0 006F             ___lwdiv@dividend 004A                 ??_dht11_task 0066  
          __size_of_tick_get 0013                     ?___lwdiv 0048                     ?___lwmod 004F  
                  _lcd_ioset 046F                    __pstrings 0413                     ?_isdigit 0070  
           ___lwdiv@quotient 004D                     ?_sprintf 0054           __end_of_dht11_task 0383  
          interrupt_function 0004               ___wmul@product 0074                    clear_ram0 076E  
                _dhtlib_init 0776                  _dhtlib_read 0383                     _PIE1bits 008C  
         _tick_read_internal 06CC                ??_tick_update 0070                    _tick_init 0740  
                   _PIR1bits 000C         dhtlib_read@tocounter 004C          ?_tick_read_internal 0070  
                 ?_lcd_ioset 0074                  __stringbase 0422                  __stringdata 0431  
          ___wmul@multiplier 0048                 ??_lcd_ioinit 0048         ??_tick_read_internal 0074  
                 ?_tick_init 0070       __size_of_dhtlib_read11 0030           __end_of_lcd_ioinit 068A  
           __size_of___lwdiv 0040             __size_of___lwmod 0036          __end_of_tick_update 071C  
         __end_of__stringtab 0423                  _isdigit$715 0074             __size_of_isdigit 000E  
            ___lwdiv@divisor 0048              ___lwdiv@counter 004C                     __ptext10 068A  
                   __ptext11 06AB                     __ptext20 077C                     __ptext12 04B9  
                   __ptext21 0542                     __ptext13 071C                     __ptext22 0667  
                   __ptext14 06CC                     __ptext23 046F                     __ptext15 072F  
                   __ptext24 0750                     __ptext16 0776                     __ptext25 0708  
                   __ptext17 0740                     __ptext18 0216                     __ptext19 05B5  
                   _lcd_init 0216                     _lcd_goto 068A                     _lcd_send 05B5  
                   _dispctrl 0033                     _lcd_puts 06AB                     _led_task 04B9  
           __size_of_sprintf 01EE                __size_of_main 002C            dht11_task@eResult 00A0  
                   _tick_get 071C                  ??_lcd_ioset 0075                   _INTCONbits 000B  
              _dhtlib_read11 05E6                     isdigit@c 0075                     intlevel1 0000  
                  sprintf@ap 005C                    sprintf@sp 005F             ___lwmod@dividend 0051  
                  stringcode 041D                  ??_tick_init 0074                  _tick_update 0708  
                   sprintf@c 0065                     sprintf@f 0054               ?_dhtlib_read11 004E  
            ___lwmod@divisor 004F              ___lwmod@counter 0053                     stringdir 041D  
                   stringtab 0413           __CFG_FOSC$INTOSCIO 0000                ?_dhtlib_start 0070  
               ?_dhtlib_init 0070                 ?_dhtlib_read 0070  
