

Microchip Technology PIC LITE Macro Assembler V1.21 build 54009 
                                                                                               Fri Aug 22 01:27:07 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	16F88
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     	;# 
    44  0001                     	;# 
    45  0002                     	;# 
    46  0003                     	;# 
    47  0004                     	;# 
    48  0005                     	;# 
    49  0006                     	;# 
    50  000A                     	;# 
    51  000B                     	;# 
    52  000C                     	;# 
    53  000D                     	;# 
    54  000E                     	;# 
    55  000E                     	;# 
    56  000F                     	;# 
    57  0010                     	;# 
    58  0011                     	;# 
    59  0012                     	;# 
    60  0013                     	;# 
    61  0014                     	;# 
    62  0015                     	;# 
    63  0015                     	;# 
    64  0016                     	;# 
    65  0017                     	;# 
    66  0018                     	;# 
    67  0019                     	;# 
    68  001A                     	;# 
    69  001E                     	;# 
    70  001F                     	;# 
    71  0081                     	;# 
    72  0085                     	;# 
    73  0086                     	;# 
    74  008C                     	;# 
    75  008D                     	;# 
    76  008E                     	;# 
    77  008F                     	;# 
    78  0090                     	;# 
    79  0092                     	;# 
    80  0093                     	;# 
    81  0094                     	;# 
    82  0098                     	;# 
    83  0099                     	;# 
    84  009B                     	;# 
    85  009C                     	;# 
    86  009D                     	;# 
    87  009E                     	;# 
    88  009F                     	;# 
    89  0105                     	;# 
    90  010C                     	;# 
    91  010D                     	;# 
    92  010E                     	;# 
    93  010F                     	;# 
    94  018C                     	;# 
    95  018D                     	;# 
    96  0000                     	;# 
    97  0001                     	;# 
    98  0002                     	;# 
    99  0003                     	;# 
   100  0004                     	;# 
   101  0005                     	;# 
   102  0006                     	;# 
   103  000A                     	;# 
   104  000B                     	;# 
   105  000C                     	;# 
   106  000D                     	;# 
   107  000E                     	;# 
   108  000E                     	;# 
   109  000F                     	;# 
   110  0010                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0013                     	;# 
   114  0014                     	;# 
   115  0015                     	;# 
   116  0015                     	;# 
   117  0016                     	;# 
   118  0017                     	;# 
   119  0018                     	;# 
   120  0019                     	;# 
   121  001A                     	;# 
   122  001E                     	;# 
   123  001F                     	;# 
   124  0081                     	;# 
   125  0085                     	;# 
   126  0086                     	;# 
   127  008C                     	;# 
   128  008D                     	;# 
   129  008E                     	;# 
   130  008F                     	;# 
   131  0090                     	;# 
   132  0092                     	;# 
   133  0093                     	;# 
   134  0094                     	;# 
   135  0098                     	;# 
   136  0099                     	;# 
   137  009B                     	;# 
   138  009C                     	;# 
   139  009D                     	;# 
   140  009E                     	;# 
   141  009F                     	;# 
   142  0105                     	;# 
   143  010C                     	;# 
   144  010D                     	;# 
   145  010E                     	;# 
   146  010F                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000D                     	;# 
   160  000E                     	;# 
   161  000E                     	;# 
   162  000F                     	;# 
   163  0010                     	;# 
   164  0011                     	;# 
   165  0012                     	;# 
   166  0013                     	;# 
   167  0014                     	;# 
   168  0015                     	;# 
   169  0015                     	;# 
   170  0016                     	;# 
   171  0017                     	;# 
   172  0018                     	;# 
   173  0019                     	;# 
   174  001A                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008F                     	;# 
   184  0090                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  018C                     	;# 
   201  018D                     	;# 
   202  0000                     	;# 
   203  0001                     	;# 
   204  0002                     	;# 
   205  0003                     	;# 
   206  0004                     	;# 
   207  0005                     	;# 
   208  0006                     	;# 
   209  000A                     	;# 
   210  000B                     	;# 
   211  000C                     	;# 
   212  000D                     	;# 
   213  000E                     	;# 
   214  000E                     	;# 
   215  000F                     	;# 
   216  0010                     	;# 
   217  0011                     	;# 
   218  0012                     	;# 
   219  0013                     	;# 
   220  0014                     	;# 
   221  0015                     	;# 
   222  0015                     	;# 
   223  0016                     	;# 
   224  0017                     	;# 
   225  0018                     	;# 
   226  0019                     	;# 
   227  001A                     	;# 
   228  001E                     	;# 
   229  001F                     	;# 
   230  0081                     	;# 
   231  0085                     	;# 
   232  0086                     	;# 
   233  008C                     	;# 
   234  008D                     	;# 
   235  008E                     	;# 
   236  008F                     	;# 
   237  0090                     	;# 
   238  0092                     	;# 
   239  0093                     	;# 
   240  0094                     	;# 
   241  0098                     	;# 
   242  0099                     	;# 
   243  009B                     	;# 
   244  009C                     	;# 
   245  009D                     	;# 
   246  009E                     	;# 
   247  009F                     	;# 
   248  0105                     	;# 
   249  010C                     	;# 
   250  010D                     	;# 
   251  010E                     	;# 
   252  010F                     	;# 
   253  018C                     	;# 
   254  018D                     	;# 
   255  0000                     	;# 
   256  0001                     	;# 
   257  0002                     	;# 
   258  0003                     	;# 
   259  0004                     	;# 
   260  0005                     	;# 
   261  0006                     	;# 
   262  000A                     	;# 
   263  000B                     	;# 
   264  000C                     	;# 
   265  000D                     	;# 
   266  000E                     	;# 
   267  000E                     	;# 
   268  000F                     	;# 
   269  0010                     	;# 
   270  0011                     	;# 
   271  0012                     	;# 
   272  0013                     	;# 
   273  0014                     	;# 
   274  0015                     	;# 
   275  0015                     	;# 
   276  0016                     	;# 
   277  0017                     	;# 
   278  0018                     	;# 
   279  0019                     	;# 
   280  001A                     	;# 
   281  001E                     	;# 
   282  001F                     	;# 
   283  0081                     	;# 
   284  0085                     	;# 
   285  0086                     	;# 
   286  008C                     	;# 
   287  008D                     	;# 
   288  008E                     	;# 
   289  008F                     	;# 
   290  0090                     	;# 
   291  0092                     	;# 
   292  0093                     	;# 
   293  0094                     	;# 
   294  0098                     	;# 
   295  0099                     	;# 
   296  009B                     	;# 
   297  009C                     	;# 
   298  009D                     	;# 
   299  009E                     	;# 
   300  009F                     	;# 
   301  0105                     	;# 
   302  010C                     	;# 
   303  010D                     	;# 
   304  010E                     	;# 
   305  010F                     	;# 
   306  018C                     	;# 
   307  018D                     	;# 
   308                           
   309                           	psect	idataBANK0
   310  077F                     __pidataBANK0:	
   311                           
   312                           ;initializer for _lcdcolumns
   313  077F  3410               	retlw	16
   314                           
   315                           ;initializer for _lcdrows
   316  0780  3402               	retlw	2
   317                           
   318                           	psect	strings
   319  0418                     __pstrings:	
   320  0418                     stringtab:	
   321  0418                     __stringtab:	
   322                           
   323                           ;	String table - string pointers are 1 byte each
   324  0418  1BFF               	btfsc	btemp+1,7
   325  0419  2C22               	ljmp	stringcode
   326  041A  1383               	bcf	3,7
   327  041B  187F               	btfsc	btemp+1,0
   328  041C  1783               	bsf	3,7
   329  041D  0800               	movf	0,w
   330  041E  0A84               	incf	4,f
   331  041F  1903               	skipnz
   332  0420  0AFF               	incf	btemp+1,f
   333  0421  0008               	return
   334  0422                     stringcode:	
   335  0422                     stringdir:	
   336  0422  3004               	movlw	high stringdir
   337  0423  008A               	movwf	10
   338  0424  0804               	movf	4,w
   339  0425  0A84               	incf	4,f
   340  0426  0782               	addwf	2,f
   341  0427                     __stringbase:	
   342  0427  3400               	retlw	0
   343  0428                     __end_of__stringtab:	
   344  0428                     _dpowers:	
   345  0428  3401               	retlw	1
   346  0429  3400               	retlw	0
   347  042A  340A               	retlw	10
   348  042B  3400               	retlw	0
   349  042C  3464               	retlw	100
   350  042D  3400               	retlw	0
   351  042E  34E8               	retlw	232
   352  042F  3403               	retlw	3
   353  0430  3410               	retlw	16
   354  0431  3427               	retlw	39
   355  0432                     __end_of_dpowers:	
   356  0432                     _rowaddr:	
   357  0432  3400               	retlw	0
   358  0433  3440               	retlw	64
   359  0434  3414               	retlw	20
   360  0435  3454               	retlw	84
   361  0436                     __end_of_rowaddr:	
   362  0436                     __stringdata:	
   363  0436                     STR_3:	
   364  0436  3453               	retlw	83	;'S'
   365  0437  3465               	retlw	101	;'e'
   366  0438  346E               	retlw	110	;'n'
   367  0439  3473               	retlw	115	;'s'
   368  043A  346F               	retlw	111	;'o'
   369  043B  3472               	retlw	114	;'r'
   370  043C  3420               	retlw	32	;' '
   371  043D  3465               	retlw	101	;'e'
   372  043E  3472               	retlw	114	;'r'
   373  043F  3472               	retlw	114	;'r'
   374  0440  346F               	retlw	111	;'o'
   375  0441  3472               	retlw	114	;'r'
   376  0442  343A               	retlw	58	;':'
   377  0443  3420               	retlw	32	;' '
   378  0444  3425               	retlw	37	;'%'
   379  0445  3430               	retlw	48	;'0'
   380  0446  3432               	retlw	50	;'2'
   381  0447  3464               	retlw	100	;'d'
   382  0448  3420               	retlw	32	;' '
   383  0449  3420               	retlw	32	;' '
   384  044A  3420               	retlw	32	;' '
   385  044B  3420               	retlw	32	;' '
   386  044C  3400               	retlw	0
   387  044D                     STR_2:	
   388  044D  3454               	retlw	84	;'T'
   389  044E  343A               	retlw	58	;':'
   390  044F  3420               	retlw	32	;' '
   391  0450  3425               	retlw	37	;'%'
   392  0451  3430               	retlw	48	;'0'
   393  0452  3432               	retlw	50	;'2'
   394  0453  3464               	retlw	100	;'d'
   395  0454  3420               	retlw	32	;' '
   396  0455  3443               	retlw	67	;'C'
   397  0456  3420               	retlw	32	;' '
   398  0457  3448               	retlw	72	;'H'
   399  0458  343A               	retlw	58	;':'
   400  0459  3420               	retlw	32	;' '
   401  045A  3425               	retlw	37	;'%'
   402  045B  3430               	retlw	48	;'0'
   403  045C  3432               	retlw	50	;'2'
   404  045D  3464               	retlw	100	;'d'
   405  045E  3425               	retlw	37	;'%'
   406  045F  3425               	retlw	37	;'%'
   407  0460  3420               	retlw	32	;' '
   408  0461  3420               	retlw	32	;' '
   409  0462  3400               	retlw	0
   410  0463                     STR_1:	
   411  0463  3420               	retlw	32	;' '
   412  0464  3420               	retlw	32	;' '
   413  0465  3450               	retlw	80	;'P'
   414  0466  3452               	retlw	82	;'R'
   415  0467  3455               	retlw	85	;'U'
   416  0468  3445               	retlw	69	;'E'
   417  0469  3442               	retlw	66	;'B'
   418  046A  3441               	retlw	65	;'A'
   419  046B  3420               	retlw	32	;' '
   420  046C  3444               	retlw	68	;'D'
   421  046D  3448               	retlw	72	;'H'
   422  046E  3454               	retlw	84	;'T'
   423  046F  3431               	retlw	49	;'1'
   424  0470  3431               	retlw	49	;'1'
   425  0471  3420               	retlw	32	;' '
   426  0472  3420               	retlw	32	;' '
   427  0473  3400               	retlw	0
   428  0474                     __end_of__stringdata:	
   429                           
   430                           ; #config settings
   431  0000                     
   432                           	psect	nvBANK0
   433  006F                     __pnvBANK0:	
   434  006F                     _iomode:	
   435  006F                     	ds	1
   436  000B                     _INTCONbits	set	11
   437  000C                     _PIR1bits	set	12
   438  0005                     _PORTA	set	5
   439  0005                     _PORTAbits	set	5
   440  0006                     _PORTBbits	set	6
   441  0010                     _T1CON	set	16
   442  000F                     _TMR1H	set	15
   443  000E                     _TMR1L	set	14
   444  009B                     _ANSEL	set	155
   445  008F                     _OSCCON	set	143
   446  008C                     _PIE1bits	set	140
   447  0085                     _TRISAbits	set	133
   448  0086                     _TRISBbits	set	134
   449                           
   450                           	psect	cinit
   451  0013                     start_initialization:	
   452  0013                     __initialization:	
   453                           
   454                           ; Clear objects allocated to COMMON
   455  0013  01F6               	clrf	__pbssCOMMON& (0+127)
   456  0014  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   457  0015  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   458  0016  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   459                           
   460                           ; Clear objects allocated to BANK0
   461  0017  1383               	bcf	3,7	;select IRP bank0
   462  0018  3020               	movlw	low __pbssBANK0
   463  0019  0084               	movwf	4
   464  001A  3048               	movlw	low (__pbssBANK0+40)
   465  001B  118A  2773  118A   	fcall	clear_ram0
   466                           
   467                           ; Initialize objects allocated to BANK0
   468  001E  118A  277F  118A   	fcall	__pidataBANK0	;fetch initializer
   469  0021  00ED               	movwf	__pdataBANK0& (0+127)
   470  0022  118A  2780         	fcall	__pidataBANK0+1	;fetch initializer
   471  0024  00EE               	movwf	(__pdataBANK0+1)& (0+127)
   472  0025                     end_of_initialization:	
   473                           ;End of C runtime variable initialization code
   474                           
   475  0025                     __end_of__initialization:	
   476  0025  0183               	clrf	3
   477  0026  118A  2E1B         	ljmp	_main	;jump to C main() function
   478                           
   479                           	psect	bssCOMMON
   480  0076                     __pbssCOMMON:	
   481  0076                     _tickcnt:	
   482  0076                     	ds	4
   483                           
   484                           	psect	bssBANK0
   485  0020                     __pbssBANK0:	
   486  0020                     _tickbuffer:	
   487  0020                     	ds	6
   488  0026                     _bits:	
   489  0026                     	ds	5
   490  002B                     dht11_task@ltick:	
   491  002B                     	ds	4
   492  002F                     led_task@ltime:	
   493  002F                     	ds	4
   494  0033                     _dispctrl:	
   495  0033                     	ds	1
   496  0034                     _buf:	
   497  0034                     	ds	20
   498                           
   499                           	psect	dataBANK0
   500  006D                     __pdataBANK0:	
   501  006D                     _lcdcolumns:	
   502  006D                     	ds	1
   503  006E                     _lcdrows:	
   504  006E                     	ds	1
   505                           
   506                           	psect	clrtext
   507  0773                     clear_ram0:	
   508                           ;	Called with FSR containing the base address, and
   509                           ;	W with the last address+1
   510                           
   511  0773  0064               	clrwdt	;clear the watchdog before getting into this loop
   512  0774                     clrloop0:	
   513  0774  0180               	clrf	0	;clear RAM location pointed to by FSR
   514  0775  0A84               	incf	4,f	;increment pointer
   515  0776  0604               	xorwf	4,w	;XOR with final address
   516  0777  1903               	btfsc	3,2	;have we reached the end yet?
   517  0778  3400               	retlw	0	;all done for this memory range, return
   518  0779  0604               	xorwf	4,w	;XOR again to restore value
   519  077A  2F74               	goto	clrloop0	;do the next byte
   520                           
   521                           	psect	cstackBANK1
   522  00A0                     __pcstackBANK1:	
   523  00A0                     dht11_task@eResult:	
   524                           
   525                           ; 1 bytes @ 0x0
   526  00A0                     	ds	1
   527  00A1                     dht11_task@tb:	
   528                           
   529                           ; 1 bytes @ 0x1
   530  00A1                     	ds	1
   531  00A2                     dht11_task@hb:	
   532                           
   533                           ; 1 bytes @ 0x2
   534  00A2                     	ds	1
   535                           
   536                           	psect	cstackCOMMON
   537  0070                     __pcstackCOMMON:	
   538  0070                     ?_tick_init:	
   539  0070                     ?_dhtlib_init:	
   540                           ; 0 bytes @ 0x0
   541                           
   542  0070                     ?_lcd_on:	
   543                           ; 0 bytes @ 0x0
   544                           
   545  0070                     ?_led_task:	
   546                           ; 0 bytes @ 0x0
   547                           
   548  0070                     ?_dht11_task:	
   549                           ; 0 bytes @ 0x0
   550                           
   551  0070                     ?_tick_update:	
   552                           ; 0 bytes @ 0x0
   553                           
   554  0070                     ??_tick_update:	
   555                           ; 0 bytes @ 0x0
   556                           
   557  0070                     ?_dhtlib_start:	
   558                           ; 0 bytes @ 0x0
   559                           
   560  0070                     ?_tick_read_internal:	
   561                           ; 0 bytes @ 0x0
   562                           
   563  0070                     ?_lcd_iowrite4:	
   564                           ; 0 bytes @ 0x0
   565                           
   566  0070                     ?_lcd_iowrite8:	
   567                           ; 0 bytes @ 0x0
   568                           
   569  0070                     ?_isdigit:	
   570                           ; 0 bytes @ 0x0
   571                           
   572  0070                     ?_main:	
   573                           ; 1 bit 
   574                           
   575  0070                     ?_isr:	
   576                           ; 0 bytes @ 0x0
   577                           
   578  0070                     ??_isr:	
   579                           ; 0 bytes @ 0x0
   580                           
   581  0070                     ?_lcd_ioinit:	
   582                           ; 0 bytes @ 0x0
   583                           
   584  0070                     ?_dhtlib_read:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     lcd_ioinit@iodata:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     lcd_iowrite8@data:	
   591                           ; 1 bytes @ 0x0
   592                           
   593                           
   594                           ; 1 bytes @ 0x0
   595  0070                     	ds	4
   596  0074                     ??_tick_init:	
   597  0074                     ??_dhtlib_init:	
   598                           ; 0 bytes @ 0x4
   599                           
   600  0074                     ??_dhtlib_start:	
   601                           ; 0 bytes @ 0x4
   602                           
   603  0074                     ??_tick_read_internal:	
   604                           ; 0 bytes @ 0x4
   605                           
   606  0074                     ?_lcd_ioset:	
   607                           ; 0 bytes @ 0x4
   608                           
   609  0074                     ??_lcd_iowrite8:	
   610                           ; 0 bytes @ 0x4
   611                           
   612  0074                     ??_isdigit:	
   613                           ; 0 bytes @ 0x4
   614                           
   615  0074                     ??___lwdiv:	
   616                           ; 0 bytes @ 0x4
   617                           
   618  0074                     ??___wmul:	
   619                           ; 0 bytes @ 0x4
   620                           
   621  0074                     lcd_ioset@out:	
   622                           ; 0 bytes @ 0x4
   623                           
   624  0074                     _isdigit$715:	
   625                           ; 1 bytes @ 0x4
   626                           
   627  0074                     ___wmul@product:	
   628                           ; 1 bytes @ 0x4
   629                           
   630                           
   631                           ; 2 bytes @ 0x4
   632  0074                     	ds	1
   633  0075                     ??_tick_get:	
   634  0075                     ??_lcd_ioset:	
   635                           ; 0 bytes @ 0x5
   636                           
   637  0075                     ??___lwmod:	
   638                           ; 0 bytes @ 0x5
   639                           
   640  0075                     lcd_ioset@pin:	
   641                           ; 0 bytes @ 0x5
   642                           
   643  0075                     isdigit@c:	
   644                           ; 1 bytes @ 0x5
   645                           
   646                           
   647                           ; 1 bytes @ 0x5
   648  0075                     	ds	1
   649  0076                     ??_lcd_puts:	
   650                           
   651                           	psect	cstackBANK0
   652  0048                     __pcstackBANK0:	
   653                           ; 0 bytes @ 0x6
   654                           
   655  0048                     ??_lcd_ioinit:	
   656  0048                     ??_lcd_iowrite4:	
   657                           ; 0 bytes @ 0x0
   658                           
   659  0048                     ??_dhtlib_read:	
   660                           ; 0 bytes @ 0x0
   661                           
   662  0048                     ?___lwdiv:	
   663                           ; 0 bytes @ 0x0
   664                           
   665  0048                     ?___wmul:	
   666                           ; 2 bytes @ 0x0
   667                           
   668  0048                     ?_tick_get:	
   669                           ; 2 bytes @ 0x0
   670                           
   671  0048                     ___lwdiv@divisor:	
   672                           ; 4 bytes @ 0x0
   673                           
   674  0048                     ___wmul@multiplier:	
   675                           ; 2 bytes @ 0x0
   676                           
   677                           
   678                           ; 2 bytes @ 0x0
   679  0048                     	ds	1
   680  0049                     lcd_ioinit@i:	
   681                           
   682                           ; 1 bytes @ 0x1
   683  0049                     	ds	1
   684  004A                     dhtlib_read@aindex:	
   685  004A                     lcd_iowrite4@data:	
   686                           ; 1 bytes @ 0x2
   687                           
   688  004A                     ___lwdiv@dividend:	
   689                           ; 1 bytes @ 0x2
   690                           
   691  004A                     ___wmul@multiplicand:	
   692                           ; 2 bytes @ 0x2
   693                           
   694                           
   695                           ; 2 bytes @ 0x2
   696  004A                     	ds	1
   697  004B                     dhtlib_read@bcount:	
   698  004B                     lcd_iowrite4@i:	
   699                           ; 1 bytes @ 0x3
   700                           
   701                           
   702                           ; 1 bytes @ 0x3
   703  004B                     	ds	1
   704  004C                     ??_led_task:	
   705  004C                     ?_lcd_send:	
   706                           ; 0 bytes @ 0x4
   707                           
   708  004C                     dhtlib_read@tocounter:	
   709                           ; 0 bytes @ 0x4
   710                           
   711  004C                     lcd_send@rs:	
   712                           ; 1 bytes @ 0x4
   713                           
   714  004C                     ___lwdiv@counter:	
   715                           ; 1 bytes @ 0x4
   716                           
   717                           
   718                           ; 1 bytes @ 0x4
   719  004C                     	ds	1
   720  004D                     ??_lcd_send:	
   721  004D                     dhtlib_read@i:	
   722                           ; 0 bytes @ 0x5
   723                           
   724  004D                     ___lwdiv@quotient:	
   725                           ; 1 bytes @ 0x5
   726                           
   727                           
   728                           ; 2 bytes @ 0x5
   729  004D                     	ds	1
   730  004E                     ?_dhtlib_read11:	
   731  004E                     dhtlib_read11@hum:	
   732                           ; 1 bytes @ 0x6
   733                           
   734  004E                     lcd_send@data:	
   735                           ; 1 bytes @ 0x6
   736                           
   737                           
   738                           ; 1 bytes @ 0x6
   739  004E                     	ds	1
   740  004F                     ??_lcd_on:	
   741  004F                     ?_lcd_puts:	
   742                           ; 0 bytes @ 0x7
   743                           
   744  004F                     ?_lcd_goto:	
   745                           ; 0 bytes @ 0x7
   746                           
   747  004F                     ??_dhtlib_read11:	
   748                           ; 0 bytes @ 0x7
   749                           
   750  004F                     ?_lcd_init:	
   751                           ; 0 bytes @ 0x7
   752                           
   753  004F                     ?___lwmod:	
   754                           ; 1 bytes @ 0x7
   755                           
   756  004F                     lcd_init@cols:	
   757                           ; 2 bytes @ 0x7
   758                           
   759  004F                     lcd_goto@row:	
   760                           ; 1 bytes @ 0x7
   761                           
   762  004F                     lcd_puts@string:	
   763                           ; 1 bytes @ 0x7
   764                           
   765  004F                     ___lwmod@divisor:	
   766                           ; 2 bytes @ 0x7
   767                           
   768                           
   769                           ; 2 bytes @ 0x7
   770  004F                     	ds	1
   771  0050                     ??_lcd_goto:	
   772  0050                     lcd_init@rows:	
   773                           ; 0 bytes @ 0x8
   774                           
   775                           
   776                           ; 1 bytes @ 0x8
   777  0050                     	ds	1
   778  0051                     ??_lcd_init:	
   779  0051                     lcd_goto@col:	
   780                           ; 0 bytes @ 0x9
   781                           
   782  0051                     ___lwmod@dividend:	
   783                           ; 1 bytes @ 0x9
   784                           
   785                           
   786                           ; 2 bytes @ 0x9
   787  0051                     	ds	1
   788  0052                     dhtlib_read11@temp:	
   789                           
   790                           ; 1 bytes @ 0xA
   791  0052                     	ds	1
   792  0053                     dhtlib_read11@chksum:	
   793  0053                     lcd_init@iodata:	
   794                           ; 1 bytes @ 0xB
   795                           
   796  0053                     ___lwmod@counter:	
   797                           ; 1 bytes @ 0xB
   798                           
   799                           
   800                           ; 1 bytes @ 0xB
   801  0053                     	ds	1
   802  0054                     ?_sprintf:	
   803  0054                     dhtlib_read11@s:	
   804                           ; 2 bytes @ 0xC
   805                           
   806  0054                     sprintf@f:	
   807                           ; 1 bytes @ 0xC
   808                           
   809                           
   810                           ; 1 bytes @ 0xC
   811  0054                     	ds	5
   812  0059                     ??_sprintf:	
   813                           
   814                           ; 0 bytes @ 0x11
   815  0059                     	ds	3
   816  005C                     sprintf@ap:	
   817                           
   818                           ; 1 bytes @ 0x14
   819  005C                     	ds	1
   820  005D                     sprintf@prec:	
   821                           
   822                           ; 1 bytes @ 0x15
   823  005D                     	ds	1
   824  005E                     sprintf@flag:	
   825                           
   826                           ; 1 bytes @ 0x16
   827  005E                     	ds	1
   828  005F                     sprintf@sp:	
   829                           
   830                           ; 1 bytes @ 0x17
   831  005F                     	ds	1
   832  0060                     sprintf@width:	
   833                           
   834                           ; 2 bytes @ 0x18
   835  0060                     	ds	2
   836  0062                     sprintf@_val:	
   837                           
   838                           ; 3 bytes @ 0x1A
   839  0062                     	ds	3
   840  0065                     sprintf@c:	
   841                           
   842                           ; 1 bytes @ 0x1D
   843  0065                     	ds	1
   844  0066                     ??_dht11_task:	
   845                           
   846                           ; 0 bytes @ 0x1E
   847  0066                     	ds	5
   848  006B                     ??_main:	
   849                           
   850                           ; 0 bytes @ 0x23
   851  006B                     	ds	2
   852                           
   853                           	psect	maintext
   854  061B                     __pmaintext:	
   855 ;;
   856 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   857 ;;
   858 ;; *************** function _main *****************
   859 ;; Defined at:
   860 ;;		line 40 in file "main.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;		None
   863 ;; Auto vars:     Size  Location     Type
   864 ;;		None
   865 ;; Return value:  Size  Location     Type
   866 ;;		None               void
   867 ;; Registers used:
   868 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   869 ;; Tracked objects:
   870 ;;		On entry : 17F/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   874 ;;      Params:         0       0       0       0       0
   875 ;;      Locals:         0       0       0       0       0
   876 ;;      Temps:          0       2       0       0       0
   877 ;;      Totals:         0       2       0       0       0
   878 ;;Total ram usage:        2 bytes
   879 ;; Hardware stack levels required when called:    7
   880 ;; This function calls:
   881 ;;		_lcd_init
   882 ;;		_tick_init
   883 ;;		_dhtlib_init
   884 ;;		_lcd_on
   885 ;;		_lcd_puts
   886 ;;		_led_task
   887 ;;		_dht11_task
   888 ;; This function is called by:
   889 ;;		Startup code after reset
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893                           
   894                           ;psect for function _main
   895  061B                     _main:	
   896                           
   897                           ;main.c: 42: OSCCON = 0x7C;
   898                           
   899                           ;incstack = 0
   900                           ; Regs used in _main: [allreg]
   901  061B  307C               	movlw	124
   902  061C  1683               	bsf	3,5	;RP0=1, select bank1
   903  061D  1303               	bcf	3,6	;RP1=0, select bank1
   904  061E  008F               	movwf	15	;volatile
   905                           
   906                           ;main.c: 43: ANSEL = 0x00;
   907  061F  019B               	clrf	27	;volatile
   908                           
   909                           ;main.c: 46: lcd_init(0, 16, 2);
   910  0620  3010               	movlw	16
   911  0621  1283               	bcf	3,5	;RP0=0, select bank0
   912  0622  1303               	bcf	3,6	;RP1=0, select bank0
   913  0623  00EB               	movwf	??_main
   914  0624  086B               	movf	??_main,w
   915  0625  00CF               	movwf	?_lcd_init
   916  0626  3002               	movlw	2
   917  0627  00EC               	movwf	??_main+1
   918  0628  086C               	movf	??_main+1,w
   919  0629  00D0               	movwf	?_lcd_init+1
   920  062A  3000               	movlw	0
   921  062B  118A  2216  118A   	fcall	_lcd_init
   922                           
   923                           ;main.c: 47: tick_init();
   924  062E  118A  2745  118A   	fcall	_tick_init
   925                           
   926                           ;main.c: 48: dhtlib_init();
   927  0631  118A  277B  118A   	fcall	_dhtlib_init
   928                           
   929                           ;main.c: 51: lcd_on();
   930  0634  118A  2734  118A   	fcall	_lcd_on
   931                           
   932                           ;main.c: 53: lcd_puts("  PRUEBA DHT11  ");
   933  0637  303C               	movlw	low (STR_1-__stringbase)
   934  0638  1283               	bcf	3,5	;RP0=0, select bank0
   935  0639  1303               	bcf	3,6	;RP1=0, select bank0
   936  063A  00CF               	movwf	?_lcd_puts
   937  063B  3080               	movlw	128
   938  063C  00D0               	movwf	?_lcd_puts+1
   939  063D  118A  26B0  118A   	fcall	_lcd_puts
   940  0640                     l2349:	
   941                           ;main.c: 57: for (;;) {
   942                           
   943                           
   944                           ;main.c: 58: led_task();
   945  0640  118A  24BE  118A   	fcall	_led_task
   946                           
   947                           ;main.c: 59: dht11_task();
   948  0643  118A  22E5  118A   	fcall	_dht11_task
   949                           
   950                           ;main.c: 60: }
   951  0646  2E40               	goto	l2349
   952  0647                     __end_of_main:	
   953                           
   954                           	psect	text1
   955  02E5                     __ptext1:	
   956 ;; *************** function _dht11_task *****************
   957 ;; Defined at:
   958 ;;		line 67 in file "main.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;		None
   961 ;; Auto vars:     Size  Location     Type
   962 ;;  eResult         1    0[BANK1 ] enum E1128
   963 ;;  hb              1    2[BANK1 ] unsigned char 
   964 ;;  tb              1    1[BANK1 ] unsigned char 
   965 ;; Return value:  Size  Location     Type
   966 ;;		None               void
   967 ;; Registers used:
   968 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   974 ;;      Params:         0       0       0       0       0
   975 ;;      Locals:         0       0       3       0       0
   976 ;;      Temps:          0       5       0       0       0
   977 ;;      Totals:         0       5       3       0       0
   978 ;;Total ram usage:        8 bytes
   979 ;; Hardware stack levels used:    1
   980 ;; Hardware stack levels required when called:    6
   981 ;; This function calls:
   982 ;;		_lcd_puts
   983 ;;		_tick_get
   984 ;;		_lcd_goto
   985 ;;		_dhtlib_read11
   986 ;;		_sprintf
   987 ;; This function is called by:
   988 ;;		_main
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           
   993                           ;psect for function _dht11_task
   994  02E5                     _dht11_task:	
   995                           
   996                           ;main.c: 68: static unsigned long ltick = 0;
   997                           ;main.c: 70: uint8_t tb = 0, hb = 0;
   998                           
   999                           ;incstack = 0
  1000                           ; Regs used in _dht11_task: [allreg]
  1001  02E5  1683               	bsf	3,5	;RP0=1, select bank1
  1002  02E6  1303               	bcf	3,6	;RP1=0, select bank1
  1003  02E7  01A1               	clrf	dht11_task@tb^(0+128)
  1004  02E8  01A2               	clrf	dht11_task@hb^(0+128)
  1005                           
  1006                           ;main.c: 73: if (tick_get() - ltick >= ((unsigned long long)((2000000 + 128ull)/8ull)) *
      +                           5) {
  1007  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  1008  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  1009  02EB  092B               	comf	dht11_task@ltick,w
  1010  02EC  00E6               	movwf	??_dht11_task
  1011  02ED  092C               	comf	dht11_task@ltick+1,w
  1012  02EE  00E7               	movwf	??_dht11_task+1
  1013  02EF  092D               	comf	dht11_task@ltick+2,w
  1014  02F0  00E8               	movwf	??_dht11_task+2
  1015  02F1  092E               	comf	dht11_task@ltick+3,w
  1016  02F2  00E9               	movwf	??_dht11_task+3
  1017  02F3  0AE6               	incf	??_dht11_task,f
  1018  02F4  1903               	skipnz
  1019  02F5  0AE7               	incf	??_dht11_task+1,f
  1020  02F6  1903               	skipnz
  1021  02F7  0AE8               	incf	??_dht11_task+2,f
  1022  02F8  1903               	skipnz
  1023  02F9  0AE9               	incf	??_dht11_task+3,f
  1024  02FA  118A  2721  118A   	fcall	_tick_get
  1025  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  1026  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  1027  02FF  0848               	movf	?_tick_get,w
  1028  0300  07E6               	addwf	??_dht11_task,f
  1029  0301  0849               	movf	?_tick_get+1,w
  1030  0302  1803               	skipnc
  1031  0303  0F49               	incfsz	?_tick_get+1,w
  1032  0304  2B06               	goto	u2030
  1033  0305  2B07               	goto	u2031
  1034  0306                     u2030:	
  1035  0306  07E7               	addwf	??_dht11_task+1,f
  1036  0307                     u2031:	
  1037  0307  084A               	movf	?_tick_get+2,w
  1038  0308  1803               	skipnc
  1039  0309  0F4A               	incfsz	?_tick_get+2,w
  1040  030A  2B0C               	goto	u2032
  1041  030B  2B0D               	goto	u2033
  1042  030C                     u2032:	
  1043  030C  07E8               	addwf	??_dht11_task+2,f
  1044  030D                     u2033:	
  1045  030D  084B               	movf	?_tick_get+3,w
  1046  030E  1803               	skipnc
  1047  030F  0A4B               	incf	?_tick_get+3,w
  1048  0310  07E9               	addwf	??_dht11_task+3,f
  1049  0311  3000               	movlw	0
  1050  0312  0269               	subwf	??_dht11_task+3,w
  1051  0313  1D03               	skipz
  1052  0314  2B1F               	goto	u2045
  1053  0315  3013               	movlw	19
  1054  0316  0268               	subwf	??_dht11_task+2,w
  1055  0317  1D03               	skipz
  1056  0318  2B1F               	goto	u2045
  1057  0319  3013               	movlw	19
  1058  031A  0267               	subwf	??_dht11_task+1,w
  1059  031B  1D03               	skipz
  1060  031C  2B1F               	goto	u2045
  1061  031D  3020               	movlw	32
  1062  031E  0266               	subwf	??_dht11_task,w
  1063  031F                     u2045:	
  1064  031F  1C03               	skipc
  1065  0320  0008               	return
  1066                           
  1067                           ;main.c: 75: ltick = tick_get();
  1068  0321  118A  2721  118A   	fcall	_tick_get
  1069  0324  1283               	bcf	3,5	;RP0=0, select bank0
  1070  0325  1303               	bcf	3,6	;RP1=0, select bank0
  1071  0326  084B               	movf	?_tick_get+3,w
  1072  0327  00AE               	movwf	dht11_task@ltick+3
  1073  0328  084A               	movf	?_tick_get+2,w
  1074  0329  00AD               	movwf	dht11_task@ltick+2
  1075  032A  0849               	movf	?_tick_get+1,w
  1076  032B  00AC               	movwf	dht11_task@ltick+1
  1077  032C  0848               	movf	?_tick_get,w
  1078  032D  00AB               	movwf	dht11_task@ltick
  1079                           
  1080                           ;main.c: 77: lcd_goto(0, 1);
  1081  032E  01CF               	clrf	?_lcd_goto
  1082  032F  0ACF               	incf	?_lcd_goto,f
  1083  0330  3000               	movlw	0
  1084  0331  118A  268F  118A   	fcall	_lcd_goto
  1085                           
  1086                           ;main.c: 79: enum dhtlib_status eResult = dhtlib_read11(&tb, &hb);
  1087  0334  30A2               	movlw	dht11_task@hb& (0+255)
  1088  0335  1283               	bcf	3,5	;RP0=0, select bank0
  1089  0336  1303               	bcf	3,6	;RP1=0, select bank0
  1090  0337  00E6               	movwf	??_dht11_task
  1091  0338  0866               	movf	??_dht11_task,w
  1092  0339  00CE               	movwf	?_dhtlib_read11
  1093  033A  30A1               	movlw	dht11_task@tb& (0+255)
  1094  033B  118A  25EB  118A   	fcall	_dhtlib_read11
  1095  033E  1283               	bcf	3,5	;RP0=0, select bank0
  1096  033F  1303               	bcf	3,6	;RP1=0, select bank0
  1097  0340  00E7               	movwf	??_dht11_task+1
  1098  0341  0867               	movf	??_dht11_task+1,w
  1099  0342  1683               	bsf	3,5	;RP0=1, select bank1
  1100  0343  1303               	bcf	3,6	;RP1=0, select bank1
  1101  0344  00A0               	movwf	dht11_task@eResult^(0+128)
  1102                           
  1103                           ;main.c: 80: if (eResult == E_DHTLIB_OK)
  1104  0345  08A0               	movf	dht11_task@eResult^(0+128),f
  1105  0346  1D03               	skipz
  1106  0347  2B65               	goto	l2435
  1107                           
  1108                           ;main.c: 81: sprintf(buf, "T: %02d C H: %02d%%  ", tb, hb);
  1109  0348  3026               	movlw	(STR_2-__stringbase)& (0+255)
  1110  0349  1283               	bcf	3,5	;RP0=0, select bank0
  1111  034A  1303               	bcf	3,6	;RP1=0, select bank0
  1112  034B  00E6               	movwf	??_dht11_task
  1113  034C  0866               	movf	??_dht11_task,w
  1114  034D  00D4               	movwf	?_sprintf
  1115  034E  1683               	bsf	3,5	;RP0=1, select bank1
  1116  034F  1303               	bcf	3,6	;RP1=0, select bank1
  1117  0350  0821               	movf	dht11_task@tb^(0+128),w
  1118  0351  1283               	bcf	3,5	;RP0=0, select bank0
  1119  0352  1303               	bcf	3,6	;RP1=0, select bank0
  1120  0353  00E7               	movwf	??_dht11_task+1
  1121  0354  01E8               	clrf	??_dht11_task+2
  1122  0355  0867               	movf	??_dht11_task+1,w
  1123  0356  00D5               	movwf	?_sprintf+1
  1124  0357  0868               	movf	??_dht11_task+2,w
  1125  0358  00D6               	movwf	?_sprintf+2
  1126  0359  1683               	bsf	3,5	;RP0=1, select bank1
  1127  035A  1303               	bcf	3,6	;RP1=0, select bank1
  1128  035B  0822               	movf	dht11_task@hb^(0+128),w
  1129  035C  1283               	bcf	3,5	;RP0=0, select bank0
  1130  035D  1303               	bcf	3,6	;RP1=0, select bank0
  1131  035E  00E9               	movwf	??_dht11_task+3
  1132  035F  01EA               	clrf	??_dht11_task+4
  1133  0360  0869               	movf	??_dht11_task+3,w
  1134  0361  00D7               	movwf	?_sprintf+3
  1135  0362  086A               	movf	??_dht11_task+4,w
  1136  0363  00D8               	movwf	?_sprintf+4
  1137  0364  2B76               	goto	L1
  1138  0365                     l2435:	
  1139                           
  1140                           ;main.c: 82: else
  1141                           ;main.c: 83: sprintf(buf, "Sensor error: %02d    ", eResult);
  1142  0365  300F               	movlw	(STR_3-__stringbase)& (0+255)
  1143  0366  1283               	bcf	3,5	;RP0=0, select bank0
  1144  0367  1303               	bcf	3,6	;RP1=0, select bank0
  1145  0368  00E6               	movwf	??_dht11_task
  1146  0369  0866               	movf	??_dht11_task,w
  1147  036A  00D4               	movwf	?_sprintf
  1148  036B  1683               	bsf	3,5	;RP0=1, select bank1
  1149  036C  1303               	bcf	3,6	;RP1=0, select bank1
  1150  036D  0820               	movf	dht11_task@eResult^(0+128),w
  1151  036E  1283               	bcf	3,5	;RP0=0, select bank0
  1152  036F  1303               	bcf	3,6	;RP1=0, select bank0
  1153  0370  00E7               	movwf	??_dht11_task+1
  1154  0371  01E8               	clrf	??_dht11_task+2
  1155  0372  0867               	movf	??_dht11_task+1,w
  1156  0373  00D5               	movwf	?_sprintf+1
  1157  0374  0868               	movf	??_dht11_task+2,w
  1158  0375  00D6               	movwf	?_sprintf+2
  1159  0376                     L1:	
  1160  0376  3034               	movlw	_buf& (0+255)
  1161  0377  118A  2028  118A   	fcall	_sprintf
  1162                           
  1163                           ;main.c: 85: lcd_puts(buf);
  1164  037A  3034               	movlw	_buf& (0+255)
  1165  037B  1283               	bcf	3,5	;RP0=0, select bank0
  1166  037C  1303               	bcf	3,6	;RP1=0, select bank0
  1167  037D  00CF               	movwf	?_lcd_puts
  1168  037E  3000               	movlw	0
  1169  037F  00D0               	movwf	?_lcd_puts+1
  1170  0380  118A  26B0         	fcall	_lcd_puts
  1171  0382  0008               	return
  1172  0383                     __end_of_dht11_task:	
  1173                           
  1174                           	psect	text2
  1175  0028                     __ptext2:	
  1176 ;; *************** function _sprintf *****************
  1177 ;; Defined at:
  1178 ;;		line 493 in file "/Applications/microchip/xc8/v1.21/sources/common/doprnt.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;  sp              1    wreg     PTR unsigned char 
  1181 ;;		 -> buf(20), 
  1182 ;;  f               1   12[BANK0 ] PTR const unsigned char 
  1183 ;;		 -> STR_3(23), STR_2(22), 
  1184 ;; Auto vars:     Size  Location     Type
  1185 ;;  sp              1   23[BANK0 ] PTR unsigned char 
  1186 ;;		 -> buf(20), 
  1187 ;;  _val            3   26[BANK0 ] struct .
  1188 ;;  width           2   24[BANK0 ] int 
  1189 ;;  c               1   29[BANK0 ] char 
  1190 ;;  flag            1   22[BANK0 ] unsigned char 
  1191 ;;  prec            1   21[BANK0 ] char 
  1192 ;;  ap              1   20[BANK0 ] PTR void [1]
  1193 ;;		 -> ?_sprintf(2), 
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  2   12[BANK0 ] int 
  1196 ;; Registers used:
  1197 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1203 ;;      Params:         0       5       0       0       0
  1204 ;;      Locals:         0      10       0       0       0
  1205 ;;      Temps:          0       3       0       0       0
  1206 ;;      Totals:         0      18       0       0       0
  1207 ;;Total ram usage:       18 bytes
  1208 ;; Hardware stack levels used:    1
  1209 ;; Hardware stack levels required when called:    3
  1210 ;; This function calls:
  1211 ;;		_isdigit
  1212 ;;		___lwdiv
  1213 ;;		___lwmod
  1214 ;;		___wmul
  1215 ;; This function is called by:
  1216 ;;		_dht11_task
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           
  1221                           ;psect for function _sprintf
  1222  0028                     _sprintf:	
  1223                           
  1224                           ;incstack = 0
  1225                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1226                           ;sprintf@sp stored from wreg
  1227  0028  1283               	bcf	3,5	;RP0=0, select bank0
  1228  0029  1303               	bcf	3,6	;RP1=0, select bank0
  1229  002A  00DF               	movwf	sprintf@sp
  1230                           
  1231                           ;doprnt.c: 494: va_list ap;
  1232                           ;doprnt.c: 499: signed char c;
  1233                           ;doprnt.c: 501: int width;
  1234                           ;doprnt.c: 506: signed char prec;
  1235                           ;doprnt.c: 508: unsigned char flag;
  1236                           ;doprnt.c: 527: union {
  1237                           ;doprnt.c: 528: unsigned int _val;
  1238                           ;doprnt.c: 529: struct {
  1239                           ;doprnt.c: 530: const char * _cp;
  1240                           ;doprnt.c: 531: unsigned _len;
  1241                           ;doprnt.c: 532: } _str;
  1242                           ;doprnt.c: 533: } _val;
  1243                           ;doprnt.c: 542: *ap = __va_start();
  1244  002B  3055               	movlw	(?_sprintf+1)& (0+255)
  1245  002C  00D9               	movwf	??_sprintf
  1246  002D  0859               	movf	??_sprintf,w
  1247  002E  00DC               	movwf	sprintf@ap
  1248  002F                     l2601:	
  1249                           ;doprnt.c: 545: while(c = *f++) {
  1250                           
  1251  002F  3001               	movlw	1
  1252  0030  07D4               	addwf	sprintf@f,f
  1253  0031  30FF               	movlw	-1
  1254  0032  0754               	addwf	sprintf@f,w
  1255  0033  0084               	movwf	4
  1256  0034  118A  2422  118A   	fcall	stringdir
  1257  0037  00D9               	movwf	??_sprintf
  1258  0038  0859               	movf	??_sprintf,w
  1259  0039  00E5               	movwf	sprintf@c
  1260  003A  08E5               	movf	sprintf@c,f
  1261  003B  1903               	btfsc	3,2
  1262  003C  2A0F               	goto	l2603
  1263                           
  1264                           ;doprnt.c: 547: if(c != '%')
  1265  003D  0865               	movf	sprintf@c,w
  1266  003E  3A25               	xorlw	37
  1267  003F  1903               	skipnz
  1268  0040  284D               	goto	l2483
  1269                           
  1270                           ;doprnt.c: 549: {
  1271                           ;doprnt.c: 550: ((*sp++ = (c)));
  1272  0041  0865               	movf	sprintf@c,w
  1273  0042  00D9               	movwf	??_sprintf
  1274  0043  085F               	movf	sprintf@sp,w
  1275  0044  0084               	movwf	4
  1276  0045  0859               	movf	??_sprintf,w
  1277  0046  1383               	bcf	3,7	;select IRP bank0
  1278  0047  0080               	movwf	0
  1279  0048  3001               	movlw	1
  1280  0049  00D9               	movwf	??_sprintf
  1281  004A  0859               	movf	??_sprintf,w
  1282  004B  07DF               	addwf	sprintf@sp,f
  1283                           
  1284                           ;doprnt.c: 551: continue;
  1285  004C  282F               	goto	l2601
  1286  004D                     l2483:	
  1287                           
  1288                           ;doprnt.c: 552: }
  1289                           ;doprnt.c: 555: width = 0;
  1290  004D  01E0               	clrf	sprintf@width
  1291  004E  01E1               	clrf	sprintf@width+1
  1292                           
  1293                           ;doprnt.c: 557: flag = 0;
  1294  004F  01DE               	clrf	sprintf@flag
  1295                           
  1296                           ;doprnt.c: 560: switch(*f) {
  1297                           
  1298                           ;doprnt.c: 559: for(;;) {
  1299  0050  2856               	goto	l2489
  1300  0051                     l289:	
  1301                           ;doprnt.c: 588: case '0':
  1302                           
  1303                           
  1304                           ;doprnt.c: 589: flag |= 0x04;
  1305  0051  155E               	bsf	sprintf@flag,2
  1306                           
  1307                           ;doprnt.c: 590: f++;
  1308  0052  3001               	movlw	1
  1309  0053  00D9               	movwf	??_sprintf
  1310  0054  0859               	movf	??_sprintf,w
  1311  0055  07D4               	addwf	sprintf@f,f
  1312  0056                     l2489:	
  1313                           ;doprnt.c: 593: }
  1314                           
  1315                           ;doprnt.c: 591: continue;
  1316                           
  1317  0056  0854               	movf	sprintf@f,w
  1318  0057  0084               	movwf	4
  1319  0058  118A  2422  118A   	fcall	stringdir
  1320                           
  1321                           ; Switch size 1, requested type "space"
  1322                           ; Number of cases is 1, Range of values is 48 to 48
  1323                           ; switch strategies available:
  1324                           ; Name         Instructions Cycles
  1325                           ; simple_byte            4     3 (average)
  1326                           ; direct_byte           12    10 (fixed)
  1327                           ; jumptable            263     9 (fixed)
  1328                           ;	Chosen strategy is simple_byte
  1329  005B  3A30               	xorlw	48	; case 48
  1330  005C  1903               	skipnz
  1331  005D  2851               	goto	l289
  1332  005E  285F               	goto	l2491
  1333  005F                     l2491:	
  1334                           ;doprnt.c: 595: }
  1335                           
  1336                           ;doprnt.c: 594: break;
  1337                           
  1338                           
  1339                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  1340  005F  0854               	movf	sprintf@f,w
  1341  0060  0084               	movwf	4
  1342  0061  118A  2422  118A   	fcall	stringdir
  1343  0064  118A  2765  118A   	fcall	_isdigit
  1344  0067  1C03               	btfss	3,0
  1345  0068  28FA               	goto	l2527
  1346                           
  1347                           ;doprnt.c: 607: width = 0;
  1348  0069  1283               	bcf	3,5	;RP0=0, select bank0
  1349  006A  1303               	bcf	3,6	;RP1=0, select bank0
  1350  006B  01E0               	clrf	sprintf@width
  1351  006C  01E1               	clrf	sprintf@width+1
  1352  006D                     l2495:	
  1353                           ;doprnt.c: 608: do {
  1354                           
  1355                           
  1356                           ;doprnt.c: 609: width *= 10;
  1357  006D  300A               	movlw	10
  1358  006E  1283               	bcf	3,5	;RP0=0, select bank0
  1359  006F  1303               	bcf	3,6	;RP1=0, select bank0
  1360  0070  00C8               	movwf	?___wmul
  1361  0071  3000               	movlw	0
  1362  0072  00C9               	movwf	?___wmul+1
  1363  0073  0861               	movf	sprintf@width+1,w
  1364  0074  01CB               	clrf	?___wmul+3
  1365  0075  07CB               	addwf	?___wmul+3,f
  1366  0076  0860               	movf	sprintf@width,w
  1367  0077  01CA               	clrf	?___wmul+2
  1368  0078  07CA               	addwf	?___wmul+2,f
  1369  0079  118A  2647  118A   	fcall	___wmul
  1370  007C  1283               	bcf	3,5	;RP0=0, select bank0
  1371  007D  1303               	bcf	3,6	;RP1=0, select bank0
  1372  007E  0849               	movf	?___wmul+1,w
  1373  007F  01E1               	clrf	sprintf@width+1
  1374  0080  07E1               	addwf	sprintf@width+1,f
  1375  0081  0848               	movf	?___wmul,w
  1376  0082  01E0               	clrf	sprintf@width
  1377  0083  07E0               	addwf	sprintf@width,f
  1378                           
  1379                           ;doprnt.c: 610: width += *f++ - '0';
  1380  0084  0854               	movf	sprintf@f,w
  1381  0085  0084               	movwf	4
  1382  0086  118A  2422  118A   	fcall	stringdir
  1383  0089  3ED0               	addlw	208
  1384  008A  00D9               	movwf	??_sprintf
  1385  008B  30FF               	movlw	255
  1386  008C  1803               	skipnc
  1387  008D  3000               	movlw	0
  1388  008E  00DA               	movwf	??_sprintf+1
  1389  008F  0859               	movf	??_sprintf,w
  1390  0090  07E0               	addwf	sprintf@width,f
  1391  0091  1803               	skipnc
  1392  0092  0AE1               	incf	sprintf@width+1,f
  1393  0093  085A               	movf	??_sprintf+1,w
  1394  0094  07E1               	addwf	sprintf@width+1,f
  1395  0095  3001               	movlw	1
  1396  0096  00D9               	movwf	??_sprintf
  1397  0097  0859               	movf	??_sprintf,w
  1398  0098  07D4               	addwf	sprintf@f,f
  1399                           
  1400                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  1401  0099  0854               	movf	sprintf@f,w
  1402  009A  0084               	movwf	4
  1403  009B  118A  2422  118A   	fcall	stringdir
  1404  009E  118A  2765  118A   	fcall	_isdigit
  1405  00A1  1C03               	btfss	3,0
  1406  00A2  28FA               	goto	l2527
  1407  00A3  286D               	goto	l2495
  1408  00A4                     l2503:	
  1409                           ;doprnt.c: 759: dostring:
  1410                           
  1411                           ;doprnt.c: 707: case 'i':
  1412                           ;doprnt.c: 708: break;
  1413                           
  1414                           ;doprnt.c: 706: case 'd':
  1415                           
  1416                           ;doprnt.c: 647: goto alldone;
  1417                           
  1418                           ;doprnt.c: 646: case 0:
  1419                           
  1420                           ;doprnt.c: 617: }
  1421                           ;doprnt.c: 644: switch(c = *f++) {
  1422                           
  1423                           
  1424                           ;doprnt.c: 766: if(width > _val._str._len)
  1425  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  1426  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  1427  00A6  0861               	movf	sprintf@width+1,w
  1428  00A7  0264               	subwf	sprintf@_val+2,w
  1429  00A8  1D03               	skipz
  1430  00A9  28AC               	goto	u2135
  1431  00AA  0860               	movf	sprintf@width,w
  1432  00AB  0263               	subwf	sprintf@_val+1,w
  1433  00AC                     u2135:	
  1434  00AC  1803               	skipnc
  1435  00AD  28B5               	goto	l2507
  1436                           
  1437                           ;doprnt.c: 767: width -= _val._str._len;
  1438  00AE  0863               	movf	sprintf@_val+1,w
  1439  00AF  02E0               	subwf	sprintf@width,f
  1440  00B0  0864               	movf	sprintf@_val+2,w
  1441  00B1  1C03               	skipc
  1442  00B2  03E1               	decf	sprintf@width+1,f
  1443  00B3  02E1               	subwf	sprintf@width+1,f
  1444  00B4  28B7               	goto	l2513
  1445  00B5                     l2507:	
  1446                           
  1447                           ;doprnt.c: 768: else
  1448                           ;doprnt.c: 769: width = 0;
  1449  00B5  01E0               	clrf	sprintf@width
  1450  00B6  01E1               	clrf	sprintf@width+1
  1451  00B7                     l2513:	
  1452                           ;doprnt.c: 773: while(width--)
  1453                           
  1454  00B7  30FF               	movlw	255
  1455  00B8  07E0               	addwf	sprintf@width,f
  1456  00B9  1803               	skipnc
  1457  00BA  0AE1               	incf	sprintf@width+1,f
  1458  00BB  30FF               	movlw	255
  1459  00BC  07E1               	addwf	sprintf@width+1,f
  1460  00BD  30FF               	movlw	255
  1461  00BE  0661               	xorwf	sprintf@width+1,w
  1462  00BF  1D03               	skipz
  1463  00C0  28C3               	goto	u2145
  1464  00C1  30FF               	movlw	255
  1465  00C2  0660               	xorwf	sprintf@width,w
  1466  00C3                     u2145:	
  1467  00C3  1903               	btfsc	3,2
  1468  00C4  28E2               	goto	l2521
  1469                           
  1470                           ;doprnt.c: 774: ((*sp++ = (' ')));
  1471  00C5  3020               	movlw	32
  1472  00C6  00D9               	movwf	??_sprintf
  1473  00C7  085F               	movf	sprintf@sp,w
  1474  00C8  0084               	movwf	4
  1475  00C9  0859               	movf	??_sprintf,w
  1476  00CA  1383               	bcf	3,7	;select IRP bank0
  1477  00CB  0080               	movwf	0
  1478  00CC  3001               	movlw	1
  1479  00CD  00D9               	movwf	??_sprintf
  1480  00CE  0859               	movf	??_sprintf,w
  1481  00CF  07DF               	addwf	sprintf@sp,f
  1482  00D0  28B7               	goto	l2513
  1483  00D1                     l2515:	
  1484                           ;doprnt.c: 776: while(_val._str._len--)
  1485                           
  1486                           
  1487                           ;doprnt.c: 777: ((*sp++ = (*_val._str._cp++)));
  1488  00D1  0862               	movf	sprintf@_val,w
  1489  00D2  0084               	movwf	4
  1490  00D3  1383               	bcf	3,7	;select IRP bank0
  1491  00D4  0800               	movf	0,w
  1492  00D5  00D9               	movwf	??_sprintf
  1493  00D6  085F               	movf	sprintf@sp,w
  1494  00D7  0084               	movwf	4
  1495  00D8  0859               	movf	??_sprintf,w
  1496  00D9  0080               	movwf	0
  1497  00DA  3001               	movlw	1
  1498  00DB  00D9               	movwf	??_sprintf
  1499  00DC  0859               	movf	??_sprintf,w
  1500  00DD  07E2               	addwf	sprintf@_val,f
  1501  00DE  3001               	movlw	1
  1502  00DF  00D9               	movwf	??_sprintf
  1503  00E0  0859               	movf	??_sprintf,w
  1504  00E1  07DF               	addwf	sprintf@sp,f
  1505  00E2                     l2521:	
  1506  00E2  3001               	movlw	1
  1507  00E3  02E3               	subwf	sprintf@_val+1,f
  1508  00E4  3000               	movlw	0
  1509  00E5  1C03               	skipc
  1510  00E6  03E4               	decf	sprintf@_val+2,f
  1511  00E7  02E4               	subwf	sprintf@_val+2,f
  1512  00E8  30FF               	movlw	255
  1513  00E9  0664               	xorwf	sprintf@_val+2,w
  1514  00EA  1D03               	skipz
  1515  00EB  28EE               	goto	u2155
  1516  00EC  30FF               	movlw	255
  1517  00ED  0663               	xorwf	sprintf@_val+1,w
  1518  00EE                     u2155:	
  1519  00EE  1903               	btfsc	3,2
  1520  00EF  282F               	goto	l2601
  1521  00F0  28D1               	goto	l2515
  1522  00F1                     l2523:	
  1523                           ;doprnt.c: 811: default:
  1524                           
  1525                           ;doprnt.c: 783: continue;
  1526                           
  1527                           
  1528                           ;doprnt.c: 814: _val._str._cp = (char *)&c;
  1529  00F1  3065               	movlw	sprintf@c& (0+255)
  1530  00F2  00D9               	movwf	??_sprintf
  1531  00F3  0859               	movf	??_sprintf,w
  1532  00F4  00E2               	movwf	sprintf@_val
  1533                           
  1534                           ;doprnt.c: 815: _val._str._len = 1;
  1535  00F5  3001               	movlw	1
  1536  00F6  00E3               	movwf	sprintf@_val+1
  1537  00F7  3000               	movlw	0
  1538  00F8  00E4               	movwf	sprintf@_val+2
  1539                           
  1540                           ;doprnt.c: 816: goto dostring;
  1541  00F9  28A4               	goto	l2503
  1542  00FA                     l2527:	
  1543                           ;doprnt.c: 831: }
  1544                           
  1545  00FA  3001               	movlw	1
  1546  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1547  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1548  00FD  07D4               	addwf	sprintf@f,f
  1549  00FE  30FF               	movlw	-1
  1550  00FF  0754               	addwf	sprintf@f,w
  1551  0100  0084               	movwf	4
  1552  0101  118A  2422  118A   	fcall	stringdir
  1553  0104  00E5               	movwf	sprintf@c
  1554                           
  1555                           ; Switch size 1, requested type "space"
  1556                           ; Number of cases is 3, Range of values is 0 to 105
  1557                           ; switch strategies available:
  1558                           ; Name         Instructions Cycles
  1559                           ; simple_byte           10     6 (average)
  1560                           ; direct_byte          219     7 (fixed)
  1561                           ; jumptable            260     6 (fixed)
  1562                           ;	Chosen strategy is simple_byte
  1563  0105  3A00               	xorlw	0	; case 0
  1564  0106  1903               	skipnz
  1565  0107  2A0F               	goto	l2603
  1566  0108  3A64               	xorlw	100	; case 100
  1567  0109  1903               	skipnz
  1568  010A  290F               	goto	l2529
  1569  010B  3A0D               	xorlw	13	; case 105
  1570  010C  1903               	skipnz
  1571  010D  290F               	goto	l2529
  1572  010E  28F1               	goto	l2523
  1573  010F                     l2529:	
  1574                           
  1575                           ;doprnt.c: 1260: {
  1576                           ;doprnt.c: 1266: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1577  010F  1283               	bcf	3,5	;RP0=0, select bank0
  1578  0110  1303               	bcf	3,6	;RP1=0, select bank0
  1579  0111  085C               	movf	sprintf@ap,w
  1580  0112  0084               	movwf	4
  1581  0113  1383               	bcf	3,7	;select IRP bank0
  1582  0114  0800               	movf	0,w
  1583  0115  00E2               	movwf	sprintf@_val
  1584  0116  0A84               	incf	4,f
  1585  0117  0800               	movf	0,w
  1586  0118  00E3               	movwf	sprintf@_val+1
  1587  0119  3002               	movlw	2
  1588  011A  00D9               	movwf	??_sprintf
  1589  011B  0859               	movf	??_sprintf,w
  1590  011C  07DC               	addwf	sprintf@ap,f
  1591                           
  1592                           ;doprnt.c: 1268: if((int)_val._val < 0) {
  1593  011D  1FE3               	btfss	sprintf@_val+1,7
  1594  011E  2928               	goto	l2539
  1595                           
  1596                           ;doprnt.c: 1269: flag |= 0x03;
  1597  011F  3003               	movlw	3
  1598  0120  00D9               	movwf	??_sprintf
  1599  0121  0859               	movf	??_sprintf,w
  1600  0122  04DE               	iorwf	sprintf@flag,f
  1601                           
  1602                           ;doprnt.c: 1270: _val._val = -_val._val;
  1603  0123  09E2               	comf	sprintf@_val,f
  1604  0124  09E3               	comf	sprintf@_val+1,f
  1605  0125  0AE2               	incf	sprintf@_val,f
  1606  0126  1903               	skipnz
  1607  0127  0AE3               	incf	sprintf@_val+1,f
  1608  0128                     l2539:	
  1609                           
  1610                           ;doprnt.c: 1271: }
  1611                           ;doprnt.c: 1273: }
  1612                           ;doprnt.c: 1312: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1613  0128  01E5               	clrf	sprintf@c
  1614  0129  0AE5               	incf	sprintf@c,f
  1615  012A  0865               	movf	sprintf@c,w
  1616  012B  3A05               	xorlw	5
  1617  012C  1903               	btfsc	3,2
  1618  012D  294B               	goto	l2551
  1619  012E                     l2543:	
  1620                           
  1621                           ;doprnt.c: 1313: if(_val._val < dpowers[c])
  1622  012E  0865               	movf	sprintf@c,w
  1623  012F  00D9               	movwf	??_sprintf
  1624  0130  0759               	addwf	??_sprintf,w
  1625  0131  3E01               	addlw	low (_dpowers-__stringbase)
  1626  0132  0084               	movwf	4
  1627  0133  118A  2422  118A   	fcall	stringdir
  1628  0136  00DA               	movwf	??_sprintf+1
  1629  0137  118A  2422  118A   	fcall	stringdir
  1630  013A  00DB               	movwf	??_sprintf+2
  1631  013B  085B               	movf	??_sprintf+2,w
  1632  013C  0263               	subwf	sprintf@_val+1,w
  1633  013D  1D03               	skipz
  1634  013E  2941               	goto	u2185
  1635  013F  085A               	movf	??_sprintf+1,w
  1636  0140  0262               	subwf	sprintf@_val,w
  1637  0141                     u2185:	
  1638  0141  1C03               	btfss	3,0
  1639  0142  294B               	goto	l2551
  1640                           
  1641                           ;doprnt.c: 1314: break;
  1642  0143  3001               	movlw	1
  1643  0144  00D9               	movwf	??_sprintf
  1644  0145  0859               	movf	??_sprintf,w
  1645  0146  07E5               	addwf	sprintf@c,f
  1646  0147  0865               	movf	sprintf@c,w
  1647  0148  3A05               	xorlw	5
  1648  0149  1D03               	skipz
  1649  014A  292E               	goto	l2543
  1650  014B                     l2551:	
  1651                           
  1652                           ;doprnt.c: 1352: if(width && flag & 0x03)
  1653  014B  0861               	movf	sprintf@width+1,w
  1654  014C  0460               	iorwf	sprintf@width,w
  1655  014D  1903               	skipnz
  1656  014E  2959               	goto	l316
  1657  014F  085E               	movf	sprintf@flag,w
  1658  0150  3903               	andlw	3
  1659  0151  1903               	btfsc	3,2
  1660  0152  2959               	goto	l316
  1661                           
  1662                           ;doprnt.c: 1353: width--;
  1663  0153  30FF               	movlw	255
  1664  0154  07E0               	addwf	sprintf@width,f
  1665  0155  1803               	skipnc
  1666  0156  0AE1               	incf	sprintf@width+1,f
  1667  0157  30FF               	movlw	255
  1668  0158  07E1               	addwf	sprintf@width+1,f
  1669  0159                     l316:	
  1670                           
  1671                           ;doprnt.c: 1388: if(width > c)
  1672  0159  0865               	movf	sprintf@c,w
  1673  015A  00D9               	movwf	??_sprintf
  1674  015B  01DA               	clrf	??_sprintf+1
  1675  015C  1BD9               	btfsc	??_sprintf,7
  1676  015D  03DA               	decf	??_sprintf+1,f
  1677  015E  085A               	movf	??_sprintf+1,w
  1678  015F  3A80               	xorlw	128
  1679  0160  00DB               	movwf	??_sprintf+2
  1680  0161  0861               	movf	sprintf@width+1,w
  1681  0162  3A80               	xorlw	128
  1682  0163  025B               	subwf	??_sprintf+2,w
  1683  0164  1D03               	skipz
  1684  0165  2968               	goto	u2225
  1685  0166  0860               	movf	sprintf@width,w
  1686  0167  0259               	subwf	??_sprintf,w
  1687  0168                     u2225:	
  1688  0168  1803               	skipnc
  1689  0169  2978               	goto	l2559
  1690                           
  1691                           ;doprnt.c: 1389: width -= c;
  1692  016A  1283               	bcf	3,5	;RP0=0, select bank0
  1693  016B  1303               	bcf	3,6	;RP1=0, select bank0
  1694  016C  0865               	movf	sprintf@c,w
  1695  016D  00D9               	movwf	??_sprintf
  1696  016E  01DA               	clrf	??_sprintf+1
  1697  016F  1BD9               	btfsc	??_sprintf,7
  1698  0170  03DA               	decf	??_sprintf+1,f
  1699  0171  0859               	movf	??_sprintf,w
  1700  0172  02E0               	subwf	sprintf@width,f
  1701  0173  085A               	movf	??_sprintf+1,w
  1702  0174  1C03               	skipc
  1703  0175  03E1               	decf	sprintf@width+1,f
  1704  0176  02E1               	subwf	sprintf@width+1,f
  1705  0177  297C               	goto	l2561
  1706  0178                     l2559:	
  1707                           
  1708                           ;doprnt.c: 1390: else
  1709                           ;doprnt.c: 1391: width = 0;
  1710  0178  1283               	bcf	3,5	;RP0=0, select bank0
  1711  0179  1303               	bcf	3,6	;RP1=0, select bank0
  1712  017A  01E0               	clrf	sprintf@width
  1713  017B  01E1               	clrf	sprintf@width+1
  1714  017C                     l2561:	
  1715                           
  1716                           ;doprnt.c: 1394: if(flag & 0x04) {
  1717  017C  1D5E               	btfss	sprintf@flag,2
  1718  017D  29A3               	goto	l2577
  1719                           
  1720                           ;doprnt.c: 1399: if(flag & 0x03)
  1721  017E  085E               	movf	sprintf@flag,w
  1722  017F  3903               	andlw	3
  1723  0180  1903               	btfsc	3,2
  1724  0181  298D               	goto	l2569
  1725                           
  1726                           ;doprnt.c: 1400: ((*sp++ = ('-')));
  1727  0182  302D               	movlw	45
  1728  0183  00D9               	movwf	??_sprintf
  1729  0184  085F               	movf	sprintf@sp,w
  1730  0185  0084               	movwf	4
  1731  0186  0859               	movf	??_sprintf,w
  1732  0187  1383               	bcf	3,7	;select IRP bank0
  1733  0188  0080               	movwf	0
  1734  0189  3001               	movlw	1
  1735  018A  00D9               	movwf	??_sprintf
  1736  018B  0859               	movf	??_sprintf,w
  1737  018C  07DF               	addwf	sprintf@sp,f
  1738  018D                     l2569:	
  1739                           
  1740                           ;doprnt.c: 1422: if(width)
  1741  018D  0861               	movf	sprintf@width+1,w
  1742  018E  0460               	iorwf	sprintf@width,w
  1743  018F  1903               	skipnz
  1744  0190  29CB               	goto	l2591
  1745                           
  1746                           ;doprnt.c: 1424: ((*sp++ = ('0')));
  1747                           
  1748                           ;doprnt.c: 1423: do
  1749  0191  3030               	movlw	48
  1750  0192  00D9               	movwf	??_sprintf
  1751  0193  085F               	movf	sprintf@sp,w
  1752  0194  0084               	movwf	4
  1753  0195  0859               	movf	??_sprintf,w
  1754  0196  1383               	bcf	3,7	;select IRP bank0
  1755  0197  0080               	movwf	0
  1756  0198  3001               	movlw	1
  1757  0199  00D9               	movwf	??_sprintf
  1758  019A  0859               	movf	??_sprintf,w
  1759  019B  07DF               	addwf	sprintf@sp,f
  1760                           
  1761                           ;doprnt.c: 1425: while(--width);
  1762  019C  30FF               	movlw	255
  1763  019D  07E0               	addwf	sprintf@width,f
  1764  019E  1803               	skipnc
  1765  019F  0AE1               	incf	sprintf@width+1,f
  1766  01A0  30FF               	movlw	255
  1767  01A1  07E1               	addwf	sprintf@width+1,f
  1768  01A2  298D               	goto	l2569
  1769  01A3                     l2577:	
  1770                           ;doprnt.c: 1427: } else
  1771                           
  1772                           
  1773                           ;doprnt.c: 1429: {
  1774                           ;doprnt.c: 1431: if(width
  1775                           ;doprnt.c: 1435: )
  1776  01A3  0861               	movf	sprintf@width+1,w
  1777  01A4  0460               	iorwf	sprintf@width,w
  1778  01A5  1903               	skipnz
  1779  01A6  29BC               	goto	l2585
  1780  01A7                     l2579:	
  1781                           ;doprnt.c: 1436: do
  1782                           
  1783                           
  1784                           ;doprnt.c: 1437: ((*sp++ = (' ')));
  1785  01A7  3020               	movlw	32
  1786  01A8  00D9               	movwf	??_sprintf
  1787  01A9  085F               	movf	sprintf@sp,w
  1788  01AA  0084               	movwf	4
  1789  01AB  0859               	movf	??_sprintf,w
  1790  01AC  1383               	bcf	3,7	;select IRP bank0
  1791  01AD  0080               	movwf	0
  1792  01AE  3001               	movlw	1
  1793  01AF  00D9               	movwf	??_sprintf
  1794  01B0  0859               	movf	??_sprintf,w
  1795  01B1  07DF               	addwf	sprintf@sp,f
  1796                           
  1797                           ;doprnt.c: 1438: while(--width);
  1798  01B2  30FF               	movlw	255
  1799  01B3  07E0               	addwf	sprintf@width,f
  1800  01B4  1803               	skipnc
  1801  01B5  0AE1               	incf	sprintf@width+1,f
  1802  01B6  30FF               	movlw	255
  1803  01B7  07E1               	addwf	sprintf@width+1,f
  1804  01B8  0861               	movf	sprintf@width+1,w
  1805  01B9  0460               	iorwf	sprintf@width,w
  1806  01BA  1D03               	skipz
  1807  01BB  29A7               	goto	l2579
  1808  01BC                     l2585:	
  1809                           
  1810                           ;doprnt.c: 1445: if(flag & 0x03)
  1811  01BC  085E               	movf	sprintf@flag,w
  1812  01BD  3903               	andlw	3
  1813  01BE  1903               	btfsc	3,2
  1814  01BF  29CB               	goto	l2591
  1815                           
  1816                           ;doprnt.c: 1446: ((*sp++ = ('-')));
  1817  01C0  302D               	movlw	45
  1818  01C1  00D9               	movwf	??_sprintf
  1819  01C2  085F               	movf	sprintf@sp,w
  1820  01C3  0084               	movwf	4
  1821  01C4  0859               	movf	??_sprintf,w
  1822  01C5  1383               	bcf	3,7	;select IRP bank0
  1823  01C6  0080               	movwf	0
  1824  01C7  3001               	movlw	1
  1825  01C8  00D9               	movwf	??_sprintf
  1826  01C9  0859               	movf	??_sprintf,w
  1827  01CA  07DF               	addwf	sprintf@sp,f
  1828  01CB                     l2591:	
  1829                           
  1830                           ;doprnt.c: 1476: }
  1831                           ;doprnt.c: 1479: prec = c;
  1832  01CB  0865               	movf	sprintf@c,w
  1833  01CC  00D9               	movwf	??_sprintf
  1834  01CD  0859               	movf	??_sprintf,w
  1835  01CE  00DD               	movwf	sprintf@prec
  1836  01CF                     l2599:	
  1837                           ;doprnt.c: 1481: while(prec--) {
  1838                           
  1839  01CF  30FF               	movlw	-1
  1840  01D0  00D9               	movwf	??_sprintf
  1841  01D1  0859               	movf	??_sprintf,w
  1842  01D2  07DD               	addwf	sprintf@prec,f
  1843  01D3  085D               	movf	sprintf@prec,w
  1844  01D4  3AFF               	xorlw	-1
  1845  01D5  1903               	btfsc	3,2
  1846  01D6  282F               	goto	l2601
  1847                           
  1848                           ;doprnt.c: 1485: {
  1849                           ;doprnt.c: 1496: c = (_val._val / dpowers[prec]) % 10 + '0';
  1850  01D7  300A               	movlw	10
  1851  01D8  00CF               	movwf	?___lwmod
  1852  01D9  3000               	movlw	0
  1853  01DA  00D0               	movwf	?___lwmod+1
  1854  01DB  085D               	movf	sprintf@prec,w
  1855  01DC  00D9               	movwf	??_sprintf
  1856  01DD  0759               	addwf	??_sprintf,w
  1857  01DE  3E01               	addlw	low (_dpowers-__stringbase)
  1858  01DF  0084               	movwf	4
  1859  01E0  118A  2422  118A   	fcall	stringdir
  1860  01E3  00C8               	movwf	?___lwdiv
  1861  01E4  118A  2422  118A   	fcall	stringdir
  1862  01E7  00C9               	movwf	?___lwdiv+1
  1863  01E8  0863               	movf	sprintf@_val+1,w
  1864  01E9  01CB               	clrf	?___lwdiv+3
  1865  01EA  07CB               	addwf	?___lwdiv+3,f
  1866  01EB  0862               	movf	sprintf@_val,w
  1867  01EC  01CA               	clrf	?___lwdiv+2
  1868  01ED  07CA               	addwf	?___lwdiv+2,f
  1869  01EE  118A  2507  118A   	fcall	___lwdiv
  1870  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  1871  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  1872  01F3  0849               	movf	?___lwdiv+1,w
  1873  01F4  01D2               	clrf	?___lwmod+3
  1874  01F5  07D2               	addwf	?___lwmod+3,f
  1875  01F6  0848               	movf	?___lwdiv,w
  1876  01F7  01D1               	clrf	?___lwmod+2
  1877  01F8  07D1               	addwf	?___lwmod+2,f
  1878  01F9  118A  2584  118A   	fcall	___lwmod
  1879  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  1880  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  1881  01FE  084F               	movf	?___lwmod,w
  1882  01FF  3E30               	addlw	48
  1883  0200  00DA               	movwf	??_sprintf+1
  1884  0201  085A               	movf	??_sprintf+1,w
  1885  0202  00E5               	movwf	sprintf@c
  1886                           
  1887                           ;doprnt.c: 1530: }
  1888                           ;doprnt.c: 1531: ((*sp++ = (c)));
  1889  0203  0865               	movf	sprintf@c,w
  1890  0204  00D9               	movwf	??_sprintf
  1891  0205  085F               	movf	sprintf@sp,w
  1892  0206  0084               	movwf	4
  1893  0207  0859               	movf	??_sprintf,w
  1894  0208  1383               	bcf	3,7	;select IRP bank0
  1895  0209  0080               	movwf	0
  1896  020A  3001               	movlw	1
  1897  020B  00D9               	movwf	??_sprintf
  1898  020C  0859               	movf	??_sprintf,w
  1899  020D  07DF               	addwf	sprintf@sp,f
  1900  020E  29CF               	goto	l2599
  1901  020F                     l2603:	
  1902                           ;doprnt.c: 1532: }
  1903                           ;doprnt.c: 1540: }
  1904                           ;doprnt.c: 1542: alldone:
  1905                           
  1906                           
  1907                           ;doprnt.c: 1545: *sp = 0;
  1908  020F  1283               	bcf	3,5	;RP0=0, select bank0
  1909  0210  1303               	bcf	3,6	;RP1=0, select bank0
  1910  0211  085F               	movf	sprintf@sp,w
  1911  0212  0084               	movwf	4
  1912  0213  1383               	bcf	3,7	;select IRP bank0
  1913  0214  0180               	clrf	0
  1914  0215  0008               	return
  1915  0216                     __end_of_sprintf:	
  1916                           ;doprnt.c: 1547: return 0;
  1917                           ;	Return value of _sprintf is never used
  1918                           
  1919                           
  1920                           	psect	text3
  1921  0647                     __ptext3:	
  1922 ;; *************** function ___wmul *****************
  1923 ;; Defined at:
  1924 ;;		line 3 in file "/Applications/microchip/xc8/v1.21/sources/pic/wmul.c"
  1925 ;; Parameters:    Size  Location     Type
  1926 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1927 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;  product         2    4[COMMON] unsigned int 
  1930 ;; Return value:  Size  Location     Type
  1931 ;;                  2    0[BANK0 ] unsigned int 
  1932 ;; Registers used:
  1933 ;;		wreg, status,2, status,0
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1939 ;;      Params:         0       4       0       0       0
  1940 ;;      Locals:         2       0       0       0       0
  1941 ;;      Temps:          0       0       0       0       0
  1942 ;;      Totals:         2       4       0       0       0
  1943 ;;Total ram usage:        6 bytes
  1944 ;; Hardware stack levels used:    1
  1945 ;; Hardware stack levels required when called:    2
  1946 ;; This function calls:
  1947 ;;		Nothing
  1948 ;; This function is called by:
  1949 ;;		_sprintf
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953                           
  1954                           ;psect for function ___wmul
  1955  0647                     ___wmul:	
  1956                           
  1957                           ;incstack = 0
  1958                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1959  0647  01F4               	clrf	___wmul@product
  1960  0648  01F5               	clrf	___wmul@product+1
  1961  0649                     l2941:	
  1962  0649  1283               	bcf	3,5	;RP0=0, select bank0
  1963  064A  1303               	bcf	3,6	;RP1=0, select bank0
  1964  064B  1C48               	btfss	___wmul@multiplier,0
  1965  064C  2E53               	goto	l771
  1966  064D  084A               	movf	___wmul@multiplicand,w
  1967  064E  07F4               	addwf	___wmul@product,f
  1968  064F  1803               	skipnc
  1969  0650  0AF5               	incf	___wmul@product+1,f
  1970  0651  084B               	movf	___wmul@multiplicand+1,w
  1971  0652  07F5               	addwf	___wmul@product+1,f
  1972  0653                     l771:	
  1973  0653  3001               	movlw	1
  1974  0654                     u2805:	
  1975  0654  1003               	clrc
  1976  0655  0DCA               	rlf	___wmul@multiplicand,f
  1977  0656  0DCB               	rlf	___wmul@multiplicand+1,f
  1978  0657  3EFF               	addlw	-1
  1979  0658  1D03               	skipz
  1980  0659  2E54               	goto	u2805
  1981  065A  3001               	movlw	1
  1982  065B                     u2815:	
  1983  065B  1003               	clrc
  1984  065C  0CC9               	rrf	___wmul@multiplier+1,f
  1985  065D  0CC8               	rrf	___wmul@multiplier,f
  1986  065E  3EFF               	addlw	-1
  1987  065F  1D03               	skipz
  1988  0660  2E5B               	goto	u2815
  1989  0661  0849               	movf	___wmul@multiplier+1,w
  1990  0662  0448               	iorwf	___wmul@multiplier,w
  1991  0663  1D03               	skipz
  1992  0664  2E49               	goto	l2941
  1993  0665  0875               	movf	___wmul@product+1,w
  1994  0666  01C9               	clrf	?___wmul+1
  1995  0667  07C9               	addwf	?___wmul+1,f
  1996  0668  0874               	movf	___wmul@product,w
  1997  0669  01C8               	clrf	?___wmul
  1998  066A  07C8               	addwf	?___wmul,f
  1999  066B  0008               	return
  2000  066C                     __end_of___wmul:	
  2001                           
  2002                           	psect	text4
  2003  0584                     __ptext4:	
  2004 ;; *************** function ___lwmod *****************
  2005 ;; Defined at:
  2006 ;;		line 5 in file "/Applications/microchip/xc8/v1.21/sources/pic/lwmod.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;  divisor         2    7[BANK0 ] unsigned int 
  2009 ;;  dividend        2    9[BANK0 ] unsigned int 
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;  counter         1   11[BANK0 ] unsigned char 
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  2    7[BANK0 ] unsigned int 
  2014 ;; Registers used:
  2015 ;;		wreg, status,2, status,0
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2021 ;;      Params:         0       4       0       0       0
  2022 ;;      Locals:         0       1       0       0       0
  2023 ;;      Temps:          1       0       0       0       0
  2024 ;;      Totals:         1       5       0       0       0
  2025 ;;Total ram usage:        6 bytes
  2026 ;; Hardware stack levels used:    1
  2027 ;; Hardware stack levels required when called:    2
  2028 ;; This function calls:
  2029 ;;		Nothing
  2030 ;; This function is called by:
  2031 ;;		_sprintf
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           
  2036                           ;psect for function ___lwmod
  2037  0584                     ___lwmod:	
  2038                           
  2039                           ;incstack = 0
  2040                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2041  0584  1283               	bcf	3,5	;RP0=0, select bank0
  2042  0585  1303               	bcf	3,6	;RP1=0, select bank0
  2043  0586  0850               	movf	___lwmod@divisor+1,w
  2044  0587  044F               	iorwf	___lwmod@divisor,w
  2045  0588  1903               	skipnz
  2046  0589  2DB3               	goto	l2935
  2047  058A  01D3               	clrf	___lwmod@counter
  2048  058B  0AD3               	incf	___lwmod@counter,f
  2049  058C                     l2925:	
  2050  058C  1BD0               	btfsc	___lwmod@divisor+1,7
  2051  058D  2D9A               	goto	l2927
  2052  058E  3001               	movlw	1
  2053  058F                     u2745:	
  2054  058F  1003               	clrc
  2055  0590  0DCF               	rlf	___lwmod@divisor,f
  2056  0591  0DD0               	rlf	___lwmod@divisor+1,f
  2057  0592  3EFF               	addlw	-1
  2058  0593  1D03               	skipz
  2059  0594  2D8F               	goto	u2745
  2060  0595  3001               	movlw	1
  2061  0596  00F5               	movwf	??___lwmod
  2062  0597  0875               	movf	??___lwmod,w
  2063  0598  07D3               	addwf	___lwmod@counter,f
  2064  0599  2D8C               	goto	l2925
  2065  059A                     l2927:	
  2066  059A  0850               	movf	___lwmod@divisor+1,w
  2067  059B  0252               	subwf	___lwmod@dividend+1,w
  2068  059C  1D03               	skipz
  2069  059D  2DA0               	goto	u2765
  2070  059E  084F               	movf	___lwmod@divisor,w
  2071  059F  0251               	subwf	___lwmod@dividend,w
  2072  05A0                     u2765:	
  2073  05A0  1C03               	skipc
  2074  05A1  2DA8               	goto	l2931
  2075  05A2  084F               	movf	___lwmod@divisor,w
  2076  05A3  02D1               	subwf	___lwmod@dividend,f
  2077  05A4  0850               	movf	___lwmod@divisor+1,w
  2078  05A5  1C03               	skipc
  2079  05A6  03D2               	decf	___lwmod@dividend+1,f
  2080  05A7  02D2               	subwf	___lwmod@dividend+1,f
  2081  05A8                     l2931:	
  2082  05A8  3001               	movlw	1
  2083  05A9                     u2775:	
  2084  05A9  1003               	clrc
  2085  05AA  0CD0               	rrf	___lwmod@divisor+1,f
  2086  05AB  0CCF               	rrf	___lwmod@divisor,f
  2087  05AC  3EFF               	addlw	-1
  2088  05AD  1D03               	skipz
  2089  05AE  2DA9               	goto	u2775
  2090  05AF  3001               	movlw	1
  2091  05B0  02D3               	subwf	___lwmod@counter,f
  2092  05B1  1D03               	btfss	3,2
  2093  05B2  2D9A               	goto	l2927
  2094  05B3                     l2935:	
  2095  05B3  0852               	movf	___lwmod@dividend+1,w
  2096  05B4  01D0               	clrf	?___lwmod+1
  2097  05B5  07D0               	addwf	?___lwmod+1,f
  2098  05B6  0851               	movf	___lwmod@dividend,w
  2099  05B7  01CF               	clrf	?___lwmod
  2100  05B8  07CF               	addwf	?___lwmod,f
  2101  05B9  0008               	return
  2102  05BA                     __end_of___lwmod:	
  2103                           
  2104                           	psect	text5
  2105  0507                     __ptext5:	
  2106 ;; *************** function ___lwdiv *****************
  2107 ;; Defined at:
  2108 ;;		line 5 in file "/Applications/microchip/xc8/v1.21/sources/pic/lwdiv.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;  divisor         2    0[BANK0 ] unsigned int 
  2111 ;;  dividend        2    2[BANK0 ] unsigned int 
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;  quotient        2    5[BANK0 ] unsigned int 
  2114 ;;  counter         1    4[BANK0 ] unsigned char 
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  2    0[BANK0 ] unsigned int 
  2117 ;; Registers used:
  2118 ;;		wreg, status,2, status,0
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2124 ;;      Params:         0       4       0       0       0
  2125 ;;      Locals:         0       3       0       0       0
  2126 ;;      Temps:          1       0       0       0       0
  2127 ;;      Totals:         1       7       0       0       0
  2128 ;;Total ram usage:        8 bytes
  2129 ;; Hardware stack levels used:    1
  2130 ;; Hardware stack levels required when called:    2
  2131 ;; This function calls:
  2132 ;;		Nothing
  2133 ;; This function is called by:
  2134 ;;		_sprintf
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           
  2139                           ;psect for function ___lwdiv
  2140  0507                     ___lwdiv:	
  2141                           
  2142                           ;incstack = 0
  2143                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2144  0507  1283               	bcf	3,5	;RP0=0, select bank0
  2145  0508  1303               	bcf	3,6	;RP1=0, select bank0
  2146  0509  01CD               	clrf	___lwdiv@quotient
  2147  050A  01CE               	clrf	___lwdiv@quotient+1
  2148  050B  0849               	movf	___lwdiv@divisor+1,w
  2149  050C  0448               	iorwf	___lwdiv@divisor,w
  2150  050D  1903               	skipnz
  2151  050E  2D40               	goto	l2913
  2152  050F  01CC               	clrf	___lwdiv@counter
  2153  0510  0ACC               	incf	___lwdiv@counter,f
  2154  0511                     l2901:	
  2155  0511  1BC9               	btfsc	___lwdiv@divisor+1,7
  2156  0512  2D1F               	goto	l2903
  2157  0513  3001               	movlw	1
  2158  0514                     u2675:	
  2159  0514  1003               	clrc
  2160  0515  0DC8               	rlf	___lwdiv@divisor,f
  2161  0516  0DC9               	rlf	___lwdiv@divisor+1,f
  2162  0517  3EFF               	addlw	-1
  2163  0518  1D03               	skipz
  2164  0519  2D14               	goto	u2675
  2165  051A  3001               	movlw	1
  2166  051B  00F4               	movwf	??___lwdiv
  2167  051C  0874               	movf	??___lwdiv,w
  2168  051D  07CC               	addwf	___lwdiv@counter,f
  2169  051E  2D11               	goto	l2901
  2170  051F                     l2903:	
  2171  051F  3001               	movlw	1
  2172  0520                     u2695:	
  2173  0520  1003               	clrc
  2174  0521  0DCD               	rlf	___lwdiv@quotient,f
  2175  0522  0DCE               	rlf	___lwdiv@quotient+1,f
  2176  0523  3EFF               	addlw	-1
  2177  0524  1D03               	skipz
  2178  0525  2D20               	goto	u2695
  2179  0526  0849               	movf	___lwdiv@divisor+1,w
  2180  0527  024B               	subwf	___lwdiv@dividend+1,w
  2181  0528  1D03               	skipz
  2182  0529  2D2C               	goto	u2705
  2183  052A  0848               	movf	___lwdiv@divisor,w
  2184  052B  024A               	subwf	___lwdiv@dividend,w
  2185  052C                     u2705:	
  2186  052C  1C03               	skipc
  2187  052D  2D35               	goto	l2909
  2188  052E  0848               	movf	___lwdiv@divisor,w
  2189  052F  02CA               	subwf	___lwdiv@dividend,f
  2190  0530  0849               	movf	___lwdiv@divisor+1,w
  2191  0531  1C03               	skipc
  2192  0532  03CB               	decf	___lwdiv@dividend+1,f
  2193  0533  02CB               	subwf	___lwdiv@dividend+1,f
  2194  0534  144D               	bsf	___lwdiv@quotient,0
  2195  0535                     l2909:	
  2196  0535  3001               	movlw	1
  2197  0536                     u2715:	
  2198  0536  1003               	clrc
  2199  0537  0CC9               	rrf	___lwdiv@divisor+1,f
  2200  0538  0CC8               	rrf	___lwdiv@divisor,f
  2201  0539  3EFF               	addlw	-1
  2202  053A  1D03               	skipz
  2203  053B  2D36               	goto	u2715
  2204  053C  3001               	movlw	1
  2205  053D  02CC               	subwf	___lwdiv@counter,f
  2206  053E  1D03               	btfss	3,2
  2207  053F  2D1F               	goto	l2903
  2208  0540                     l2913:	
  2209  0540  084E               	movf	___lwdiv@quotient+1,w
  2210  0541  01C9               	clrf	?___lwdiv+1
  2211  0542  07C9               	addwf	?___lwdiv+1,f
  2212  0543  084D               	movf	___lwdiv@quotient,w
  2213  0544  01C8               	clrf	?___lwdiv
  2214  0545  07C8               	addwf	?___lwdiv,f
  2215  0546  0008               	return
  2216  0547                     __end_of___lwdiv:	
  2217                           
  2218                           	psect	text6
  2219  0765                     __ptext6:	
  2220 ;; *************** function _isdigit *****************
  2221 ;; Defined at:
  2222 ;;		line 13 in file "/Applications/microchip/xc8/v1.21/sources/common/isdigit.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;  c               1    wreg     unsigned char 
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;  c               1    5[COMMON] unsigned char 
  2227 ;; Return value:  Size  Location     Type
  2228 ;;		None               void
  2229 ;; Registers used:
  2230 ;;		wreg, status,2, status,0
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2236 ;;      Params:         0       0       0       0       0
  2237 ;;      Locals:         2       0       0       0       0
  2238 ;;      Temps:          0       0       0       0       0
  2239 ;;      Totals:         2       0       0       0       0
  2240 ;;Total ram usage:        2 bytes
  2241 ;; Hardware stack levels used:    1
  2242 ;; Hardware stack levels required when called:    2
  2243 ;; This function calls:
  2244 ;;		Nothing
  2245 ;; This function is called by:
  2246 ;;		_sprintf
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           
  2251                           ;psect for function _isdigit
  2252  0765                     _isdigit:	
  2253                           
  2254                           ;incstack = 0
  2255                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2256                           ;isdigit@c stored from wreg
  2257  0765  00F5               	movwf	isdigit@c
  2258  0766  01F4               	clrf	_isdigit$715
  2259  0767  303A               	movlw	58
  2260  0768  0275               	subwf	isdigit@c,w
  2261  0769  1803               	skipnc
  2262  076A  2F71               	goto	l2887
  2263  076B  3030               	movlw	48
  2264  076C  0275               	subwf	isdigit@c,w
  2265  076D  1C03               	skipc
  2266  076E  2F71               	goto	l2887
  2267  076F  01F4               	clrf	_isdigit$715
  2268  0770  0AF4               	incf	_isdigit$715,f
  2269  0771                     l2887:	
  2270  0771  0C74               	rrf	_isdigit$715,w
  2271  0772  0008               	return
  2272  0773                     __end_of_isdigit:	
  2273                           
  2274                           	psect	text7
  2275  05EB                     __ptext7:	
  2276 ;; *************** function _dhtlib_read11 *****************
  2277 ;; Defined at:
  2278 ;;		line 117 in file "../DHTLib.c"
  2279 ;; Parameters:    Size  Location     Type
  2280 ;;  temp            1    wreg     PTR unsigned char 
  2281 ;;		 -> dht11_task@tb(1), 
  2282 ;;  hum             1    6[BANK0 ] PTR unsigned char 
  2283 ;;		 -> dht11_task@hb(1), 
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;  temp            1   10[BANK0 ] PTR unsigned char 
  2286 ;;		 -> dht11_task@tb(1), 
  2287 ;;  s               1   12[BANK0 ] enum E1000
  2288 ;;  chksum          1   11[BANK0 ] unsigned char 
  2289 ;; Return value:  Size  Location     Type
  2290 ;;                  1    wreg      enum E1128
  2291 ;; Registers used:
  2292 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2298 ;;      Params:         0       1       0       0       0
  2299 ;;      Locals:         0       3       0       0       0
  2300 ;;      Temps:          0       3       0       0       0
  2301 ;;      Totals:         0       7       0       0       0
  2302 ;;Total ram usage:        7 bytes
  2303 ;; Hardware stack levels used:    1
  2304 ;; Hardware stack levels required when called:    4
  2305 ;; This function calls:
  2306 ;;		_dhtlib_read
  2307 ;; This function is called by:
  2308 ;;		_dht11_task
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312                           
  2313                           ;psect for function _dhtlib_read11
  2314  05EB                     _dhtlib_read11:	
  2315                           
  2316                           ;incstack = 0
  2317                           ; Regs used in _dhtlib_read11: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2318                           ;dhtlib_read11@temp stored from wreg
  2319  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  2320  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  2321  05ED  00D2               	movwf	dhtlib_read11@temp
  2322                           
  2323                           ;DHTLib.c: 119: enum dhtlib_status s = dhtlib_read();
  2324  05EE  118A  2383  118A   	fcall	_dhtlib_read
  2325  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  2326  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  2327  05F3  00CF               	movwf	??_dhtlib_read11
  2328  05F4  084F               	movf	??_dhtlib_read11,w
  2329  05F5  00D4               	movwf	dhtlib_read11@s
  2330                           
  2331                           ;DHTLib.c: 120: if (s != E_DHTLIB_OK)
  2332  05F6  0854               	movf	dhtlib_read11@s,w
  2333  05F7  1903               	btfsc	3,2
  2334  05F8  2DFB               	goto	l2461
  2335                           
  2336                           ;DHTLib.c: 121: return s;
  2337  05F9  0854               	movf	dhtlib_read11@s,w
  2338  05FA  0008               	return
  2339  05FB                     l2461:	
  2340                           
  2341                           ;DHTLib.c: 123: unsigned char chksum = bits[0] + bits[1] + bits[2] + bits[3];
  2342  05FB  0828               	movf	_bits+2,w
  2343  05FC  0727               	addwf	_bits+1,w
  2344  05FD  00CF               	movwf	??_dhtlib_read11
  2345  05FE  0829               	movf	_bits+3,w
  2346  05FF  074F               	addwf	??_dhtlib_read11,w
  2347  0600  00D0               	movwf	??_dhtlib_read11+1
  2348  0601  0826               	movf	_bits,w
  2349  0602  0750               	addwf	??_dhtlib_read11+1,w
  2350  0603  00D1               	movwf	??_dhtlib_read11+2
  2351  0604  0851               	movf	??_dhtlib_read11+2,w
  2352  0605  00D3               	movwf	dhtlib_read11@chksum
  2353                           
  2354                           ;DHTLib.c: 124: if (chksum != bits[4])
  2355  0606  082A               	movf	_bits+4,w
  2356  0607  0653               	xorwf	dhtlib_read11@chksum,w
  2357  0608  1903               	skipnz
  2358  0609  2E0C               	goto	l2469
  2359                           
  2360                           ;DHTLib.c: 125: return E_DHTLIB_CHKSUM_ERROR;
  2361  060A  3002               	movlw	2
  2362  060B  0008               	return
  2363  060C                     l2469:	
  2364                           
  2365                           ;DHTLib.c: 127: * hum = bits[0];
  2366  060C  0826               	movf	_bits,w
  2367  060D  00CF               	movwf	??_dhtlib_read11
  2368  060E  084E               	movf	dhtlib_read11@hum,w
  2369  060F  0084               	movwf	4
  2370  0610  084F               	movf	??_dhtlib_read11,w
  2371  0611  1383               	bcf	3,7	;select IRP bank0
  2372  0612  0080               	movwf	0
  2373                           
  2374                           ;DHTLib.c: 128: * temp = bits[2];
  2375  0613  0828               	movf	_bits+2,w
  2376  0614  00CF               	movwf	??_dhtlib_read11
  2377  0615  0852               	movf	dhtlib_read11@temp,w
  2378  0616  0084               	movwf	4
  2379  0617  084F               	movf	??_dhtlib_read11,w
  2380  0618  0080               	movwf	0
  2381                           
  2382                           ;DHTLib.c: 130: return E_DHTLIB_OK;
  2383  0619  3000               	movlw	0
  2384  061A  0008               	return
  2385  061B                     __end_of_dhtlib_read11:	
  2386                           
  2387                           	psect	text8
  2388  0383                     __ptext8:	
  2389 ;; *************** function _dhtlib_read *****************
  2390 ;; Defined at:
  2391 ;;		line 39 in file "../DHTLib.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;		None
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;  i               1    5[BANK0 ] unsigned char 
  2396 ;;  tocounter       1    4[BANK0 ] unsigned char 
  2397 ;;  bcount          1    3[BANK0 ] unsigned char 
  2398 ;;  aindex          1    2[BANK0 ] unsigned char 
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  1    wreg      enum E1000
  2401 ;; Registers used:
  2402 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2408 ;;      Params:         0       0       0       0       0
  2409 ;;      Locals:         0       4       0       0       0
  2410 ;;      Temps:          0       2       0       0       0
  2411 ;;      Totals:         0       6       0       0       0
  2412 ;;Total ram usage:        6 bytes
  2413 ;; Hardware stack levels used:    1
  2414 ;; Hardware stack levels required when called:    3
  2415 ;; This function calls:
  2416 ;;		_dhtlib_start
  2417 ;; This function is called by:
  2418 ;;		_dhtlib_read11
  2419 ;;		_dhtlib_read22
  2420 ;;		_dhtlib_float22
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           
  2425                           ;psect for function _dhtlib_read
  2426  0383                     _dhtlib_read:	
  2427                           
  2428                           ;DHTLib.c: 40: unsigned char i = 0;
  2429                           
  2430                           ;incstack = 0
  2431                           ; Regs used in _dhtlib_read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2432  0383  1283               	bcf	3,5	;RP0=0, select bank0
  2433  0384  1303               	bcf	3,6	;RP1=0, select bank0
  2434  0385  01CD               	clrf	dhtlib_read@i
  2435                           
  2436                           ;DHTLib.c: 41: unsigned char aindex = 0;
  2437  0386  01CA               	clrf	dhtlib_read@aindex
  2438                           
  2439                           ;DHTLib.c: 42: unsigned char bcount = 7;
  2440  0387  3007               	movlw	7
  2441  0388  00C8               	movwf	??_dhtlib_read
  2442  0389  0848               	movf	??_dhtlib_read,w
  2443  038A  00CB               	movwf	dhtlib_read@bcount
  2444                           
  2445                           ;DHTLib.c: 46: PORTBASE tocounter = 0;
  2446  038B  01CC               	clrf	dhtlib_read@tocounter
  2447                           
  2448                           ;DHTLib.c: 49: for (i = 0; i < 5; i++) bits[i] = 0;
  2449  038C  01CD               	clrf	dhtlib_read@i
  2450  038D  3005               	movlw	5
  2451  038E  024D               	subwf	dhtlib_read@i,w
  2452  038F  1803               	btfsc	3,0
  2453  0390  2B9E               	goto	l73
  2454  0391                     l2619:	
  2455  0391  084D               	movf	dhtlib_read@i,w
  2456  0392  3E26               	addlw	_bits& (0+255)
  2457  0393  0084               	movwf	4
  2458  0394  1383               	bcf	3,7	;select IRP bank0
  2459  0395  0180               	clrf	0
  2460  0396  3001               	movlw	1
  2461  0397  00C8               	movwf	??_dhtlib_read
  2462  0398  0848               	movf	??_dhtlib_read,w
  2463  0399  07CD               	addwf	dhtlib_read@i,f
  2464  039A  3005               	movlw	5
  2465  039B  024D               	subwf	dhtlib_read@i,w
  2466  039C  1C03               	skipc
  2467  039D  2B91               	goto	l2619
  2468  039E                     l73:	
  2469                           
  2470                           ;DHTLib.c: 52: INTCONbits.GIE = 0;;
  2471  039E  138B               	bcf	11,7	;volatile
  2472                           
  2473                           ;DHTLib.c: 55: dhtlib_start();
  2474  039F  118A  26F0  118A   	fcall	_dhtlib_start
  2475                           
  2476                           ;DHTLib.c: 58: tocounter = 1;
  2477  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  2478  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  2479  03A4  01CC               	clrf	dhtlib_read@tocounter
  2480  03A5  0ACC               	incf	dhtlib_read@tocounter,f
  2481  03A6                     l74:	
  2482                           ;DHTLib.c: 59: while (!PORTBbits.RB2) {
  2483                           
  2484  03A6  1906               	btfsc	6,2	;volatile
  2485  03A7  2BB3               	goto	l78
  2486                           
  2487                           ;DHTLib.c: 60: if (!tocounter++) {
  2488  03A8  3001               	movlw	1
  2489  03A9  00C8               	movwf	??_dhtlib_read
  2490  03AA  0848               	movf	??_dhtlib_read,w
  2491  03AB  07CC               	addwf	dhtlib_read@tocounter,f
  2492  03AC  084C               	movf	dhtlib_read@tocounter,w
  2493  03AD  3A01               	xorlw	1
  2494  03AE  1D03               	skipz
  2495  03AF  2BA6               	goto	l74
  2496                           
  2497                           ;DHTLib.c: 61: INTCONbits.GIE = 1;;
  2498  03B0  178B               	bsf	11,7	;volatile
  2499                           
  2500                           ;DHTLib.c: 62: return E_DHTLIB_TIMEOUT_ERROR;
  2501  03B1  3001               	movlw	1
  2502  03B2  0008               	return
  2503  03B3                     l78:	
  2504                           
  2505                           ;DHTLib.c: 63: }
  2506                           ;DHTLib.c: 64: }
  2507                           ;DHTLib.c: 66: tocounter = 1;
  2508  03B3  01CC               	clrf	dhtlib_read@tocounter
  2509  03B4  0ACC               	incf	dhtlib_read@tocounter,f
  2510  03B5                     l79:	
  2511                           ;DHTLib.c: 67: while (PORTBbits.RB2) {
  2512                           
  2513  03B5  1D06               	btfss	6,2	;volatile
  2514  03B6  2BC2               	goto	l2645
  2515                           
  2516                           ;DHTLib.c: 68: if (!tocounter++) {
  2517  03B7  3001               	movlw	1
  2518  03B8  00C8               	movwf	??_dhtlib_read
  2519  03B9  0848               	movf	??_dhtlib_read,w
  2520  03BA  07CC               	addwf	dhtlib_read@tocounter,f
  2521  03BB  084C               	movf	dhtlib_read@tocounter,w
  2522  03BC  3A01               	xorlw	1
  2523  03BD  1D03               	skipz
  2524  03BE  2BB5               	goto	l79
  2525                           
  2526                           ;DHTLib.c: 69: INTCONbits.GIE = 1;;
  2527  03BF  178B               	bsf	11,7	;volatile
  2528                           
  2529                           ;DHTLib.c: 70: return E_DHTLIB_TIMEOUT_ERROR;
  2530  03C0  3001               	movlw	1
  2531  03C1  0008               	return
  2532  03C2                     l2645:	
  2533                           
  2534                           ;DHTLib.c: 71: }
  2535                           ;DHTLib.c: 72: }
  2536                           ;DHTLib.c: 74: for (i = 0; i < 40; i++) {
  2537  03C2  01CD               	clrf	dhtlib_read@i
  2538  03C3  3028               	movlw	40
  2539  03C4  024D               	subwf	dhtlib_read@i,w
  2540  03C5  1803               	btfsc	3,0
  2541  03C6  2C15               	goto	l84
  2542  03C7                     l83:	
  2543                           
  2544                           ;DHTLib.c: 75: tocounter = 1;
  2545  03C7  01CC               	clrf	dhtlib_read@tocounter
  2546  03C8  0ACC               	incf	dhtlib_read@tocounter,f
  2547  03C9                     l85:	
  2548                           ;DHTLib.c: 76: while (!PORTBbits.RB2) {
  2549                           
  2550  03C9  1906               	btfsc	6,2	;volatile
  2551  03CA  2BD6               	goto	l2659
  2552                           
  2553                           ;DHTLib.c: 77: if (!tocounter++) {
  2554  03CB  3001               	movlw	1
  2555  03CC  00C8               	movwf	??_dhtlib_read
  2556  03CD  0848               	movf	??_dhtlib_read,w
  2557  03CE  07CC               	addwf	dhtlib_read@tocounter,f
  2558  03CF  084C               	movf	dhtlib_read@tocounter,w
  2559  03D0  3A01               	xorlw	1
  2560  03D1  1D03               	skipz
  2561  03D2  2BC9               	goto	l85
  2562                           
  2563                           ;DHTLib.c: 78: INTCONbits.GIE = 1;;
  2564  03D3  178B               	bsf	11,7	;volatile
  2565                           
  2566                           ;DHTLib.c: 79: return E_DHTLIB_TIMEOUT_ERROR;
  2567  03D4  3001               	movlw	1
  2568  03D5  0008               	return
  2569  03D6                     l2659:	
  2570                           
  2571                           ;DHTLib.c: 80: }
  2572                           ;DHTLib.c: 81: }
  2573                           ;DHTLib.c: 83: _delay((unsigned long)((40)*(2000000/1000000.0)));
  2574  03D6  301A               	movlw	26
  2575  03D7  00C8               	movwf	??_dhtlib_read
  2576  03D8                     u2837:	
  2577  03D8  0BC8               	decfsz	??_dhtlib_read,f
  2578  03D9  2BD8               	goto	u2837
  2579  03DA  0000               	nop
  2580                           
  2581                           ;DHTLib.c: 84: if (!PORTBbits.RB2) {
  2582  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  2583  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  2584  03DD  1D06               	btfss	6,2	;volatile
  2585  03DE  2BFF               	goto	L3
  2586                           
  2587                           ;DHTLib.c: 92: }
  2588                           ;DHTLib.c: 94: tocounter = 1;
  2589                           
  2590                           ;DHTLib.c: 90: }
  2591                           ;DHTLib.c: 91: continue;
  2592                           
  2593                           ;DHTLib.c: 89: bcount--;
  2594                           
  2595                           ;DHTLib.c: 88: } else {
  2596                           
  2597                           ;DHTLib.c: 87: aindex++;
  2598                           
  2599                           ;DHTLib.c: 86: bcount = 7;
  2600                           
  2601                           ;DHTLib.c: 85: if (bcount == 0) {
  2602  03DF  01CC               	clrf	dhtlib_read@tocounter
  2603  03E0  0ACC               	incf	dhtlib_read@tocounter,f
  2604  03E1                     l93:	
  2605                           ;DHTLib.c: 95: while (PORTBbits.RB2) {
  2606                           
  2607  03E1  1D06               	btfss	6,2	;volatile
  2608  03E2  2BEE               	goto	l2679
  2609                           
  2610                           ;DHTLib.c: 96: if (!tocounter++) {
  2611  03E3  3001               	movlw	1
  2612  03E4  00C8               	movwf	??_dhtlib_read
  2613  03E5  0848               	movf	??_dhtlib_read,w
  2614  03E6  07CC               	addwf	dhtlib_read@tocounter,f
  2615  03E7  084C               	movf	dhtlib_read@tocounter,w
  2616  03E8  3A01               	xorlw	1
  2617  03E9  1D03               	skipz
  2618  03EA  2BE1               	goto	l93
  2619                           
  2620                           ;DHTLib.c: 97: INTCONbits.GIE = 1;;
  2621  03EB  178B               	bsf	11,7	;volatile
  2622                           
  2623                           ;DHTLib.c: 98: return E_DHTLIB_TIMEOUT_ERROR;
  2624  03EC  3001               	movlw	1
  2625  03ED  0008               	return
  2626  03EE                     l2679:	
  2627                           
  2628                           ;DHTLib.c: 99: }
  2629                           ;DHTLib.c: 100: }
  2630                           ;DHTLib.c: 102: bits[aindex] |= (1 << bcount);
  2631  03EE  3001               	movlw	1
  2632  03EF  00C8               	movwf	??_dhtlib_read
  2633  03F0  0A4B               	incf	dhtlib_read@bcount,w
  2634  03F1  2BF4               	goto	u2454
  2635  03F2                     u2455:	
  2636  03F2  1003               	clrc
  2637  03F3  0DC8               	rlf	??_dhtlib_read,f
  2638  03F4                     u2454:	
  2639  03F4  3EFF               	addlw	-1
  2640  03F5  1D03               	skipz
  2641  03F6  2BF2               	goto	u2455
  2642  03F7  0848               	movf	??_dhtlib_read,w
  2643  03F8  00C9               	movwf	??_dhtlib_read+1
  2644  03F9  084A               	movf	dhtlib_read@aindex,w
  2645  03FA  3E26               	addlw	_bits& (0+255)
  2646  03FB  0084               	movwf	4
  2647  03FC  0849               	movf	??_dhtlib_read+1,w
  2648  03FD  1383               	bcf	3,7	;select IRP bank0
  2649  03FE  0480               	iorwf	0,f
  2650  03FF                     L3:	
  2651                           
  2652                           ;DHTLib.c: 103: if (bcount == 0) {
  2653  03FF  08CB               	movf	dhtlib_read@bcount,f
  2654  0400  1D03               	skipz
  2655  0401  2C0B               	goto	l2687
  2656                           
  2657                           ;DHTLib.c: 104: bcount = 7;
  2658  0402  3007               	movlw	7
  2659  0403  00C8               	movwf	??_dhtlib_read
  2660  0404  0848               	movf	??_dhtlib_read,w
  2661  0405  00CB               	movwf	dhtlib_read@bcount
  2662                           
  2663                           ;DHTLib.c: 105: aindex++;
  2664  0406  3001               	movlw	1
  2665  0407  00C8               	movwf	??_dhtlib_read
  2666  0408  0848               	movf	??_dhtlib_read,w
  2667  0409  07CA               	addwf	dhtlib_read@aindex,f
  2668                           
  2669                           ;DHTLib.c: 106: } else {
  2670  040A  2C0D               	goto	l92
  2671  040B                     l2687:	
  2672                           
  2673                           ;DHTLib.c: 107: bcount--;
  2674  040B  3001               	movlw	1
  2675  040C  02CB               	subwf	dhtlib_read@bcount,f
  2676  040D                     l92:	
  2677  040D  3001               	movlw	1
  2678  040E  00C8               	movwf	??_dhtlib_read
  2679  040F  0848               	movf	??_dhtlib_read,w
  2680  0410  07CD               	addwf	dhtlib_read@i,f
  2681  0411  3028               	movlw	40
  2682  0412  024D               	subwf	dhtlib_read@i,w
  2683  0413  1C03               	skipc
  2684  0414  2BC7               	goto	l83
  2685  0415                     l84:	
  2686                           
  2687                           ;DHTLib.c: 108: }
  2688                           ;DHTLib.c: 109: }
  2689                           ;DHTLib.c: 111: INTCONbits.GIE = 1;;
  2690  0415  178B               	bsf	11,7	;volatile
  2691                           
  2692                           ;DHTLib.c: 113: return E_DHTLIB_OK;
  2693  0416  3000               	movlw	0
  2694  0417  0008               	return
  2695  0418                     __end_of_dhtlib_read:	
  2696                           
  2697                           	psect	text9
  2698  06F0                     __ptext9:	
  2699 ;; *************** function _dhtlib_start *****************
  2700 ;; Defined at:
  2701 ;;		line 183 in file "../DHTLib.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;		None
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;		None
  2706 ;; Return value:  Size  Location     Type
  2707 ;;		None               void
  2708 ;; Registers used:
  2709 ;;		wreg
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2715 ;;      Params:         0       0       0       0       0
  2716 ;;      Locals:         0       0       0       0       0
  2717 ;;      Temps:          2       0       0       0       0
  2718 ;;      Totals:         2       0       0       0       0
  2719 ;;Total ram usage:        2 bytes
  2720 ;; Hardware stack levels used:    1
  2721 ;; Hardware stack levels required when called:    2
  2722 ;; This function calls:
  2723 ;;		Nothing
  2724 ;; This function is called by:
  2725 ;;		_dhtlib_read
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729                           
  2730                           ;psect for function _dhtlib_start
  2731  06F0                     _dhtlib_start:	
  2732                           
  2733                           ;DHTLib.c: 184: TRISBbits.TRISB2 = 0;
  2734                           
  2735                           ;incstack = 0
  2736                           ; Regs used in _dhtlib_start: [wreg]
  2737  06F0  1683               	bsf	3,5	;RP0=1, select bank1
  2738  06F1  1303               	bcf	3,6	;RP1=0, select bank1
  2739  06F2  1106               	bcf	6,2	;volatile
  2740                           
  2741                           ;DHTLib.c: 185: {PORTBbits.RB2 = 0; PORTBbits.RB2 = 0;};
  2742  06F3  1283               	bcf	3,5	;RP0=0, select bank0
  2743  06F4  1303               	bcf	3,6	;RP1=0, select bank0
  2744  06F5  1106               	bcf	6,2	;volatile
  2745  06F6  1106               	bcf	6,2	;volatile
  2746                           
  2747                           ;DHTLib.c: 187: _delay((unsigned long)((20)*(2000000/1000.0)));
  2748  06F7  3034               	movlw	52
  2749  06F8  00F5               	movwf	??_dhtlib_start+1
  2750  06F9  30F1               	movlw	241
  2751  06FA  00F4               	movwf	??_dhtlib_start
  2752  06FB                     u2847:	
  2753  06FB  0BF4               	decfsz	??_dhtlib_start,f
  2754  06FC  2EFB               	goto	u2847
  2755  06FD  0BF5               	decfsz	??_dhtlib_start+1,f
  2756  06FE  2EFB               	goto	u2847
  2757  06FF  2F00               	nop2
  2758                           
  2759                           ;DHTLib.c: 189: {PORTBbits.RB2 = 1; PORTBbits.RB2 = 1;};
  2760  0700  1283               	bcf	3,5	;RP0=0, select bank0
  2761  0701  1303               	bcf	3,6	;RP1=0, select bank0
  2762  0702  1506               	bsf	6,2	;volatile
  2763  0703  1506               	bsf	6,2	;volatile
  2764                           
  2765                           ;DHTLib.c: 190: TRISBbits.TRISB2 = 1;
  2766  0704  1683               	bsf	3,5	;RP0=1, select bank1
  2767  0705  1303               	bcf	3,6	;RP1=0, select bank1
  2768  0706  1506               	bsf	6,2	;volatile
  2769                           
  2770                           ;DHTLib.c: 192: _delay((unsigned long)((60)*(2000000/1000000.0)));
  2771  0707  3027               	movlw	39
  2772  0708  00F4               	movwf	??_dhtlib_start
  2773  0709                     u2857:	
  2774  0709  0BF4               	decfsz	??_dhtlib_start,f
  2775  070A  2F09               	goto	u2857
  2776  070B  2F0C               	nop2	;nop
  2777  070C  0008               	return
  2778  070D                     __end_of_dhtlib_start:	
  2779                           
  2780                           	psect	text10
  2781  068F                     __ptext10:	
  2782 ;; *************** function _lcd_goto *****************
  2783 ;; Defined at:
  2784 ;;		line 148 in file "../LCD/LCD.c"
  2785 ;; Parameters:    Size  Location     Type
  2786 ;;  col             1    wreg     unsigned char 
  2787 ;;  row             1    7[BANK0 ] unsigned char 
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;  col             1    9[BANK0 ] unsigned char 
  2790 ;; Return value:  Size  Location     Type
  2791 ;;		None               void
  2792 ;; Registers used:
  2793 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2799 ;;      Params:         0       1       0       0       0
  2800 ;;      Locals:         0       1       0       0       0
  2801 ;;      Temps:          0       1       0       0       0
  2802 ;;      Totals:         0       3       0       0       0
  2803 ;;Total ram usage:        3 bytes
  2804 ;; Hardware stack levels used:    1
  2805 ;; Hardware stack levels required when called:    5
  2806 ;; This function calls:
  2807 ;;		_lcd_send
  2808 ;; This function is called by:
  2809 ;;		_dht11_task
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           
  2813                           
  2814                           ;psect for function _lcd_goto
  2815  068F                     _lcd_goto:	
  2816                           
  2817                           ;incstack = 0
  2818                           ; Regs used in _lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2819                           ;lcd_goto@col stored from wreg
  2820  068F  1283               	bcf	3,5	;RP0=0, select bank0
  2821  0690  1303               	bcf	3,6	;RP1=0, select bank0
  2822  0691  00D1               	movwf	lcd_goto@col
  2823                           
  2824                           ;LCD.c: 150: if (row >= lcdrows)
  2825  0692  086E               	movf	_lcdrows,w
  2826  0693  024F               	subwf	lcd_goto@row,w
  2827  0694  1C03               	skipc
  2828  0695  2E9B               	goto	l2447
  2829                           
  2830                           ;LCD.c: 151: row = lcdrows - 1;
  2831  0696  086E               	movf	_lcdrows,w
  2832  0697  3EFF               	addlw	255
  2833  0698  00D0               	movwf	??_lcd_goto
  2834  0699  0850               	movf	??_lcd_goto,w
  2835  069A  00CF               	movwf	lcd_goto@row
  2836  069B                     l2447:	
  2837                           
  2838                           ;LCD.c: 152: if (col >= lcdcolumns)
  2839  069B  086D               	movf	_lcdcolumns,w
  2840  069C  0251               	subwf	lcd_goto@col,w
  2841  069D  1C03               	skipc
  2842  069E  2EA4               	goto	l2451
  2843                           
  2844                           ;LCD.c: 153: col = lcdcolumns - 1;
  2845  069F  086D               	movf	_lcdcolumns,w
  2846  06A0  3EFF               	addlw	255
  2847  06A1  00D0               	movwf	??_lcd_goto
  2848  06A2  0850               	movf	??_lcd_goto,w
  2849  06A3  00D1               	movwf	lcd_goto@col
  2850  06A4                     l2451:	
  2851                           
  2852                           ;LCD.c: 155: lcd_send( E_SET_DDRAM_ADDR | (col + rowaddr[ row ]), 0 );
  2853  06A4  01CC               	clrf	?_lcd_send
  2854  06A5  084F               	movf	lcd_goto@row,w
  2855  06A6  3E0B               	addlw	low (_rowaddr-__stringbase)
  2856  06A7  0084               	movwf	4
  2857  06A8  118A  2422  118A   	fcall	stringdir
  2858  06AB  0751               	addwf	lcd_goto@col,w
  2859  06AC  3880               	iorlw	128
  2860  06AD  118A  25BA         	fcall	_lcd_send
  2861  06AF  0008               	return
  2862  06B0                     __end_of_lcd_goto:	
  2863                           
  2864                           	psect	text11
  2865  06B0                     __ptext11:	
  2866 ;; *************** function _lcd_puts *****************
  2867 ;; Defined at:
  2868 ;;		line 177 in file "../LCD/LCD.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;  string          2    7[BANK0 ] PTR const unsigned char 
  2871 ;;		 -> buf(20), STR_1(17), 
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;		None
  2874 ;; Return value:  Size  Location     Type
  2875 ;;		None               void
  2876 ;; Registers used:
  2877 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2883 ;;      Params:         0       2       0       0       0
  2884 ;;      Locals:         0       0       0       0       0
  2885 ;;      Temps:          0       0       0       0       0
  2886 ;;      Totals:         0       2       0       0       0
  2887 ;;Total ram usage:        2 bytes
  2888 ;; Hardware stack levels used:    1
  2889 ;; Hardware stack levels required when called:    5
  2890 ;; This function calls:
  2891 ;;		_lcd_send
  2892 ;; This function is called by:
  2893 ;;		_main
  2894 ;;		_dht11_task
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898                           
  2899                           ;psect for function _lcd_puts
  2900  06B0                     _lcd_puts:	
  2901  06B0                     l2413:	
  2902                           ;LCD.c: 178: while (*string != '\0')
  2903                           
  2904                           ;incstack = 0
  2905                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2906                           
  2907  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  2908  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  2909  06B2  0850               	movf	lcd_puts@string+1,w
  2910  06B3  00FF               	movwf	127
  2911  06B4  084F               	movf	lcd_puts@string,w
  2912  06B5  0084               	movwf	4
  2913  06B6  118A  2418  118A   	fcall	stringtab
  2914  06B9  3800               	iorlw	0
  2915  06BA  1903               	btfsc	3,2
  2916  06BB  0008               	return
  2917                           
  2918                           ;LCD.c: 179: lcd_send( *string++, 1 );
  2919  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  2920  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  2921  06BE  01CC               	clrf	?_lcd_send
  2922  06BF  0ACC               	incf	?_lcd_send,f
  2923  06C0  0850               	movf	lcd_puts@string+1,w
  2924  06C1  00FF               	movwf	127
  2925  06C2  084F               	movf	lcd_puts@string,w
  2926  06C3  0084               	movwf	4
  2927  06C4  118A  2418  118A   	fcall	stringtab
  2928  06C7  118A  25BA  118A   	fcall	_lcd_send
  2929  06CA  3001               	movlw	1
  2930  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  2931  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  2932  06CD  07CF               	addwf	lcd_puts@string,f
  2933  06CE  1803               	skipnc
  2934  06CF  0AD0               	incf	lcd_puts@string+1,f
  2935  06D0  2EB0               	goto	l2413
  2936  06D1                     __end_of_lcd_puts:	
  2937                           
  2938                           	psect	text12
  2939  04BE                     __ptext12:	
  2940 ;; *************** function _led_task *****************
  2941 ;; Defined at:
  2942 ;;		line 94 in file "main.c"
  2943 ;; Parameters:    Size  Location     Type
  2944 ;;		None
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;		None
  2947 ;; Return value:  Size  Location     Type
  2948 ;;		None               void
  2949 ;; Registers used:
  2950 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2951 ;; Tracked objects:
  2952 ;;		On entry : 0/0
  2953 ;;		On exit  : 0/0
  2954 ;;		Unchanged: 0/0
  2955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2956 ;;      Params:         0       0       0       0       0
  2957 ;;      Locals:         0       0       0       0       0
  2958 ;;      Temps:          0       4       0       0       0
  2959 ;;      Totals:         0       4       0       0       0
  2960 ;;Total ram usage:        4 bytes
  2961 ;; Hardware stack levels used:    1
  2962 ;; Hardware stack levels required when called:    4
  2963 ;; This function calls:
  2964 ;;		_tick_get
  2965 ;; This function is called by:
  2966 ;;		_main
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969                           
  2970                           
  2971                           ;psect for function _led_task
  2972  04BE                     _led_task:	
  2973                           
  2974                           ;main.c: 96: static unsigned long ltime = 0;
  2975                           ;main.c: 98: if (tick_get() - ltime >= ((unsigned long long)((2000000 + 128ull)/8ull)) /
      +                           2) {
  2976                           
  2977                           ;incstack = 0
  2978                           ; Regs used in _led_task: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2979  04BE  1283               	bcf	3,5	;RP0=0, select bank0
  2980  04BF  1303               	bcf	3,6	;RP1=0, select bank0
  2981  04C0  092F               	comf	led_task@ltime,w
  2982  04C1  00CC               	movwf	??_led_task
  2983  04C2  0930               	comf	led_task@ltime+1,w
  2984  04C3  00CD               	movwf	??_led_task+1
  2985  04C4  0931               	comf	led_task@ltime+2,w
  2986  04C5  00CE               	movwf	??_led_task+2
  2987  04C6  0932               	comf	led_task@ltime+3,w
  2988  04C7  00CF               	movwf	??_led_task+3
  2989  04C8  0ACC               	incf	??_led_task,f
  2990  04C9  1903               	skipnz
  2991  04CA  0ACD               	incf	??_led_task+1,f
  2992  04CB  1903               	skipnz
  2993  04CC  0ACE               	incf	??_led_task+2,f
  2994  04CD  1903               	skipnz
  2995  04CE  0ACF               	incf	??_led_task+3,f
  2996  04CF  118A  2721  118A   	fcall	_tick_get
  2997  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  2998  04D3  1303               	bcf	3,6	;RP1=0, select bank0
  2999  04D4  0848               	movf	?_tick_get,w
  3000  04D5  07CC               	addwf	??_led_task,f
  3001  04D6  0849               	movf	?_tick_get+1,w
  3002  04D7  1803               	skipnc
  3003  04D8  0F49               	incfsz	?_tick_get+1,w
  3004  04D9  2CDB               	goto	u2010
  3005  04DA  2CDC               	goto	u2011
  3006  04DB                     u2010:	
  3007  04DB  07CD               	addwf	??_led_task+1,f
  3008  04DC                     u2011:	
  3009  04DC  084A               	movf	?_tick_get+2,w
  3010  04DD  1803               	skipnc
  3011  04DE  0F4A               	incfsz	?_tick_get+2,w
  3012  04DF  2CE1               	goto	u2012
  3013  04E0  2CE2               	goto	u2013
  3014  04E1                     u2012:	
  3015  04E1  07CE               	addwf	??_led_task+2,f
  3016  04E2                     u2013:	
  3017  04E2  084B               	movf	?_tick_get+3,w
  3018  04E3  1803               	skipnc
  3019  04E4  0A4B               	incf	?_tick_get+3,w
  3020  04E5  07CF               	addwf	??_led_task+3,f
  3021  04E6  3000               	movlw	0
  3022  04E7  024F               	subwf	??_led_task+3,w
  3023  04E8  1D03               	skipz
  3024  04E9  2CF4               	goto	u2025
  3025  04EA  3001               	movlw	1
  3026  04EB  024E               	subwf	??_led_task+2,w
  3027  04EC  1D03               	skipz
  3028  04ED  2CF4               	goto	u2025
  3029  04EE  30E8               	movlw	232
  3030  04EF  024D               	subwf	??_led_task+1,w
  3031  04F0  1D03               	skipz
  3032  04F1  2CF4               	goto	u2025
  3033  04F2  3050               	movlw	80
  3034  04F3  024C               	subwf	??_led_task,w
  3035  04F4                     u2025:	
  3036  04F4  1C03               	skipc
  3037  04F5  0008               	return
  3038                           
  3039                           ;main.c: 99: ltime = tick_get();
  3040  04F6  118A  2721         	fcall	_tick_get
  3041  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  3042  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  3043  04FA  084B               	movf	?_tick_get+3,w
  3044  04FB  00B2               	movwf	led_task@ltime+3
  3045  04FC  084A               	movf	?_tick_get+2,w
  3046  04FD  00B1               	movwf	led_task@ltime+2
  3047  04FE  0849               	movf	?_tick_get+1,w
  3048  04FF  00B0               	movwf	led_task@ltime+1
  3049  0500  0848               	movf	?_tick_get,w
  3050  0501  00AF               	movwf	led_task@ltime
  3051                           
  3052                           ;main.c: 102: PORTA ^= 0x10;
  3053  0502  3010               	movlw	16
  3054  0503  00CC               	movwf	??_led_task
  3055  0504  084C               	movf	??_led_task,w
  3056  0505  0685               	xorwf	5,f	;volatile
  3057  0506  0008               	return
  3058  0507                     __end_of_led_task:	
  3059                           
  3060                           	psect	text13
  3061  0721                     __ptext13:	
  3062 ;; *************** function _tick_get *****************
  3063 ;; Defined at:
  3064 ;;		line 42 in file "../Tick/Tick-PIC16.c"
  3065 ;; Parameters:    Size  Location     Type
  3066 ;;		None
  3067 ;; Auto vars:     Size  Location     Type
  3068 ;;		None
  3069 ;; Return value:  Size  Location     Type
  3070 ;;                  4    0[BANK0 ] unsigned long 
  3071 ;; Registers used:
  3072 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3073 ;; Tracked objects:
  3074 ;;		On entry : 0/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3078 ;;      Params:         0       4       0       0       0
  3079 ;;      Locals:         0       0       0       0       0
  3080 ;;      Temps:          0       0       0       0       0
  3081 ;;      Totals:         0       4       0       0       0
  3082 ;;Total ram usage:        4 bytes
  3083 ;; Hardware stack levels used:    1
  3084 ;; Hardware stack levels required when called:    3
  3085 ;; This function calls:
  3086 ;;		_tick_read_internal
  3087 ;; This function is called by:
  3088 ;;		_dht11_task
  3089 ;;		_led_task
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           
  3093                           
  3094                           ;psect for function _tick_get
  3095  0721                     _tick_get:	
  3096                           
  3097                           ;Tick-PIC16.c: 43: tick_read_internal();
  3098                           
  3099                           ;incstack = 0
  3100                           ; Regs used in _tick_get: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3101  0721  118A  26D1         	fcall	_tick_read_internal
  3102                           
  3103                           ;Tick-PIC16.c: 44: return *((uint32_t *) & tickbuffer[0]);
  3104  0723  3020               	movlw	low _tickbuffer
  3105  0724  0084               	movwf	4
  3106  0725  1383               	bcf	3,7	;select IRP bank0
  3107  0726  0800               	movf	0,w
  3108  0727  1283               	bcf	3,5	;RP0=0, select bank0
  3109  0728  1303               	bcf	3,6	;RP1=0, select bank0
  3110  0729  00C8               	movwf	?_tick_get
  3111  072A  0A84               	incf	4,f
  3112  072B  0800               	movf	0,w
  3113  072C  00C9               	movwf	?_tick_get+1
  3114  072D  0A84               	incf	4,f
  3115  072E  0800               	movf	0,w
  3116  072F  00CA               	movwf	?_tick_get+2
  3117  0730  0A84               	incf	4,f
  3118  0731  0800               	movf	0,w
  3119  0732  00CB               	movwf	?_tick_get+3
  3120  0733  0008               	return
  3121  0734                     __end_of_tick_get:	
  3122                           
  3123                           	psect	text14
  3124  06D1                     __ptext14:	
  3125 ;; *************** function _tick_read_internal *****************
  3126 ;; Defined at:
  3127 ;;		line 56 in file "../Tick/Tick-PIC16.c"
  3128 ;; Parameters:    Size  Location     Type
  3129 ;;		None
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;		None
  3132 ;; Return value:  Size  Location     Type
  3133 ;;		None               void
  3134 ;; Registers used:
  3135 ;;		wreg
  3136 ;; Tracked objects:
  3137 ;;		On entry : 0/0
  3138 ;;		On exit  : 0/0
  3139 ;;		Unchanged: 0/0
  3140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3141 ;;      Params:         0       0       0       0       0
  3142 ;;      Locals:         0       0       0       0       0
  3143 ;;      Temps:          1       0       0       0       0
  3144 ;;      Totals:         1       0       0       0       0
  3145 ;;Total ram usage:        1 bytes
  3146 ;; Hardware stack levels used:    1
  3147 ;; Hardware stack levels required when called:    2
  3148 ;; This function calls:
  3149 ;;		Nothing
  3150 ;; This function is called by:
  3151 ;;		_tick_get
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           
  3156                           ;psect for function _tick_read_internal
  3157  06D1                     _tick_read_internal:	
  3158  06D1                     l150:	
  3159                           ;incstack = 0
  3160                           ; Regs used in _tick_read_internal: [wreg]
  3161                           ;Tick-PIC16.c: 57: do {
  3162                           
  3163                           
  3164                           ;Tick-PIC16.c: 58: PIE1bits.TMR1IE = 1;
  3165  06D1  1683               	bsf	3,5	;RP0=1, select bank1
  3166  06D2  1303               	bcf	3,6	;RP1=0, select bank1
  3167  06D3  140C               	bsf	12,0	;volatile
  3168  06D4  0000               	nop	;# 
  3169                           
  3170                           ;Tick-PIC16.c: 60: PIE1bits.TMR1IE = 0;
  3171  06D5  1683               	bsf	3,5	;RP0=1, select bank1
  3172  06D6  1303               	bcf	3,6	;RP1=0, select bank1
  3173  06D7  100C               	bcf	12,0	;volatile
  3174                           
  3175                           ;Tick-PIC16.c: 62: tickbuffer[0] = TMR1L;
  3176  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  3177  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  3178  06DA  080E               	movf	14,w	;volatile
  3179  06DB  00F4               	movwf	??_tick_read_internal
  3180  06DC  0874               	movf	??_tick_read_internal,w
  3181  06DD  00A0               	movwf	_tickbuffer
  3182                           
  3183                           ;Tick-PIC16.c: 63: tickbuffer[1] = TMR1H;
  3184  06DE  080F               	movf	15,w	;volatile
  3185  06DF  00F4               	movwf	??_tick_read_internal
  3186  06E0  0874               	movf	??_tick_read_internal,w
  3187  06E1  00A1               	movwf	_tickbuffer+1
  3188                           
  3189                           ;Tick-PIC16.c: 65: *((uint32_t*) & tickbuffer[2]) = tickcnt;
  3190  06E2  0879               	movf	_tickcnt+3,w	;volatile
  3191  06E3  00A5               	movwf	_tickbuffer+5
  3192  06E4  0878               	movf	_tickcnt+2,w	;volatile
  3193  06E5  00A4               	movwf	_tickbuffer+4
  3194  06E6  0877               	movf	_tickcnt+1,w	;volatile
  3195  06E7  00A3               	movwf	_tickbuffer+3
  3196  06E8  0876               	movf	_tickcnt,w	;volatile
  3197  06E9  00A2               	movwf	_tickbuffer+2
  3198                           
  3199                           ;Tick-PIC16.c: 66: } while (PIR1bits.TMR1IF);
  3200  06EA  180C               	btfsc	12,0	;volatile
  3201  06EB  2ED1               	goto	l150
  3202                           
  3203                           ;Tick-PIC16.c: 67: PIE1bits.TMR1IE = 1;
  3204  06EC  1683               	bsf	3,5	;RP0=1, select bank1
  3205  06ED  1303               	bcf	3,6	;RP1=0, select bank1
  3206  06EE  140C               	bsf	12,0	;volatile
  3207  06EF  0008               	return
  3208  06F0                     __end_of_tick_read_internal:	
  3209                           
  3210                           	psect	text15
  3211  0734                     __ptext15:	
  3212 ;; *************** function _lcd_on *****************
  3213 ;; Defined at:
  3214 ;;		line 90 in file "../LCD/LCD.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;		None
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;		None
  3219 ;; Return value:  Size  Location     Type
  3220 ;;		None               void
  3221 ;; Registers used:
  3222 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3228 ;;      Params:         0       0       0       0       0
  3229 ;;      Locals:         0       0       0       0       0
  3230 ;;      Temps:          0       1       0       0       0
  3231 ;;      Totals:         0       1       0       0       0
  3232 ;;Total ram usage:        1 bytes
  3233 ;; Hardware stack levels used:    1
  3234 ;; Hardware stack levels required when called:    5
  3235 ;; This function calls:
  3236 ;;		_lcd_send
  3237 ;; This function is called by:
  3238 ;;		_main
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241                           
  3242                           
  3243                           ;psect for function _lcd_on
  3244  0734                     _lcd_on:	
  3245                           
  3246                           ;LCD.c: 91: dispctrl |= (1<<2);
  3247                           
  3248                           ;incstack = 0
  3249                           ; Regs used in _lcd_on: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3250  0734  1283               	bcf	3,5	;RP0=0, select bank0
  3251  0735  1303               	bcf	3,6	;RP1=0, select bank0
  3252  0736  1533               	bsf	_dispctrl,2
  3253                           
  3254                           ;LCD.c: 92: lcd_send( E_DISPLAY_ON_OFF_CTRL | dispctrl, 0 );
  3255  0737  01CC               	clrf	?_lcd_send
  3256  0738  0833               	movf	_dispctrl,w
  3257  0739  3808               	iorlw	8
  3258  073A  118A  25BA  118A   	fcall	_lcd_send
  3259                           
  3260                           ;LCD.c: 93: _delay((unsigned long)((50)*(1000000/1000000.0)));
  3261  073D  3010               	movlw	16
  3262  073E  1283               	bcf	3,5	;RP0=0, select bank0
  3263  073F  1303               	bcf	3,6	;RP1=0, select bank0
  3264  0740  00CF               	movwf	??_lcd_on
  3265  0741                     u2867:	
  3266  0741  0BCF               	decfsz	??_lcd_on,f
  3267  0742  2F41               	goto	u2867
  3268  0743  0000               	nop
  3269  0744  0008               	return
  3270  0745                     __end_of_lcd_on:	
  3271                           
  3272                           	psect	text16
  3273  077B                     __ptext16:	
  3274 ;; *************** function _dhtlib_init *****************
  3275 ;; Defined at:
  3276 ;;		line 33 in file "../DHTLib.c"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;		None
  3279 ;; Auto vars:     Size  Location     Type
  3280 ;;		None
  3281 ;; Return value:  Size  Location     Type
  3282 ;;		None               void
  3283 ;; Registers used:
  3284 ;;		None
  3285 ;; Tracked objects:
  3286 ;;		On entry : 0/0
  3287 ;;		On exit  : 0/0
  3288 ;;		Unchanged: 0/0
  3289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3290 ;;      Params:         0       0       0       0       0
  3291 ;;      Locals:         0       0       0       0       0
  3292 ;;      Temps:          0       0       0       0       0
  3293 ;;      Totals:         0       0       0       0       0
  3294 ;;Total ram usage:        0 bytes
  3295 ;; Hardware stack levels used:    1
  3296 ;; Hardware stack levels required when called:    2
  3297 ;; This function calls:
  3298 ;;		Nothing
  3299 ;; This function is called by:
  3300 ;;		_main
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304                           
  3305                           ;psect for function _dhtlib_init
  3306  077B                     _dhtlib_init:	
  3307                           
  3308                           ;DHTLib.c: 35: TRISBbits.TRISB2 = 1;
  3309                           
  3310                           ;incstack = 0
  3311                           ; Regs used in _dhtlib_init: []
  3312  077B  1683               	bsf	3,5	;RP0=1, select bank1
  3313  077C  1303               	bcf	3,6	;RP1=0, select bank1
  3314  077D  1506               	bsf	6,2	;volatile
  3315  077E  0008               	return
  3316  077F                     __end_of_dhtlib_init:	
  3317                           
  3318                           	psect	text17
  3319  0745                     __ptext17:	
  3320 ;; *************** function _tick_init *****************
  3321 ;; Defined at:
  3322 ;;		line 28 in file "../Tick/Tick-PIC16.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;		None
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;		None
  3327 ;; Return value:  Size  Location     Type
  3328 ;;		None               void
  3329 ;; Registers used:
  3330 ;;		wreg, status,2
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 0/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3336 ;;      Params:         0       0       0       0       0
  3337 ;;      Locals:         0       0       0       0       0
  3338 ;;      Temps:          0       0       0       0       0
  3339 ;;      Totals:         0       0       0       0       0
  3340 ;;Total ram usage:        0 bytes
  3341 ;; Hardware stack levels used:    1
  3342 ;; Hardware stack levels required when called:    2
  3343 ;; This function calls:
  3344 ;;		Nothing
  3345 ;; This function is called by:
  3346 ;;		_main
  3347 ;; This function uses a non-reentrant model
  3348 ;;
  3349                           
  3350                           
  3351                           ;psect for function _tick_init
  3352  0745                     _tick_init:	
  3353                           
  3354                           ;Tick-PIC16.c: 29: T1CON = 0;
  3355                           
  3356                           ;incstack = 0
  3357                           ; Regs used in _tick_init: [wreg+status,2]
  3358  0745  1283               	bcf	3,5	;RP0=0, select bank0
  3359  0746  1303               	bcf	3,6	;RP1=0, select bank0
  3360  0747  0190               	clrf	16	;volatile
  3361                           
  3362                           ;Tick-PIC16.c: 30: TMR1L = 0;
  3363  0748  018E               	clrf	14	;volatile
  3364                           
  3365                           ;Tick-PIC16.c: 31: TMR1H = 0;
  3366  0749  018F               	clrf	15	;volatile
  3367                           
  3368                           ;Tick-PIC16.c: 33: PIR1bits.TMR1IF = 0;
  3369  074A  100C               	bcf	12,0	;volatile
  3370                           
  3371                           ;Tick-PIC16.c: 34: PIE1bits.TMR1IE = 1;
  3372  074B  1683               	bsf	3,5	;RP0=1, select bank1
  3373  074C  1303               	bcf	3,6	;RP1=0, select bank1
  3374  074D  140C               	bsf	12,0	;volatile
  3375                           
  3376                           ;Tick-PIC16.c: 35: INTCONbits.GIE = 1;
  3377  074E  178B               	bsf	11,7	;volatile
  3378                           
  3379                           ;Tick-PIC16.c: 36: INTCONbits.PEIE = 1;
  3380  074F  170B               	bsf	11,6	;volatile
  3381                           
  3382                           ;Tick-PIC16.c: 38: T1CON = 0x31;
  3383  0750  3031               	movlw	49
  3384  0751  1283               	bcf	3,5	;RP0=0, select bank0
  3385  0752  1303               	bcf	3,6	;RP1=0, select bank0
  3386  0753  0090               	movwf	16	;volatile
  3387  0754  0008               	return
  3388  0755                     __end_of_tick_init:	
  3389                           
  3390                           	psect	text18
  3391  0216                     __ptext18:	
  3392 ;; *************** function _lcd_init *****************
  3393 ;; Defined at:
  3394 ;;		line 32 in file "../LCD/LCD.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;  iodata          1    wreg     PTR void 
  3397 ;;		 -> NULL(0), 
  3398 ;;  cols            1    7[BANK0 ] unsigned char 
  3399 ;;  rows            1    8[BANK0 ] unsigned char 
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;  iodata          1   11[BANK0 ] PTR void 
  3402 ;;		 -> NULL(0), 
  3403 ;; Return value:  Size  Location     Type
  3404 ;;                  1    wreg      unsigned char 
  3405 ;; Registers used:
  3406 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3407 ;; Tracked objects:
  3408 ;;		On entry : 0/0
  3409 ;;		On exit  : 0/0
  3410 ;;		Unchanged: 0/0
  3411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3412 ;;      Params:         0       2       0       0       0
  3413 ;;      Locals:         0       1       0       0       0
  3414 ;;      Temps:          0       2       0       0       0
  3415 ;;      Totals:         0       5       0       0       0
  3416 ;;Total ram usage:        5 bytes
  3417 ;; Hardware stack levels used:    1
  3418 ;; Hardware stack levels required when called:    5
  3419 ;; This function calls:
  3420 ;;		_lcd_ioinit
  3421 ;;		_lcd_iowrite4
  3422 ;;		_lcd_send
  3423 ;; This function is called by:
  3424 ;;		_main
  3425 ;; This function uses a non-reentrant model
  3426 ;;
  3427                           
  3428                           
  3429                           ;psect for function _lcd_init
  3430  0216                     _lcd_init:	
  3431                           
  3432                           ;incstack = 0
  3433                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3434                           ;lcd_init@iodata stored from wreg
  3435  0216  1283               	bcf	3,5	;RP0=0, select bank0
  3436  0217  1303               	bcf	3,6	;RP1=0, select bank0
  3437  0218  00D3               	movwf	lcd_init@iodata
  3438                           
  3439                           ;LCD.c: 34: iomode = lcd_ioinit(iodata);
  3440  0219  0853               	movf	lcd_init@iodata,w
  3441  021A  118A  266C  118A   	fcall	_lcd_ioinit
  3442  021D  1283               	bcf	3,5	;RP0=0, select bank0
  3443  021E  1303               	bcf	3,6	;RP1=0, select bank0
  3444  021F  00D1               	movwf	??_lcd_init
  3445  0220  0851               	movf	??_lcd_init,w
  3446  0221  00EF               	movwf	_iomode
  3447                           
  3448                           ;LCD.c: 35: lcdrows = rows;
  3449  0222  0850               	movf	lcd_init@rows,w
  3450  0223  00D1               	movwf	??_lcd_init
  3451  0224  0851               	movf	??_lcd_init,w
  3452  0225  00EE               	movwf	_lcdrows
  3453                           
  3454                           ;LCD.c: 36: lcdcolumns = cols;
  3455  0226  084F               	movf	lcd_init@cols,w
  3456  0227  00D1               	movwf	??_lcd_init
  3457  0228  0851               	movf	??_lcd_init,w
  3458  0229  00ED               	movwf	_lcdcolumns
  3459                           
  3460                           ;LCD.c: 39: _delay((unsigned long)((100)*(1000000/1000.0)));
  3461  022A  3082               	movlw	130
  3462  022B  00D2               	movwf	??_lcd_init+1
  3463  022C  30DD               	movlw	221
  3464  022D  00D1               	movwf	??_lcd_init
  3465  022E                     u2877:	
  3466  022E  0BD1               	decfsz	??_lcd_init,f
  3467  022F  2A2E               	goto	u2877
  3468  0230  0BD2               	decfsz	??_lcd_init+1,f
  3469  0231  2A2E               	goto	u2877
  3470  0232  2A33               	nop2
  3471                           
  3472                           ;LCD.c: 42: if (iomode == 4) {
  3473  0233  1283               	bcf	3,5	;RP0=0, select bank0
  3474  0234  1303               	bcf	3,6	;RP1=0, select bank0
  3475  0235  086F               	movf	_iomode,w
  3476  0236  3A04               	xorlw	4
  3477  0237  1D03               	skipz
  3478  0238  2A77               	goto	l2377
  3479                           
  3480                           ;LCD.c: 45: lcd_iowrite4(0x03);
  3481  0239  3003               	movlw	3
  3482  023A  118A  2547  118A   	fcall	_lcd_iowrite4
  3483                           
  3484                           ;LCD.c: 46: _delay((unsigned long)((5)*(1000000/1000.0)));
  3485  023D  3007               	movlw	7
  3486  023E  1283               	bcf	3,5	;RP0=0, select bank0
  3487  023F  1303               	bcf	3,6	;RP1=0, select bank0
  3488  0240  00D2               	movwf	??_lcd_init+1
  3489  0241  307D               	movlw	125
  3490  0242  00D1               	movwf	??_lcd_init
  3491  0243                     u2887:	
  3492  0243  0BD1               	decfsz	??_lcd_init,f
  3493  0244  2A43               	goto	u2887
  3494  0245  0BD2               	decfsz	??_lcd_init+1,f
  3495  0246  2A43               	goto	u2887
  3496                           
  3497                           ;LCD.c: 47: lcd_iowrite4(0x03);
  3498  0247  3003               	movlw	3
  3499  0248  118A  2547  118A   	fcall	_lcd_iowrite4
  3500                           
  3501                           ;LCD.c: 48: _delay((unsigned long)((120)*(1000000/1000000.0)));
  3502  024B  3027               	movlw	39
  3503  024C  1283               	bcf	3,5	;RP0=0, select bank0
  3504  024D  1303               	bcf	3,6	;RP1=0, select bank0
  3505  024E  00D1               	movwf	??_lcd_init
  3506  024F                     u2897:	
  3507  024F  0BD1               	decfsz	??_lcd_init,f
  3508  0250  2A4F               	goto	u2897
  3509  0251  2A52               	nop2	;nop
  3510                           
  3511                           ;LCD.c: 49: lcd_iowrite4(0x03);
  3512  0252  3003               	movlw	3
  3513  0253  118A  2547  118A   	fcall	_lcd_iowrite4
  3514                           
  3515                           ;LCD.c: 50: _delay((unsigned long)((120)*(1000000/1000000.0)));
  3516  0256  3027               	movlw	39
  3517  0257  1283               	bcf	3,5	;RP0=0, select bank0
  3518  0258  1303               	bcf	3,6	;RP1=0, select bank0
  3519  0259  00D1               	movwf	??_lcd_init
  3520  025A                     u2907:	
  3521  025A  0BD1               	decfsz	??_lcd_init,f
  3522  025B  2A5A               	goto	u2907
  3523  025C  2A5D               	nop2	;nop
  3524                           
  3525                           ;LCD.c: 51: lcd_iowrite4(0x02);
  3526  025D  3002               	movlw	2
  3527  025E  118A  2547  118A   	fcall	_lcd_iowrite4
  3528                           
  3529                           ;LCD.c: 52: _delay((unsigned long)((120)*(1000000/1000000.0)));
  3530  0261  3027               	movlw	39
  3531  0262  1283               	bcf	3,5	;RP0=0, select bank0
  3532  0263  1303               	bcf	3,6	;RP1=0, select bank0
  3533  0264  00D1               	movwf	??_lcd_init
  3534  0265                     u2917:	
  3535  0265  0BD1               	decfsz	??_lcd_init,f
  3536  0266  2A65               	goto	u2917
  3537  0267  2A68               	nop2	;nop
  3538                           
  3539                           ;LCD.c: 53: lcd_send( E_FUNCTION_SET | 0 | (1<<3) | (1<<2), 0 );
  3540  0268  1283               	bcf	3,5	;RP0=0, select bank0
  3541  0269  1303               	bcf	3,6	;RP1=0, select bank0
  3542  026A  01CC               	clrf	?_lcd_send
  3543  026B  302C               	movlw	44
  3544  026C  118A  25BA  118A   	fcall	_lcd_send
  3545                           
  3546                           ;LCD.c: 54: _delay((unsigned long)((50)*(1000000/1000000.0)));
  3547  026F  3010               	movlw	16
  3548  0270  1283               	bcf	3,5	;RP0=0, select bank0
  3549  0271  1303               	bcf	3,6	;RP1=0, select bank0
  3550  0272  00D1               	movwf	??_lcd_init
  3551  0273                     u2927:	
  3552  0273  0BD1               	decfsz	??_lcd_init,f
  3553  0274  2A73               	goto	u2927
  3554  0275  0000               	nop
  3555                           
  3556                           ;LCD.c: 55: } else if (iomode == 8) {
  3557  0276  2AB6               	goto	l2391
  3558  0277                     l2377:	
  3559  0277  1283               	bcf	3,5	;RP0=0, select bank0
  3560  0278  1303               	bcf	3,6	;RP1=0, select bank0
  3561  0279  086F               	movf	_iomode,w
  3562  027A  3A08               	xorlw	8
  3563  027B  1D03               	skipz
  3564  027C  2AB6               	goto	l2391
  3565                           
  3566                           ;LCD.c: 57: lcd_send( E_FUNCTION_SET, 0 );
  3567  027D  01CC               	clrf	?_lcd_send
  3568  027E  3020               	movlw	32
  3569  027F  118A  25BA  118A   	fcall	_lcd_send
  3570                           
  3571                           ;LCD.c: 58: _delay((unsigned long)((5)*(1000000/1000.0)));
  3572  0282  3007               	movlw	7
  3573  0283  1283               	bcf	3,5	;RP0=0, select bank0
  3574  0284  1303               	bcf	3,6	;RP1=0, select bank0
  3575  0285  00D2               	movwf	??_lcd_init+1
  3576  0286  307D               	movlw	125
  3577  0287  00D1               	movwf	??_lcd_init
  3578  0288                     u2937:	
  3579  0288  0BD1               	decfsz	??_lcd_init,f
  3580  0289  2A88               	goto	u2937
  3581  028A  0BD2               	decfsz	??_lcd_init+1,f
  3582  028B  2A88               	goto	u2937
  3583                           
  3584                           ;LCD.c: 59: lcd_send( E_FUNCTION_SET, 0 );
  3585  028C  1283               	bcf	3,5	;RP0=0, select bank0
  3586  028D  1303               	bcf	3,6	;RP1=0, select bank0
  3587  028E  01CC               	clrf	?_lcd_send
  3588  028F  3020               	movlw	32
  3589  0290  118A  25BA  118A   	fcall	_lcd_send
  3590                           
  3591                           ;LCD.c: 60: _delay((unsigned long)((120)*(1000000/1000000.0)));
  3592  0293  3027               	movlw	39
  3593  0294  1283               	bcf	3,5	;RP0=0, select bank0
  3594  0295  1303               	bcf	3,6	;RP1=0, select bank0
  3595  0296  00D1               	movwf	??_lcd_init
  3596  0297                     u2947:	
  3597  0297  0BD1               	decfsz	??_lcd_init,f
  3598  0298  2A97               	goto	u2947
  3599  0299  2A9A               	nop2	;nop
  3600                           
  3601                           ;LCD.c: 61: lcd_send( E_FUNCTION_SET, 0 );
  3602  029A  1283               	bcf	3,5	;RP0=0, select bank0
  3603  029B  1303               	bcf	3,6	;RP1=0, select bank0
  3604  029C  01CC               	clrf	?_lcd_send
  3605  029D  3020               	movlw	32
  3606  029E  118A  25BA  118A   	fcall	_lcd_send
  3607                           
  3608                           ;LCD.c: 62: _delay((unsigned long)((120)*(1000000/1000000.0)));
  3609  02A1  3027               	movlw	39
  3610  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  3611  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  3612  02A4  00D1               	movwf	??_lcd_init
  3613  02A5                     u2957:	
  3614  02A5  0BD1               	decfsz	??_lcd_init,f
  3615  02A6  2AA5               	goto	u2957
  3616  02A7  2AA8               	nop2	;nop
  3617                           
  3618                           ;LCD.c: 63: lcd_send( E_FUNCTION_SET | (1<<4) | (1<<3) | (1<<2), 0 );
  3619  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  3620  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  3621  02AA  01CC               	clrf	?_lcd_send
  3622  02AB  303C               	movlw	60
  3623  02AC  118A  25BA  118A   	fcall	_lcd_send
  3624                           
  3625                           ;LCD.c: 64: _delay((unsigned long)((50)*(1000000/1000000.0)));
  3626  02AF  3010               	movlw	16
  3627  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  3628  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  3629  02B2  00D1               	movwf	??_lcd_init
  3630  02B3                     u2967:	
  3631  02B3  0BD1               	decfsz	??_lcd_init,f
  3632  02B4  2AB3               	goto	u2967
  3633  02B5  0000               	nop
  3634  02B6                     l2391:	
  3635                           
  3636                           ;LCD.c: 65: }
  3637                           ;LCD.c: 67: lcd_send( E_DISPLAY_ON_OFF_CTRL | 0, 0 );
  3638  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  3639  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  3640  02B8  01CC               	clrf	?_lcd_send
  3641  02B9  3008               	movlw	8
  3642  02BA  118A  25BA  118A   	fcall	_lcd_send
  3643                           
  3644                           ;LCD.c: 68: _delay((unsigned long)((50)*(1000000/1000000.0)));
  3645  02BD  3010               	movlw	16
  3646  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  3647  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  3648  02C0  00D1               	movwf	??_lcd_init
  3649  02C1                     u2977:	
  3650  02C1  0BD1               	decfsz	??_lcd_init,f
  3651  02C2  2AC1               	goto	u2977
  3652  02C3  0000               	nop
  3653                           
  3654                           ;LCD.c: 69: lcd_send( E_CLEAR_DISPLAY, 0 );
  3655  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  3656  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  3657  02C6  01CC               	clrf	?_lcd_send
  3658  02C7  3001               	movlw	1
  3659  02C8  118A  25BA  118A   	fcall	_lcd_send
  3660                           
  3661                           ;LCD.c: 70: _delay((unsigned long)((2)*(1000000/1000.0)));
  3662  02CB  3003               	movlw	3
  3663  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  3664  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  3665  02CE  00D2               	movwf	??_lcd_init+1
  3666  02CF  3097               	movlw	151
  3667  02D0  00D1               	movwf	??_lcd_init
  3668  02D1                     u2987:	
  3669  02D1  0BD1               	decfsz	??_lcd_init,f
  3670  02D2  2AD1               	goto	u2987
  3671  02D3  0BD2               	decfsz	??_lcd_init+1,f
  3672  02D4  2AD1               	goto	u2987
  3673  02D5  2AD6               	nop2
  3674                           
  3675                           ;LCD.c: 71: lcd_send( E_ENTRY_MODE_SET | 0 | (1<<1), 0 );
  3676  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  3677  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  3678  02D8  01CC               	clrf	?_lcd_send
  3679  02D9  3006               	movlw	6
  3680  02DA  118A  25BA  118A   	fcall	_lcd_send
  3681                           
  3682                           ;LCD.c: 72: _delay((unsigned long)((50)*(1000000/1000000.0)));
  3683  02DD  3010               	movlw	16
  3684  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  3685  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  3686  02E0  00D1               	movwf	??_lcd_init
  3687  02E1                     u2997:	
  3688  02E1  0BD1               	decfsz	??_lcd_init,f
  3689  02E2  2AE1               	goto	u2997
  3690  02E3  0000               	nop
  3691  02E4  0008               	return
  3692  02E5                     __end_of_lcd_init:	
  3693                           ;LCD.c: 74: return 1;
  3694                           ;	Return value of _lcd_init is never used
  3695                           
  3696                           
  3697                           	psect	text19
  3698  05BA                     __ptext19:	
  3699 ;; *************** function _lcd_send *****************
  3700 ;; Defined at:
  3701 ;;		line 159 in file "../LCD/LCD.c"
  3702 ;; Parameters:    Size  Location     Type
  3703 ;;  data            1    wreg     unsigned char 
  3704 ;;  rs              1    4[BANK0 ] unsigned char 
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;  data            1    6[BANK0 ] unsigned char 
  3707 ;; Return value:  Size  Location     Type
  3708 ;;		None               void
  3709 ;; Registers used:
  3710 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3711 ;; Tracked objects:
  3712 ;;		On entry : 0/0
  3713 ;;		On exit  : 0/0
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3716 ;;      Params:         0       1       0       0       0
  3717 ;;      Locals:         0       1       0       0       0
  3718 ;;      Temps:          0       1       0       0       0
  3719 ;;      Totals:         0       3       0       0       0
  3720 ;;Total ram usage:        3 bytes
  3721 ;; Hardware stack levels used:    1
  3722 ;; Hardware stack levels required when called:    4
  3723 ;; This function calls:
  3724 ;;		_lcd_iowrite4
  3725 ;;		_lcd_ioset
  3726 ;;		_lcd_iowrite8
  3727 ;; This function is called by:
  3728 ;;		_lcd_init
  3729 ;;		_lcd_on
  3730 ;;		_lcd_goto
  3731 ;;		_lcd_puts
  3732 ;;		_lcd_clear
  3733 ;;		_lcd_home
  3734 ;;		_lcd_off
  3735 ;;		_lcd_cursor
  3736 ;;		_lcd_cursor_left
  3737 ;;		_lcd_cursor_right
  3738 ;;		_lcd_scroll_left
  3739 ;;		_lcd_scroll_right
  3740 ;;		_lcd_autoscroll_on
  3741 ;;		_lcd_autoscroll_off
  3742 ;;		_lcd_create_char
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746                           
  3747                           ;psect for function _lcd_send
  3748  05BA                     _lcd_send:	
  3749                           
  3750                           ;incstack = 0
  3751                           ; Regs used in _lcd_send: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3752                           ;lcd_send@data stored from wreg
  3753  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  3754  05BB  1303               	bcf	3,6	;RP1=0, select bank0
  3755  05BC  00CE               	movwf	lcd_send@data
  3756                           
  3757                           ;LCD.c: 161: if (rs)
  3758  05BD  084C               	movf	lcd_send@rs,w
  3759  05BE  1903               	btfsc	3,2
  3760  05BF  2DC3               	goto	l2793
  3761                           
  3762                           ;LCD.c: 162: lcd_ioset(E_RS_PIN,1);
  3763  05C0  01F4               	clrf	?_lcd_ioset
  3764  05C1  0AF4               	incf	?_lcd_ioset,f
  3765  05C2  2DC4               	goto	L4
  3766  05C3                     l2793:	
  3767                           
  3768                           ;LCD.c: 163: else
  3769                           ;LCD.c: 164: lcd_ioset(E_RS_PIN,0);
  3770  05C3  01F4               	clrf	?_lcd_ioset
  3771  05C4                     L4:	
  3772  05C4  3009               	movlw	9
  3773  05C5  118A  2474  118A   	fcall	_lcd_ioset
  3774                           
  3775                           ;LCD.c: 166: lcd_ioset(E_RW_PIN,0);
  3776  05C8  01F4               	clrf	?_lcd_ioset
  3777  05C9  300A               	movlw	10
  3778  05CA  118A  2474  118A   	fcall	_lcd_ioset
  3779                           
  3780                           ;LCD.c: 168: if (iomode == 4) {
  3781  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  3782  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  3783  05CF  086F               	movf	_iomode,w
  3784  05D0  3A04               	xorlw	4
  3785  05D1  1D03               	skipz
  3786  05D2  2DE5               	goto	l2799
  3787                           
  3788                           ;LCD.c: 169: lcd_iowrite4(data >> 4);
  3789  05D3  084E               	movf	lcd_send@data,w
  3790  05D4  00CD               	movwf	??_lcd_send
  3791  05D5  3004               	movlw	4
  3792  05D6                     u2605:	
  3793  05D6  1003               	clrc
  3794  05D7  0CCD               	rrf	??_lcd_send,f
  3795  05D8  3EFF               	addlw	-1
  3796  05D9  1D03               	skipz
  3797  05DA  2DD6               	goto	u2605
  3798  05DB  084D               	movf	??_lcd_send,w
  3799  05DC  118A  2547  118A   	fcall	_lcd_iowrite4
  3800                           
  3801                           ;LCD.c: 170: lcd_iowrite4(data);
  3802  05DF  1283               	bcf	3,5	;RP0=0, select bank0
  3803  05E0  1303               	bcf	3,6	;RP1=0, select bank0
  3804  05E1  084E               	movf	lcd_send@data,w
  3805  05E2  118A  2547         	fcall	_lcd_iowrite4
  3806                           
  3807                           ;LCD.c: 171: } else {
  3808  05E4  0008               	return
  3809  05E5                     l2799:	
  3810                           
  3811                           ;LCD.c: 172: lcd_iowrite8(data);
  3812  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  3813  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  3814  05E7  084E               	movf	lcd_send@data,w
  3815  05E8  118A  2781         	fcall	_lcd_iowrite8
  3816  05EA  0008               	return
  3817  05EB                     __end_of_lcd_send:	
  3818                           
  3819                           	psect	text20
  3820  0781                     __ptext20:	
  3821 ;; *************** function _lcd_iowrite8 *****************
  3822 ;; Defined at:
  3823 ;;		line 141 in file "../LCD/LCD-PIC16.c"
  3824 ;; Parameters:    Size  Location     Type
  3825 ;;  data            1    wreg     unsigned char 
  3826 ;; Auto vars:     Size  Location     Type
  3827 ;;  data            1    0[COMMON] unsigned char 
  3828 ;; Return value:  Size  Location     Type
  3829 ;;		None               void
  3830 ;; Registers used:
  3831 ;;		wreg
  3832 ;; Tracked objects:
  3833 ;;		On entry : 0/0
  3834 ;;		On exit  : 0/0
  3835 ;;		Unchanged: 0/0
  3836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3837 ;;      Params:         0       0       0       0       0
  3838 ;;      Locals:         0       0       0       0       0
  3839 ;;      Temps:          0       0       0       0       0
  3840 ;;      Totals:         0       0       0       0       0
  3841 ;;Total ram usage:        0 bytes
  3842 ;; Hardware stack levels used:    1
  3843 ;; Hardware stack levels required when called:    2
  3844 ;; This function calls:
  3845 ;;		Nothing
  3846 ;; This function is called by:
  3847 ;;		_lcd_send
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850                           
  3851                           
  3852                           ;psect for function _lcd_iowrite8
  3853  0781                     _lcd_iowrite8:	
  3854                           
  3855                           ;incstack = 0
  3856                           ; Regs used in _lcd_iowrite8: [wreg]
  3857  0781  0008               	return
  3858  0782                     __end_of_lcd_iowrite8:	
  3859                           
  3860                           	psect	text21
  3861  0547                     __ptext21:	
  3862 ;; *************** function _lcd_iowrite4 *****************
  3863 ;; Defined at:
  3864 ;;		line 127 in file "../LCD/LCD-PIC16.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;  data            1    wreg     unsigned char 
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;  data            1    2[BANK0 ] unsigned char 
  3869 ;;  i               1    3[BANK0 ] unsigned char 
  3870 ;; Return value:  Size  Location     Type
  3871 ;;		None               void
  3872 ;; Registers used:
  3873 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3874 ;; Tracked objects:
  3875 ;;		On entry : 0/0
  3876 ;;		On exit  : 0/0
  3877 ;;		Unchanged: 0/0
  3878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3879 ;;      Params:         0       0       0       0       0
  3880 ;;      Locals:         0       2       0       0       0
  3881 ;;      Temps:          0       2       0       0       0
  3882 ;;      Totals:         0       4       0       0       0
  3883 ;;Total ram usage:        4 bytes
  3884 ;; Hardware stack levels used:    1
  3885 ;; Hardware stack levels required when called:    3
  3886 ;; This function calls:
  3887 ;;		_lcd_ioset
  3888 ;; This function is called by:
  3889 ;;		_lcd_init
  3890 ;;		_lcd_send
  3891 ;; This function uses a non-reentrant model
  3892 ;;
  3893                           
  3894                           
  3895                           ;psect for function _lcd_iowrite4
  3896  0547                     _lcd_iowrite4:	
  3897                           
  3898                           ;incstack = 0
  3899                           ; Regs used in _lcd_iowrite4: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3900                           ;lcd_iowrite4@data stored from wreg
  3901  0547  1283               	bcf	3,5	;RP0=0, select bank0
  3902  0548  1303               	bcf	3,6	;RP1=0, select bank0
  3903  0549  00CA               	movwf	lcd_iowrite4@data
  3904                           
  3905                           ;LCD-PIC16.c: 129: uint8_t i;
  3906                           ;LCD-PIC16.c: 131: for (i = 4; i < 8; i++)
  3907  054A  3004               	movlw	4
  3908  054B  00C8               	movwf	??_lcd_iowrite4
  3909  054C  0848               	movf	??_lcd_iowrite4,w
  3910  054D  00CB               	movwf	lcd_iowrite4@i
  3911  054E  3008               	movlw	8
  3912  054F  024B               	subwf	lcd_iowrite4@i,w
  3913  0550  1803               	btfsc	3,0
  3914  0551  2D73               	goto	l2783
  3915  0552                     l2777:	
  3916                           
  3917                           ;LCD-PIC16.c: 132: lcd_ioset(i, (data & (1 << i - 4)) ? 1 : 0);
  3918  0552  3001               	movlw	1
  3919  0553  00C8               	movwf	??_lcd_iowrite4
  3920  0554  084B               	movf	lcd_iowrite4@i,w
  3921  0555  3EFC               	addlw	-4
  3922  0556  3E01               	addlw	1
  3923  0557  2D5A               	goto	u2564
  3924  0558                     u2565:	
  3925  0558  1003               	clrc
  3926  0559  0DC8               	rlf	??_lcd_iowrite4,f
  3927  055A                     u2564:	
  3928  055A  3EFF               	addlw	-1
  3929  055B  1D03               	skipz
  3930  055C  2D58               	goto	u2565
  3931  055D  0848               	movf	??_lcd_iowrite4,w
  3932  055E  054A               	andwf	lcd_iowrite4@data,w
  3933  055F  3000               	movlw	0
  3934  0560  1D03               	btfss	3,2
  3935  0561  3001               	movlw	1
  3936  0562  00C9               	movwf	??_lcd_iowrite4+1
  3937  0563  0849               	movf	??_lcd_iowrite4+1,w
  3938  0564  00F4               	movwf	?_lcd_ioset
  3939  0565  084B               	movf	lcd_iowrite4@i,w
  3940  0566  118A  2474  118A   	fcall	_lcd_ioset
  3941  0569  3001               	movlw	1
  3942  056A  1283               	bcf	3,5	;RP0=0, select bank0
  3943  056B  1303               	bcf	3,6	;RP1=0, select bank0
  3944  056C  00C8               	movwf	??_lcd_iowrite4
  3945  056D  0848               	movf	??_lcd_iowrite4,w
  3946  056E  07CB               	addwf	lcd_iowrite4@i,f
  3947  056F  3008               	movlw	8
  3948  0570  024B               	subwf	lcd_iowrite4@i,w
  3949  0571  1C03               	skipc
  3950  0572  2D52               	goto	l2777
  3951  0573                     l2783:	
  3952                           
  3953                           ;LCD-PIC16.c: 134: lcd_ioset(E_EN_PIN,1);
  3954  0573  01F4               	clrf	?_lcd_ioset
  3955  0574  0AF4               	incf	?_lcd_ioset,f
  3956  0575  3008               	movlw	8
  3957  0576  118A  2474  118A   	fcall	_lcd_ioset
  3958                           
  3959                           ;LCD-PIC16.c: 135: _delay((unsigned long)((10)*(1000000/1000000.0)));
  3960  0579  3003               	movlw	3
  3961  057A  1283               	bcf	3,5	;RP0=0, select bank0
  3962  057B  1303               	bcf	3,6	;RP1=0, select bank0
  3963  057C  00C8               	movwf	??_lcd_iowrite4
  3964  057D                     u3007:	
  3965  057D  0BC8               	decfsz	??_lcd_iowrite4,f
  3966  057E  2D7D               	goto	u3007
  3967                           
  3968                           ;LCD-PIC16.c: 136: lcd_ioset(E_EN_PIN,0);
  3969  057F  01F4               	clrf	?_lcd_ioset
  3970  0580  3008               	movlw	8
  3971  0581  118A  2474         	fcall	_lcd_ioset
  3972  0583  0008               	return
  3973  0584                     __end_of_lcd_iowrite4:	
  3974                           
  3975                           	psect	text22
  3976  066C                     __ptext22:	
  3977 ;; *************** function _lcd_ioinit *****************
  3978 ;; Defined at:
  3979 ;;		line 46 in file "../LCD/LCD-PIC16.c"
  3980 ;; Parameters:    Size  Location     Type
  3981 ;;  iodata          1    wreg     PTR void 
  3982 ;;		 -> NULL(0), 
  3983 ;; Auto vars:     Size  Location     Type
  3984 ;;  iodata          1    0[COMMON] PTR void 
  3985 ;;		 -> NULL(0), 
  3986 ;;  i               1    1[BANK0 ] unsigned char 
  3987 ;; Return value:  Size  Location     Type
  3988 ;;                  1    wreg      unsigned char 
  3989 ;; Registers used:
  3990 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3991 ;; Tracked objects:
  3992 ;;		On entry : 0/0
  3993 ;;		On exit  : 0/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3996 ;;      Params:         0       0       0       0       0
  3997 ;;      Locals:         0       1       0       0       0
  3998 ;;      Temps:          0       1       0       0       0
  3999 ;;      Totals:         0       2       0       0       0
  4000 ;;Total ram usage:        2 bytes
  4001 ;; Hardware stack levels used:    1
  4002 ;; Hardware stack levels required when called:    3
  4003 ;; This function calls:
  4004 ;;		_lcd_ioset
  4005 ;; This function is called by:
  4006 ;;		_lcd_init
  4007 ;; This function uses a non-reentrant model
  4008 ;;
  4009                           
  4010                           
  4011                           ;psect for function _lcd_ioinit
  4012  066C                     _lcd_ioinit:	
  4013                           
  4014                           ;LCD-PIC16.c: 47: uint8_t i = 0;
  4015                           
  4016                           ;incstack = 0
  4017                           ; Regs used in _lcd_ioinit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4018  066C  1283               	bcf	3,5	;RP0=0, select bank0
  4019  066D  1303               	bcf	3,6	;RP1=0, select bank0
  4020  066E  01C9               	clrf	lcd_ioinit@i
  4021                           
  4022                           ;LCD-PIC16.c: 50: TRISBbits.TRISB0 = 0;
  4023  066F  1683               	bsf	3,5	;RP0=1, select bank1
  4024  0670  1303               	bcf	3,6	;RP1=0, select bank1
  4025  0671  1006               	bcf	6,0	;volatile
  4026                           
  4027                           ;LCD-PIC16.c: 51: TRISBbits.TRISB1 = 0;
  4028  0672  1086               	bcf	6,1	;volatile
  4029                           
  4030                           ;LCD-PIC16.c: 57: TRISAbits.TRISA0 = 0;
  4031  0673  1005               	bcf	5,0	;volatile
  4032                           
  4033                           ;LCD-PIC16.c: 58: TRISAbits.TRISA1 = 0;
  4034  0674  1085               	bcf	5,1	;volatile
  4035                           
  4036                           ;LCD-PIC16.c: 59: TRISAbits.TRISA2 = 0;
  4037  0675  1105               	bcf	5,2	;volatile
  4038                           
  4039                           ;LCD-PIC16.c: 60: TRISAbits.TRISA3 = 0;
  4040  0676  1185               	bcf	5,3	;volatile
  4041                           
  4042                           ;LCD-PIC16.c: 72: for (i = 0; i < 11; i++)
  4043  0677  1283               	bcf	3,5	;RP0=0, select bank0
  4044  0678  1303               	bcf	3,6	;RP1=0, select bank0
  4045  0679  01C9               	clrf	lcd_ioinit@i
  4046  067A  300B               	movlw	11
  4047  067B  0249               	subwf	lcd_ioinit@i,w
  4048  067C  1803               	btfsc	3,0
  4049  067D  2E8D               	goto	l2769
  4050  067E                     l2763:	
  4051                           
  4052                           ;LCD-PIC16.c: 73: lcd_ioset(i, 0);
  4053  067E  01F4               	clrf	?_lcd_ioset
  4054  067F  0849               	movf	lcd_ioinit@i,w
  4055  0680  118A  2474  118A   	fcall	_lcd_ioset
  4056  0683  3001               	movlw	1
  4057  0684  1283               	bcf	3,5	;RP0=0, select bank0
  4058  0685  1303               	bcf	3,6	;RP1=0, select bank0
  4059  0686  00C8               	movwf	??_lcd_ioinit
  4060  0687  0848               	movf	??_lcd_ioinit,w
  4061  0688  07C9               	addwf	lcd_ioinit@i,f
  4062  0689  300B               	movlw	11
  4063  068A  0249               	subwf	lcd_ioinit@i,w
  4064  068B  1C03               	skipc
  4065  068C  2E7E               	goto	l2763
  4066  068D                     l2769:	
  4067                           
  4068                           ;LCD-PIC16.c: 77: return 4;
  4069  068D  3004               	movlw	4
  4070  068E  0008               	return
  4071  068F                     __end_of_lcd_ioinit:	
  4072                           
  4073                           	psect	text23
  4074  0474                     __ptext23:	
  4075 ;; *************** function _lcd_ioset *****************
  4076 ;; Defined at:
  4077 ;;		line 84 in file "../LCD/LCD-PIC16.c"
  4078 ;; Parameters:    Size  Location     Type
  4079 ;;  pin             1    wreg     enum E1012
  4080 ;;  out             1    4[COMMON] unsigned char 
  4081 ;; Auto vars:     Size  Location     Type
  4082 ;;  pin             1    5[COMMON] enum E1012
  4083 ;; Return value:  Size  Location     Type
  4084 ;;		None               void
  4085 ;; Registers used:
  4086 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4087 ;; Tracked objects:
  4088 ;;		On entry : 0/0
  4089 ;;		On exit  : 0/0
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4092 ;;      Params:         1       0       0       0       0
  4093 ;;      Locals:         1       0       0       0       0
  4094 ;;      Temps:          0       0       0       0       0
  4095 ;;      Totals:         2       0       0       0       0
  4096 ;;Total ram usage:        2 bytes
  4097 ;; Hardware stack levels used:    1
  4098 ;; Hardware stack levels required when called:    2
  4099 ;; This function calls:
  4100 ;;		Nothing
  4101 ;; This function is called by:
  4102 ;;		_lcd_send
  4103 ;;		_lcd_ioinit
  4104 ;;		_lcd_iowrite4
  4105 ;; This function uses a non-reentrant model
  4106 ;;
  4107                           
  4108                           
  4109                           ;psect for function _lcd_ioset
  4110  0474                     _lcd_ioset:	
  4111                           
  4112                           ;incstack = 0
  4113                           ; Regs used in _lcd_ioset: [wreg-fsr0h+status,2+status,0]
  4114                           ;lcd_ioset@pin stored from wreg
  4115  0474  00F5               	movwf	lcd_ioset@pin
  4116                           
  4117                           ;LCD-PIC16.c: 85: switch (pin) {
  4118  0475  2CA6               	goto	l2861
  4119  0476                     l2847:	
  4120                           ;LCD-PIC16.c: 100: case E_D4_PIN:
  4121                           
  4122                           
  4123                           ;LCD-PIC16.c: 101: PORTAbits.RA0 = out;
  4124  0476  0874               	movf	lcd_ioset@out,w
  4125  0477  1283               	bcf	3,5	;RP0=0, select bank0
  4126  0478  1303               	bcf	3,6	;RP1=0, select bank0
  4127  0479  1D03               	skipz
  4128  047A  1405               	bsf	5,0	;volatile
  4129  047B  1903               	skipnz
  4130  047C  1005               	bcf	5,0	;volatile
  4131                           
  4132                           ;LCD-PIC16.c: 102: break;
  4133  047D  0008               	return
  4134  047E                     l2849:	
  4135                           ;LCD-PIC16.c: 103: case E_D5_PIN:
  4136                           
  4137                           
  4138                           ;LCD-PIC16.c: 104: PORTAbits.RA1 = out;
  4139  047E  0874               	movf	lcd_ioset@out,w
  4140  047F  1283               	bcf	3,5	;RP0=0, select bank0
  4141  0480  1303               	bcf	3,6	;RP1=0, select bank0
  4142  0481  1D03               	skipz
  4143  0482  1485               	bsf	5,1	;volatile
  4144  0483  1903               	skipnz
  4145  0484  1085               	bcf	5,1	;volatile
  4146                           
  4147                           ;LCD-PIC16.c: 105: break;
  4148  0485  0008               	return
  4149  0486                     l2851:	
  4150                           ;LCD-PIC16.c: 106: case E_D6_PIN:
  4151                           
  4152                           
  4153                           ;LCD-PIC16.c: 107: PORTAbits.RA2 = out;
  4154  0486  0874               	movf	lcd_ioset@out,w
  4155  0487  1283               	bcf	3,5	;RP0=0, select bank0
  4156  0488  1303               	bcf	3,6	;RP1=0, select bank0
  4157  0489  1D03               	skipz
  4158  048A  1505               	bsf	5,2	;volatile
  4159  048B  1903               	skipnz
  4160  048C  1105               	bcf	5,2	;volatile
  4161                           
  4162                           ;LCD-PIC16.c: 108: break;
  4163  048D  0008               	return
  4164  048E                     l2853:	
  4165                           ;LCD-PIC16.c: 109: case E_D7_PIN:
  4166                           
  4167                           
  4168                           ;LCD-PIC16.c: 110: PORTAbits.RA3 = out;
  4169  048E  0874               	movf	lcd_ioset@out,w
  4170  048F  1283               	bcf	3,5	;RP0=0, select bank0
  4171  0490  1303               	bcf	3,6	;RP1=0, select bank0
  4172  0491  1D03               	skipz
  4173  0492  1585               	bsf	5,3	;volatile
  4174  0493  1903               	skipnz
  4175  0494  1185               	bcf	5,3	;volatile
  4176                           
  4177                           ;LCD-PIC16.c: 111: break;
  4178  0495  0008               	return
  4179  0496                     l2855:	
  4180                           ;LCD-PIC16.c: 112: case E_RS_PIN:
  4181                           
  4182                           
  4183                           ;LCD-PIC16.c: 113: PORTBbits.RB1 = out;
  4184  0496  0874               	movf	lcd_ioset@out,w
  4185  0497  1283               	bcf	3,5	;RP0=0, select bank0
  4186  0498  1303               	bcf	3,6	;RP1=0, select bank0
  4187  0499  1D03               	skipz
  4188  049A  1486               	bsf	6,1	;volatile
  4189  049B  1903               	skipnz
  4190  049C  1086               	bcf	6,1	;volatile
  4191                           
  4192                           ;LCD-PIC16.c: 114: break;
  4193  049D  0008               	return
  4194  049E                     l2857:	
  4195                           ;LCD-PIC16.c: 115: case E_EN_PIN:
  4196                           
  4197                           
  4198                           ;LCD-PIC16.c: 116: PORTBbits.RB0 = out;
  4199  049E  0874               	movf	lcd_ioset@out,w
  4200  049F  1283               	bcf	3,5	;RP0=0, select bank0
  4201  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  4202  04A1  1D03               	skipz
  4203  04A2  1406               	bsf	6,0	;volatile
  4204  04A3  1903               	skipnz
  4205  04A4  1006               	bcf	6,0	;volatile
  4206                           
  4207                           ;LCD-PIC16.c: 123: }
  4208                           
  4209                           ;LCD-PIC16.c: 122: break;
  4210                           
  4211                           ;LCD-PIC16.c: 118: case E_RW_PIN:
  4212                           
  4213                           ;LCD-PIC16.c: 117: break;
  4214  04A5  0008               	return
  4215  04A6                     l2861:	
  4216  04A6  0875               	movf	lcd_ioset@pin,w
  4217                           
  4218                           ; Switch size 1, requested type "space"
  4219                           ; Number of cases is 7, Range of values is 4 to 10
  4220                           ; switch strategies available:
  4221                           ; Name         Instructions Cycles
  4222                           ; simple_byte           22    12 (average)
  4223                           ; direct_byte           24    10 (fixed)
  4224                           ; jumptable            263     9 (fixed)
  4225                           ;	Chosen strategy is simple_byte
  4226  04A7  3A04               	xorlw	4	; case 4
  4227  04A8  1903               	skipnz
  4228  04A9  2C76               	goto	l2847
  4229  04AA  3A01               	xorlw	1	; case 5
  4230  04AB  1903               	skipnz
  4231  04AC  2C7E               	goto	l2849
  4232  04AD  3A03               	xorlw	3	; case 6
  4233  04AE  1903               	skipnz
  4234  04AF  2C86               	goto	l2851
  4235  04B0  3A01               	xorlw	1	; case 7
  4236  04B1  1903               	skipnz
  4237  04B2  2C8E               	goto	l2853
  4238  04B3  3A0F               	xorlw	15	; case 8
  4239  04B4  1903               	skipnz
  4240  04B5  2C9E               	goto	l2857
  4241  04B6  3A01               	xorlw	1	; case 9
  4242  04B7  1903               	skipnz
  4243  04B8  2C96               	goto	l2855
  4244  04B9  3A03               	xorlw	3	; case 10
  4245  04BA  1903               	skipnz
  4246  04BB  2CBD               	goto	l265
  4247  04BC  2CBD               	goto	l265
  4248  04BD                     l265:	
  4249  04BD  0008               	return
  4250  04BE                     __end_of_lcd_ioset:	
  4251                           
  4252                           	psect	text24
  4253  0755                     __ptext24:	
  4254 ;; *************** function _isr *****************
  4255 ;; Defined at:
  4256 ;;		line 110 in file "main.c"
  4257 ;; Parameters:    Size  Location     Type
  4258 ;;		None
  4259 ;; Auto vars:     Size  Location     Type
  4260 ;;		None
  4261 ;; Return value:  Size  Location     Type
  4262 ;;		None               void
  4263 ;; Registers used:
  4264 ;;		wreg, status,2, status,0, pclath, cstack
  4265 ;; Tracked objects:
  4266 ;;		On entry : 0/0
  4267 ;;		On exit  : 0/0
  4268 ;;		Unchanged: 0/0
  4269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4270 ;;      Params:         0       0       0       0       0
  4271 ;;      Locals:         0       0       0       0       0
  4272 ;;      Temps:          4       0       0       0       0
  4273 ;;      Totals:         4       0       0       0       0
  4274 ;;Total ram usage:        4 bytes
  4275 ;; Hardware stack levels used:    1
  4276 ;; Hardware stack levels required when called:    1
  4277 ;; This function calls:
  4278 ;;		_tick_update
  4279 ;; This function is called by:
  4280 ;;		Interrupt level 1
  4281 ;; This function uses a non-reentrant model
  4282 ;;
  4283                           
  4284                           
  4285                           ;psect for function _isr
  4286  0755                     _isr:	
  4287                           
  4288                           ;main.c: 112: tick_update();
  4289  0755  118A  270D  118A   	fcall	_tick_update
  4290  0758  0873               	movf	??_isr+3,w
  4291  0759  1283               	bcf	3,5	;RP0=0, select bank0
  4292  075A  1303               	bcf	3,6	;RP1=0, select bank0
  4293  075B  00FF               	movwf	127
  4294  075C  0872               	movf	??_isr+2,w
  4295  075D  008A               	movwf	10
  4296  075E  0871               	movf	??_isr+1,w
  4297  075F  0084               	movwf	4
  4298  0760  0E70               	swapf	??_isr^(0+-128),w
  4299  0761  0083               	movwf	3
  4300  0762  0EFE               	swapf	126,f
  4301  0763  0E7E               	swapf	126,w
  4302  0764  0009               	retfie
  4303  0765                     __end_of_isr:	
  4304                           
  4305                           	psect	intentry
  4306  0004                     __pintentry:	
  4307                           ;incstack = 0
  4308                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  4309                           
  4310  0004                     interrupt_function:	
  4311  007E                     saved_w	set	btemp
  4312  0004  00FE               	movwf	btemp
  4313  0005  0E03               	swapf	3,w
  4314  0006  00F0               	movwf	??_isr
  4315  0007  0804               	movf	4,w
  4316  0008  00F1               	movwf	??_isr+1
  4317  0009  080A               	movf	10,w
  4318  000A  00F2               	movwf	??_isr+2
  4319  000B  1283               	bcf	3,5	;RP0=0, select bank0
  4320  000C  1303               	bcf	3,6	;RP1=0, select bank0
  4321  000D  087F               	movf	btemp+1,w
  4322  000E  00F3               	movwf	??_isr+3
  4323  000F  118A  2F55         	ljmp	_isr
  4324                           
  4325                           	psect	text25
  4326  070D                     __ptext25:	
  4327 ;; *************** function _tick_update *****************
  4328 ;; Defined at:
  4329 ;;		line 48 in file "../Tick/Tick-PIC16.c"
  4330 ;; Parameters:    Size  Location     Type
  4331 ;;		None
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;		None
  4334 ;; Return value:  Size  Location     Type
  4335 ;;		None               void
  4336 ;; Registers used:
  4337 ;;		wreg
  4338 ;; Tracked objects:
  4339 ;;		On entry : 0/0
  4340 ;;		On exit  : 0/0
  4341 ;;		Unchanged: 0/0
  4342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4343 ;;      Params:         0       0       0       0       0
  4344 ;;      Locals:         0       0       0       0       0
  4345 ;;      Temps:          0       0       0       0       0
  4346 ;;      Totals:         0       0       0       0       0
  4347 ;;Total ram usage:        0 bytes
  4348 ;; Hardware stack levels used:    1
  4349 ;; This function calls:
  4350 ;;		Nothing
  4351 ;; This function is called by:
  4352 ;;		_isr
  4353 ;; This function uses a non-reentrant model
  4354 ;;
  4355                           
  4356                           
  4357                           ;psect for function _tick_update
  4358  070D                     _tick_update:	
  4359                           
  4360                           ;Tick-PIC16.c: 49: if (PIR1bits.TMR1IF) {
  4361                           
  4362                           ;incstack = 0
  4363                           ; Regs used in _tick_update: [wreg]
  4364  070D  1283               	bcf	3,5	;RP0=0, select bank0
  4365  070E  1303               	bcf	3,6	;RP1=0, select bank0
  4366  070F  1C0C               	btfss	12,0	;volatile
  4367  0710  0008               	return
  4368                           
  4369                           ;Tick-PIC16.c: 50: tickcnt++;
  4370  0711  3001               	movlw	1
  4371  0712  07F6               	addwf	_tickcnt,f	;volatile
  4372  0713  3000               	movlw	0
  4373  0714  1803               	skipnc
  4374  0715  3001               	movlw	1
  4375  0716  07F7               	addwf	_tickcnt+1,f	;volatile
  4376  0717  3000               	movlw	0
  4377  0718  1803               	skipnc
  4378  0719  3001               	movlw	1
  4379  071A  07F8               	addwf	_tickcnt+2,f	;volatile
  4380  071B  3000               	movlw	0
  4381  071C  1803               	skipnc
  4382  071D  3001               	movlw	1
  4383  071E  07F9               	addwf	_tickcnt+3,f	;volatile
  4384                           
  4385                           ;Tick-PIC16.c: 51: PIR1bits.TMR1IF = 0;
  4386  071F  100C               	bcf	12,0	;volatile
  4387  0720  0008               	return
  4388  0721                     __end_of_tick_update:	
  4389  007E                     btemp	set	126	;btemp
  4390  007E                     wtemp0	set	126


Data Sizes:
    Strings     62
    Constant    14
    Data        2
    BSS         44
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     37      80
    BANK1            80      3       3
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    ?___lwdiv	unsigned int  size(1) Largest target is 0

    ?___lwmod	unsigned int  size(1) Largest target is 0

    ?___wmul	unsigned int  size(1) Largest target is 0

    lcd_ioinit@iodata	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    ?_tick_get	unsigned long  size(1) Largest target is 0

    sprintf@_val._cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_3(CODE[23]), STR_2(CODE[22]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> buf(BANK0[20]), 

    ?_sprintf	int  size(1) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S532$_cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    lcd_puts@string	PTR const unsigned char  size(2) Largest target is 20
		 -> buf(BANK0[20]), STR_1(CODE[17]), 

    lcd_init@iodata	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    dhtlib_read11@temp	PTR unsigned char  size(1) Largest target is 1
		 -> dht11_task@tb(BANK1[1]), 

    dhtlib_read11@hum	PTR unsigned char  size(1) Largest target is 1
		 -> dht11_task@hb(BANK1[1]), 


Critical Paths under _main in COMMON

    _sprintf->_isdigit
    _sprintf->___lwmod
    _sprintf->___wmul
    ___lwmod->___lwdiv
    _dhtlib_read->_dhtlib_start
    _tick_get->_tick_read_internal
    _lcd_send->_lcd_ioset
    _lcd_iowrite4->_lcd_ioset
    _lcd_ioinit->_lcd_ioset

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_dht11_task
    _dht11_task->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _dhtlib_read11->_dhtlib_read
    _lcd_goto->_lcd_send
    _lcd_puts->_lcd_send
    _led_task->_tick_get
    _lcd_on->_lcd_send
    _lcd_init->_lcd_send
    _lcd_send->_lcd_iowrite4

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_dht11_task

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7851
                                             35 BANK0      2     2      0
                           _lcd_init
                          _tick_init
                        _dhtlib_init
                             _lcd_on
                           _lcd_puts
                           _led_task
                         _dht11_task
 ---------------------------------------------------------------------------------
 (1) _dht11_task                                           8     8      0    4839
                                             30 BANK0      5     5      0
                                              0 BANK1      3     3      0
                           _lcd_puts
                           _tick_get
                           _lcd_goto
                      _dhtlib_read11
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    13      5    2381
                                             12 BANK0     18    13      5
                            _isdigit
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     136
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     232
                                              5 COMMON     1     1      0
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     241
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      99
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _dhtlib_read11                                        7     6      1     618
                                              6 BANK0      7     6      1
                        _dhtlib_read
 ---------------------------------------------------------------------------------
 (3) _dhtlib_read                                          6     6      0     457
                                              0 BANK0      6     6      0
                       _dhtlib_start
 ---------------------------------------------------------------------------------
 (4) _dhtlib_start                                         2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _lcd_goto                                             3     2      1     849
                                              7 BANK0      3     2      1
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_puts                                             2     0      2     784
                                              7 BANK0      2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (1) _led_task                                             4     4      0       0
                                              4 BANK0      4     4      0
                           _tick_get
 ---------------------------------------------------------------------------------
 (2) _tick_get                                             4     0      4       0
                                              0 BANK0      4     0      4
                 _tick_read_internal
 ---------------------------------------------------------------------------------
 (3) _tick_read_internal                                   1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_on                                               1     1      0     719
                                              7 BANK0      1     1      0
                           _lcd_send
 ---------------------------------------------------------------------------------
 (1) _dhtlib_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _tick_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             5     3      2    1509
                                              7 BANK0      5     3      2
                         _lcd_ioinit
                       _lcd_iowrite4
                           _lcd_send
 ---------------------------------------------------------------------------------
 (3) _lcd_send                                             3     2      1     719
                                              4 BANK0      3     2      1
                       _lcd_iowrite4
                          _lcd_ioset
                       _lcd_iowrite8
 ---------------------------------------------------------------------------------
 (4) _lcd_iowrite8                                         1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _lcd_iowrite4                                         4     4      0     378
                                              0 BANK0      4     4      0
                          _lcd_ioset
 ---------------------------------------------------------------------------------
 (2) _lcd_ioinit                                           3     3      0     319
                                              0 BANK0      2     2      0
                          _lcd_ioset
 ---------------------------------------------------------------------------------
 (4) _lcd_ioset                                            2     1      1     217
                                              4 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
                        _tick_update
 ---------------------------------------------------------------------------------
 (7) _tick_update                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_init
     _lcd_ioinit
       _lcd_ioset
     _lcd_iowrite4
       _lcd_ioset
     _lcd_send
       _lcd_iowrite4
         _lcd_ioset
       _lcd_ioset
       _lcd_iowrite8
   _tick_init
   _dhtlib_init
   _lcd_on
     _lcd_send
       _lcd_iowrite4
         _lcd_ioset
       _lcd_ioset
       _lcd_iowrite8
   _lcd_puts
     _lcd_send
       _lcd_iowrite4
         _lcd_ioset
       _lcd_ioset
       _lcd_iowrite8
   _led_task
     _tick_get
       _tick_read_internal
   _dht11_task
     _lcd_puts
       _lcd_send
         _lcd_iowrite4
           _lcd_ioset
         _lcd_ioset
         _lcd_iowrite8
     _tick_get
       _tick_read_internal
     _lcd_goto
       _lcd_send
         _lcd_iowrite4
           _lcd_ioset
         _lcd_ioset
         _lcd_iowrite8
     _dhtlib_read11
       _dhtlib_read
         _dhtlib_start
     _sprintf
       _isdigit
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul

 _isr (ROOT)
   _tick_update

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      3       3       7        3.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     25      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      66      12        0.0%
ABS                  0      0      5D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       9       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Fri Aug 22 01:27:07 2014

              ?_lcd_iowrite4 0070                ?_lcd_iowrite8 0070                            pc 0002  
                __CFG_CP$OFF 0000                           l73 039E                           l74 03A6  
                         l83 03C7                           l92 040D                           l84 0415  
                         l93 03E1                           l85 03C9                           l78 03B3  
                         l79 03B5                           fsr 0004          ___wmul@multiplicand 004A  
                        l150 06D1                          l316 0159                          l265 04BD  
                        l289 0051                          l771 0653                 __CFG_CPD$OFF 0000  
           lcd_ioinit@iodata 0070                          _buf 0034                          _isr 0755  
                        fsr0 0004                          indf 0000                  lcd_goto@col 0051  
                lcd_goto@row 004F            dhtlib_read11@temp 0052                  lcd_ioinit@i 0049  
               dhtlib_read@i 004D                 __CFG_LVP$OFF 0000                         l2413 06B0  
                       l2503 00A4                         l2521 00E2                         l2513 00B7  
                       l2601 002F                         l2451 06A4                         l2523 00F1  
                       l2515 00D1                         l2507 00B5                         l2603 020F  
                       l2435 0365                         l2461 05FB                         l2349 0640  
                       l2391 02B6                         l2447 069B                         l2551 014B  
                       l2543 012E                         l2527 00FA                         l2377 0277  
                       l2561 017C                         l2529 010F                         l2619 0391  
                       l2539 0128                         l2491 005F                         l2483 004D  
                       l2645 03C2                         l2469 060C                         l2901 0511  
                       l2903 051F                         l2591 01CB                         l2559 0178  
                       l2495 006D                         l2913 0540                         l2585 01BC  
                       l2569 018D                         l2577 01A3                         l2489 0056  
                       l2851 0486                         l2763 067E                         l2659 03D6  
                       l2931 05A8                         l2579 01A7                         l2853 048E  
                       l2861 04A6                         l2909 0535                         l2925 058C  
                       l2941 0649                         l2855 0496                         l2847 0476  
                       l2783 0573                         l2687 040B                         l2679 03EE  
                       l2927 059A                         l2935 05B3                         l2599 01CF  
                       l2857 049E                         l2849 047E                         l2769 068D  
                       l2777 0552                         l2793 05C3                         l2799 05E5  
                       l2887 0771                         ?_isr 0070                         STR_1 0463  
                       STR_2 044D                         STR_3 0436                         u2010 04DB  
                       u2011 04DC                         u2012 04E1                         u2013 04E2  
                       u2030 0306                         u2031 0307                         u2032 030C  
                       u2025 04F4                         u2033 030D                         u2045 031F  
                       u3007 057D                         u2135 00AC                         u2225 0168  
                       u2145 00C3                         u2155 00EE                         u2185 0141  
                       u2605 05D6                         u2454 03F4                         u2455 03F2  
                       u2705 052C                         u2715 0536                         u2564 055A  
                       u2565 0558                         u2805 0654                         u2815 065B  
                       u2745 058F                         u2907 025A                         u2675 0514  
                       u2917 0265                         u2837 03D8                         u2765 05A0  
                       u2927 0273                         u2847 06FB                         u2695 0520  
                       u2775 05A9                         u2937 0288                         u2857 0709  
                       u2947 0297                         u2867 0741                         u2957 02A5  
                       u2877 022E                         u2967 02B3                         u2887 0243  
                       u2977 02C1                         u2897 024F                         u2987 02D1  
                       u2997 02E1               ??_dhtlib_start 0074                 __CFG_WRT$OFF 0000  
                       _bits 0026                         _main 061B                         btemp 007E  
               lcd_init@cols 004F                 lcd_init@rows 0050                         start 0011  
              __CFG_IESO$OFF 0000                __CFG_MCLRE$ON 0000               ??_lcd_iowrite4 0048  
             ??_lcd_iowrite8 0074                 lcd_ioset@pin 0075                 lcd_ioset@out 0074  
               lcd_send@data 004E                        ??_isr 0070            dhtlib_read@aindex 004A  
          dhtlib_read@bcount 004B                        ?_main 0070              ??_dhtlib_read11 004F  
              __CFG_WDTE$OFF 0000                        _ANSEL 009B                        _T1CON 0010  
            __end_of___lwdiv 0547              __end_of___lwmod 05BA                        _TMR1H 000F  
                      _TMR1L 000E                        _PORTA 0005               __CFG_CCPMX$RB0 0000  
             __CFG_FCMEN$OFF 0000              __end_of_dpowers 0432              __end_of_isdigit 0773  
__size_of_tick_read_internal 001F               __CFG_BOREN$OFF 0000                        pclath 000A  
        dhtlib_read11@chksum 0053              __end_of_rowaddr 0436                        status 0003  
                      wtemp0 007E              __end_of_sprintf 0216               dhtlib_read11@s 0054  
            __initialization 0013                 __end_of_main 0647                       ??_main 006B  
              lcd_iowrite4@i 004B                       _OSCCON 008F               __CFG_PWRTE$OFF 0000  
               ?_tick_update 0070         __size_of_dhtlib_init 0004         __size_of_dhtlib_read 0095  
           __end_of_lcd_init 02E5             __end_of_lcd_goto 06B0             __end_of_lcd_send 05EB  
           __end_of_lcd_puts 06D1             __end_of_led_task 0507                       ___wmul 0647  
                  ??___lwdiv 0074                    ??___lwmod 0075                       _lcd_on 0734  
                     _iomode 006F         __end_of_dhtlib_start 070D               lcd_init@iodata 0053  
           __end_of_tick_get 0734                    ??_isdigit 0074                       saved_w 007E  
       __end_of_lcd_iowrite4 0584         __end_of_lcd_iowrite8 0782                    ??_sprintf 0059  
    __end_of__initialization 0025               __pcstackCOMMON 0070                 __pidataBANK0 077F  
                 _dht11_task 02E5             lcd_iowrite4@data 004A             lcd_iowrite8@data 0070  
              led_task@ltime 002F           __size_of_lcd_ioset 004A                 dht11_task@hb 00A2  
               dht11_task@tb 00A1                 sprintf@width 0060                   __pbssBANK0 0020  
                 __pmaintext 061B                      ?___wmul 0048                   __pintentry 0004  
                    ?_lcd_on 0070           __size_of_tick_init 0010                   _lcd_ioinit 066C  
                 _lcdcolumns 006D                    ?_lcd_init 004F                    ?_lcd_goto 004F  
                  ?_lcd_send 004C                    ?_lcd_puts 004F                   __stringtab 0418  
                  ?_led_task 0070                    ?_tick_get 0048        __size_of_dhtlib_start 001D  
          __end_of_lcd_ioset 04BE                  ?_dht11_task 0070         __size_of_tick_update 0014  
            __size_of___wmul 0025                      ___lwdiv 0507                      ___lwmod 0584  
            __size_of_lcd_on 0011                      __ptext1 02E5                      __ptext2 0028  
                    __ptext3 0647                      __ptext4 0584                      __ptext5 0507  
                    __ptext6 0765                      __ptext7 05EB                      __ptext8 0383  
                    __ptext9 06F0        __size_of_lcd_iowrite4 003D        __size_of_lcd_iowrite8 0001  
                    _lcdrows 006E                      _dpowers 0428        __end_of_dhtlib_read11 061B  
                    _isdigit 0765                 __size_of_isr 0010                      _tickcnt 0076  
 __end_of_tick_read_internal 06F0                      _rowaddr 0432                      _sprintf 0028  
                    clrloop0 0774                   ??_lcd_init 0051                   ??_lcd_goto 0050  
                 ??_lcd_send 004D                   ??_lcd_puts 0076         end_of_initialization 0025  
                 ??_led_task 004C            __end_of_tick_init 0755                 _dhtlib_start 06F0  
             lcd_puts@string 004F                   ??_tick_get 0075                   _tickbuffer 0020  
            dht11_task@ltick 002B                 _lcd_iowrite4 0547                 _lcd_iowrite8 0781  
                  _PORTAbits 0005                    _PORTBbits 0006                    _TRISAbits 0085  
                  _TRISBbits 0086                  ?_lcd_ioinit 0070          __size_of_dht11_task 009E  
           dhtlib_read11@hum 004E                   lcd_send@rs 004C                ??_dhtlib_init 0074  
              ??_dhtlib_read 0048               __end_of___wmul 066C               __end_of_lcd_on 0745  
        start_initialization 0013                  __end_of_isr 0765          __size_of_lcd_ioinit 0023  
                   ??___wmul 0074          __end_of_dhtlib_init 077F          __end_of_dhtlib_read 0418  
                   ??_lcd_on 004F                  __pdataBANK0 006D                  __pbssCOMMON 0076  
              __pcstackBANK0 0048                __pcstackBANK1 00A0          __end_of__stringdata 0474  
          __size_of_lcd_init 00CF            __size_of_lcd_goto 0021            __size_of_lcd_send 0031  
                sprintf@_val 0062                  sprintf@flag 005E            __size_of_lcd_puts 0021  
                sprintf@prec 005D            __size_of_led_task 0049                    __pnvBANK0 006F  
           ___lwdiv@dividend 004A                 ??_dht11_task 0066            __size_of_tick_get 0013  
                   ?___lwdiv 0048                     ?___lwmod 004F                    _lcd_ioset 0474  
                  __pstrings 0418                     ?_isdigit 0070             ___lwdiv@quotient 004D  
                   ?_sprintf 0054           __end_of_dht11_task 0383            interrupt_function 0004  
             ___wmul@product 0074                    clear_ram0 0773                  _dhtlib_init 077B  
                _dhtlib_read 0383                     _PIE1bits 008C           _tick_read_internal 06D1  
              ??_tick_update 0070                    _tick_init 0745                     _PIR1bits 000C  
       dhtlib_read@tocounter 004C          ?_tick_read_internal 0070                   ?_lcd_ioset 0074  
                __stringbase 0427                  __stringdata 0436            ___wmul@multiplier 0048  
               ??_lcd_ioinit 0048         ??_tick_read_internal 0074                   ?_tick_init 0070  
     __size_of_dhtlib_read11 0030           __end_of_lcd_ioinit 068F             __size_of___lwdiv 0040  
           __size_of___lwmod 0036          __end_of_tick_update 0721           __end_of__stringtab 0428  
                _isdigit$715 0074             __size_of_isdigit 000E              ___lwdiv@divisor 0048  
            ___lwdiv@counter 004C                     __ptext10 068F                     __ptext11 06B0  
                   __ptext20 0781                     __ptext12 04BE                     __ptext21 0547  
                   __ptext13 0721                     __ptext22 066C                     __ptext14 06D1  
                   __ptext23 0474                     __ptext15 0734                     __ptext24 0755  
                   __ptext16 077B                     __ptext25 070D                     __ptext17 0745  
                   __ptext18 0216                     __ptext19 05BA                     _lcd_init 0216  
                   _lcd_goto 068F                     _lcd_send 05BA                     _dispctrl 0033  
                   _lcd_puts 06B0                     _led_task 04BE             __size_of_sprintf 01EE  
              __size_of_main 002C            dht11_task@eResult 00A0                     _tick_get 0721  
                ??_lcd_ioset 0075                   _INTCONbits 000B                _dhtlib_read11 05EB  
                   isdigit@c 0075                     intlevel1 0000                    sprintf@ap 005C  
                  sprintf@sp 005F             ___lwmod@dividend 0051                    stringcode 0422  
                ??_tick_init 0074                  _tick_update 070D                     sprintf@c 0065  
                   sprintf@f 0054               ?_dhtlib_read11 004E              ___lwmod@divisor 004F  
            ___lwmod@counter 0053                     stringdir 0422                     stringtab 0418  
         __CFG_FOSC$INTOSCIO 0000                ?_dhtlib_start 0070                 ?_dhtlib_init 0070  
               ?_dhtlib_read 0070  
